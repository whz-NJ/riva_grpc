// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: riva_nlp.proto

package nvidia.riva.nlp;

public final class RivaNlp {
  private RivaNlp() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface NLPModelParamsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.NLPModelParams)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Requested model to use. If unavailable, the request will return an error
     * </pre>
     *
     * <code>optional string model_name = 1;</code>
     */
    java.lang.String getModelName();
    /**
     * <pre>
     * Requested model to use. If unavailable, the request will return an error
     * </pre>
     *
     * <code>optional string model_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getModelNameBytes();
  }
  /**
   * <pre>
   * NLPModelParams is a metadata message that is included in every request message
   * used by the Core NLP Service and is used to specify model characteristics/requirements
   * </pre>
   *
   * Protobuf type {@code nvidia.riva.nlp.NLPModelParams}
   */
  public  static final class NLPModelParams extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.NLPModelParams)
      NLPModelParamsOrBuilder {
    // Use NLPModelParams.newBuilder() to construct.
    private NLPModelParams(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NLPModelParams() {
      modelName_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private NLPModelParams(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              modelName_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NLPModelParams_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NLPModelParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.NLPModelParams.class, nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder.class);
    }

    public static final int MODEL_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object modelName_;
    /**
     * <pre>
     * Requested model to use. If unavailable, the request will return an error
     * </pre>
     *
     * <code>optional string model_name = 1;</code>
     */
    public java.lang.String getModelName() {
      java.lang.Object ref = modelName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modelName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Requested model to use. If unavailable, the request will return an error
     * </pre>
     *
     * <code>optional string model_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getModelNameBytes() {
      java.lang.Object ref = modelName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modelName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getModelNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, modelName_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getModelNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, modelName_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.NLPModelParams)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.NLPModelParams other = (nvidia.riva.nlp.RivaNlp.NLPModelParams) obj;

      boolean result = true;
      result = result && getModelName()
          .equals(other.getModelName());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + MODEL_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getModelName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.NLPModelParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.NLPModelParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.NLPModelParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.NLPModelParams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.NLPModelParams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.NLPModelParams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.NLPModelParams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.NLPModelParams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.NLPModelParams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.NLPModelParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.NLPModelParams prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * NLPModelParams is a metadata message that is included in every request message
     * used by the Core NLP Service and is used to specify model characteristics/requirements
     * </pre>
     *
     * Protobuf type {@code nvidia.riva.nlp.NLPModelParams}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.NLPModelParams)
        nvidia.riva.nlp.RivaNlp.NLPModelParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NLPModelParams_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NLPModelParams_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.NLPModelParams.class, nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.NLPModelParams.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        modelName_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NLPModelParams_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.NLPModelParams getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.NLPModelParams.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.NLPModelParams build() {
        nvidia.riva.nlp.RivaNlp.NLPModelParams result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.NLPModelParams buildPartial() {
        nvidia.riva.nlp.RivaNlp.NLPModelParams result = new nvidia.riva.nlp.RivaNlp.NLPModelParams(this);
        result.modelName_ = modelName_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.NLPModelParams) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.NLPModelParams)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.NLPModelParams other) {
        if (other == nvidia.riva.nlp.RivaNlp.NLPModelParams.getDefaultInstance()) return this;
        if (!other.getModelName().isEmpty()) {
          modelName_ = other.modelName_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.NLPModelParams parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.NLPModelParams) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object modelName_ = "";
      /**
       * <pre>
       * Requested model to use. If unavailable, the request will return an error
       * </pre>
       *
       * <code>optional string model_name = 1;</code>
       */
      public java.lang.String getModelName() {
        java.lang.Object ref = modelName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          modelName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Requested model to use. If unavailable, the request will return an error
       * </pre>
       *
       * <code>optional string model_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getModelNameBytes() {
        java.lang.Object ref = modelName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modelName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Requested model to use. If unavailable, the request will return an error
       * </pre>
       *
       * <code>optional string model_name = 1;</code>
       */
      public Builder setModelName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        modelName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Requested model to use. If unavailable, the request will return an error
       * </pre>
       *
       * <code>optional string model_name = 1;</code>
       */
      public Builder clearModelName() {
        
        modelName_ = getDefaultInstance().getModelName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Requested model to use. If unavailable, the request will return an error
       * </pre>
       *
       * <code>optional string model_name = 1;</code>
       */
      public Builder setModelNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        modelName_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.NLPModelParams)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.NLPModelParams)
    private static final nvidia.riva.nlp.RivaNlp.NLPModelParams DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.NLPModelParams();
    }

    public static nvidia.riva.nlp.RivaNlp.NLPModelParams getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NLPModelParams>
        PARSER = new com.google.protobuf.AbstractParser<NLPModelParams>() {
      public NLPModelParams parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NLPModelParams(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NLPModelParams> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NLPModelParams> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.NLPModelParams getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TextTransformRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.TextTransformRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    java.util.List<java.lang.String>
        getTextList();
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    int getTextCount();
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    java.lang.String getText(int index);
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes(int index);

    /**
     * <pre>
     * </pre>
     *
     * <code>optional uint32 top_n = 2;</code>
     */
    int getTopN();

    /**
     * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
     */
    boolean hasModel();
    /**
     * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
     */
    nvidia.riva.nlp.RivaNlp.NLPModelParams getModel();
    /**
     * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
     */
    nvidia.riva.nlp.RivaNlp.NLPModelParamsOrBuilder getModelOrBuilder();
  }
  /**
   * <pre>
   * TextTransformRequest is a request type intended for services like TransformText
   * which take an arbitrary text input
   * </pre>
   *
   * Protobuf type {@code nvidia.riva.nlp.TextTransformRequest}
   */
  public  static final class TextTransformRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.TextTransformRequest)
      TextTransformRequestOrBuilder {
    // Use TextTransformRequest.newBuilder() to construct.
    private TextTransformRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TextTransformRequest() {
      text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      topN_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TextTransformRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                text_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              text_.add(s);
              break;
            }
            case 16: {

              topN_ = input.readUInt32();
              break;
            }
            case 26: {
              nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder subBuilder = null;
              if (model_ != null) {
                subBuilder = model_.toBuilder();
              }
              model_ = input.readMessage(nvidia.riva.nlp.RivaNlp.NLPModelParams.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(model_);
                model_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          text_ = text_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextTransformRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextTransformRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.TextTransformRequest.class, nvidia.riva.nlp.RivaNlp.TextTransformRequest.Builder.class);
    }

    private int bitField0_;
    public static final int TEXT_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList text_;
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getTextList() {
      return text_;
    }
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    public int getTextCount() {
      return text_.size();
    }
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    public java.lang.String getText(int index) {
      return text_.get(index);
    }
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes(int index) {
      return text_.getByteString(index);
    }

    public static final int TOP_N_FIELD_NUMBER = 2;
    private int topN_;
    /**
     * <pre>
     * </pre>
     *
     * <code>optional uint32 top_n = 2;</code>
     */
    public int getTopN() {
      return topN_;
    }

    public static final int MODEL_FIELD_NUMBER = 3;
    private nvidia.riva.nlp.RivaNlp.NLPModelParams model_;
    /**
     * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
     */
    public boolean hasModel() {
      return model_ != null;
    }
    /**
     * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
     */
    public nvidia.riva.nlp.RivaNlp.NLPModelParams getModel() {
      return model_ == null ? nvidia.riva.nlp.RivaNlp.NLPModelParams.getDefaultInstance() : model_;
    }
    /**
     * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
     */
    public nvidia.riva.nlp.RivaNlp.NLPModelParamsOrBuilder getModelOrBuilder() {
      return getModel();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < text_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, text_.getRaw(i));
      }
      if (topN_ != 0) {
        output.writeUInt32(2, topN_);
      }
      if (model_ != null) {
        output.writeMessage(3, getModel());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < text_.size(); i++) {
          dataSize += computeStringSizeNoTag(text_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTextList().size();
      }
      if (topN_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, topN_);
      }
      if (model_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getModel());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.TextTransformRequest)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.TextTransformRequest other = (nvidia.riva.nlp.RivaNlp.TextTransformRequest) obj;

      boolean result = true;
      result = result && getTextList()
          .equals(other.getTextList());
      result = result && (getTopN()
          == other.getTopN());
      result = result && (hasModel() == other.hasModel());
      if (hasModel()) {
        result = result && getModel()
            .equals(other.getModel());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getTextCount() > 0) {
        hash = (37 * hash) + TEXT_FIELD_NUMBER;
        hash = (53 * hash) + getTextList().hashCode();
      }
      hash = (37 * hash) + TOP_N_FIELD_NUMBER;
      hash = (53 * hash) + getTopN();
      if (hasModel()) {
        hash = (37 * hash) + MODEL_FIELD_NUMBER;
        hash = (53 * hash) + getModel().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.TextTransformRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.TextTransformRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TextTransformRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.TextTransformRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TextTransformRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TextTransformRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TextTransformRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TextTransformRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TextTransformRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TextTransformRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.TextTransformRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * TextTransformRequest is a request type intended for services like TransformText
     * which take an arbitrary text input
     * </pre>
     *
     * Protobuf type {@code nvidia.riva.nlp.TextTransformRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.TextTransformRequest)
        nvidia.riva.nlp.RivaNlp.TextTransformRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextTransformRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextTransformRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.TextTransformRequest.class, nvidia.riva.nlp.RivaNlp.TextTransformRequest.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.TextTransformRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        topN_ = 0;

        if (modelBuilder_ == null) {
          model_ = null;
        } else {
          model_ = null;
          modelBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextTransformRequest_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.TextTransformRequest getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.TextTransformRequest.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.TextTransformRequest build() {
        nvidia.riva.nlp.RivaNlp.TextTransformRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.TextTransformRequest buildPartial() {
        nvidia.riva.nlp.RivaNlp.TextTransformRequest result = new nvidia.riva.nlp.RivaNlp.TextTransformRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          text_ = text_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.text_ = text_;
        result.topN_ = topN_;
        if (modelBuilder_ == null) {
          result.model_ = model_;
        } else {
          result.model_ = modelBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.TextTransformRequest) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.TextTransformRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.TextTransformRequest other) {
        if (other == nvidia.riva.nlp.RivaNlp.TextTransformRequest.getDefaultInstance()) return this;
        if (!other.text_.isEmpty()) {
          if (text_.isEmpty()) {
            text_ = other.text_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTextIsMutable();
            text_.addAll(other.text_);
          }
          onChanged();
        }
        if (other.getTopN() != 0) {
          setTopN(other.getTopN());
        }
        if (other.hasModel()) {
          mergeModel(other.getModel());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.TextTransformRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.TextTransformRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTextIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          text_ = new com.google.protobuf.LazyStringArrayList(text_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getTextList() {
        return text_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public int getTextCount() {
        return text_.size();
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public java.lang.String getText(int index) {
        return text_.get(index);
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes(int index) {
        return text_.getByteString(index);
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public Builder setText(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTextIsMutable();
        text_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public Builder addText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTextIsMutable();
        text_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public Builder addAllText(
          java.lang.Iterable<java.lang.String> values) {
        ensureTextIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, text_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public Builder clearText() {
        text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public Builder addTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTextIsMutable();
        text_.add(value);
        onChanged();
        return this;
      }

      private int topN_ ;
      /**
       * <pre>
       * </pre>
       *
       * <code>optional uint32 top_n = 2;</code>
       */
      public int getTopN() {
        return topN_;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>optional uint32 top_n = 2;</code>
       */
      public Builder setTopN(int value) {
        
        topN_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * </pre>
       *
       * <code>optional uint32 top_n = 2;</code>
       */
      public Builder clearTopN() {
        
        topN_ = 0;
        onChanged();
        return this;
      }

      private nvidia.riva.nlp.RivaNlp.NLPModelParams model_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.NLPModelParams, nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder, nvidia.riva.nlp.RivaNlp.NLPModelParamsOrBuilder> modelBuilder_;
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
       */
      public boolean hasModel() {
        return modelBuilder_ != null || model_ != null;
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
       */
      public nvidia.riva.nlp.RivaNlp.NLPModelParams getModel() {
        if (modelBuilder_ == null) {
          return model_ == null ? nvidia.riva.nlp.RivaNlp.NLPModelParams.getDefaultInstance() : model_;
        } else {
          return modelBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
       */
      public Builder setModel(nvidia.riva.nlp.RivaNlp.NLPModelParams value) {
        if (modelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          model_ = value;
          onChanged();
        } else {
          modelBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
       */
      public Builder setModel(
          nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder builderForValue) {
        if (modelBuilder_ == null) {
          model_ = builderForValue.build();
          onChanged();
        } else {
          modelBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
       */
      public Builder mergeModel(nvidia.riva.nlp.RivaNlp.NLPModelParams value) {
        if (modelBuilder_ == null) {
          if (model_ != null) {
            model_ =
              nvidia.riva.nlp.RivaNlp.NLPModelParams.newBuilder(model_).mergeFrom(value).buildPartial();
          } else {
            model_ = value;
          }
          onChanged();
        } else {
          modelBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
       */
      public Builder clearModel() {
        if (modelBuilder_ == null) {
          model_ = null;
          onChanged();
        } else {
          model_ = null;
          modelBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
       */
      public nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder getModelBuilder() {
        
        onChanged();
        return getModelFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
       */
      public nvidia.riva.nlp.RivaNlp.NLPModelParamsOrBuilder getModelOrBuilder() {
        if (modelBuilder_ != null) {
          return modelBuilder_.getMessageOrBuilder();
        } else {
          return model_ == null ?
              nvidia.riva.nlp.RivaNlp.NLPModelParams.getDefaultInstance() : model_;
        }
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.NLPModelParams, nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder, nvidia.riva.nlp.RivaNlp.NLPModelParamsOrBuilder> 
          getModelFieldBuilder() {
        if (modelBuilder_ == null) {
          modelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nvidia.riva.nlp.RivaNlp.NLPModelParams, nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder, nvidia.riva.nlp.RivaNlp.NLPModelParamsOrBuilder>(
                  getModel(),
                  getParentForChildren(),
                  isClean());
          model_ = null;
        }
        return modelBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.TextTransformRequest)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.TextTransformRequest)
    private static final nvidia.riva.nlp.RivaNlp.TextTransformRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.TextTransformRequest();
    }

    public static nvidia.riva.nlp.RivaNlp.TextTransformRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TextTransformRequest>
        PARSER = new com.google.protobuf.AbstractParser<TextTransformRequest>() {
      public TextTransformRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TextTransformRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TextTransformRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TextTransformRequest> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.TextTransformRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TextTransformResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.TextTransformResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string text = 1;</code>
     */
    java.util.List<java.lang.String>
        getTextList();
    /**
     * <code>repeated string text = 1;</code>
     */
    int getTextCount();
    /**
     * <code>repeated string text = 1;</code>
     */
    java.lang.String getText(int index);
    /**
     * <code>repeated string text = 1;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes(int index);
  }
  /**
   * <pre>
   * TextTransformResponse is returned by the TransformText method. Responses
   * are returned in the same order as they were requested.
   * </pre>
   *
   * Protobuf type {@code nvidia.riva.nlp.TextTransformResponse}
   */
  public  static final class TextTransformResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.TextTransformResponse)
      TextTransformResponseOrBuilder {
    // Use TextTransformResponse.newBuilder() to construct.
    private TextTransformResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TextTransformResponse() {
      text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TextTransformResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                text_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              text_.add(s);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          text_ = text_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextTransformResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextTransformResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.TextTransformResponse.class, nvidia.riva.nlp.RivaNlp.TextTransformResponse.Builder.class);
    }

    public static final int TEXT_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList text_;
    /**
     * <code>repeated string text = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getTextList() {
      return text_;
    }
    /**
     * <code>repeated string text = 1;</code>
     */
    public int getTextCount() {
      return text_.size();
    }
    /**
     * <code>repeated string text = 1;</code>
     */
    public java.lang.String getText(int index) {
      return text_.get(index);
    }
    /**
     * <code>repeated string text = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes(int index) {
      return text_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < text_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, text_.getRaw(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < text_.size(); i++) {
          dataSize += computeStringSizeNoTag(text_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTextList().size();
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.TextTransformResponse)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.TextTransformResponse other = (nvidia.riva.nlp.RivaNlp.TextTransformResponse) obj;

      boolean result = true;
      result = result && getTextList()
          .equals(other.getTextList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getTextCount() > 0) {
        hash = (37 * hash) + TEXT_FIELD_NUMBER;
        hash = (53 * hash) + getTextList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.TextTransformResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.TextTransformResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TextTransformResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.TextTransformResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TextTransformResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TextTransformResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TextTransformResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TextTransformResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TextTransformResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TextTransformResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.TextTransformResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * TextTransformResponse is returned by the TransformText method. Responses
     * are returned in the same order as they were requested.
     * </pre>
     *
     * Protobuf type {@code nvidia.riva.nlp.TextTransformResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.TextTransformResponse)
        nvidia.riva.nlp.RivaNlp.TextTransformResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextTransformResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextTransformResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.TextTransformResponse.class, nvidia.riva.nlp.RivaNlp.TextTransformResponse.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.TextTransformResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextTransformResponse_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.TextTransformResponse getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.TextTransformResponse.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.TextTransformResponse build() {
        nvidia.riva.nlp.RivaNlp.TextTransformResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.TextTransformResponse buildPartial() {
        nvidia.riva.nlp.RivaNlp.TextTransformResponse result = new nvidia.riva.nlp.RivaNlp.TextTransformResponse(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          text_ = text_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.text_ = text_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.TextTransformResponse) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.TextTransformResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.TextTransformResponse other) {
        if (other == nvidia.riva.nlp.RivaNlp.TextTransformResponse.getDefaultInstance()) return this;
        if (!other.text_.isEmpty()) {
          if (text_.isEmpty()) {
            text_ = other.text_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTextIsMutable();
            text_.addAll(other.text_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.TextTransformResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.TextTransformResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTextIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          text_ = new com.google.protobuf.LazyStringArrayList(text_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string text = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getTextList() {
        return text_.getUnmodifiableView();
      }
      /**
       * <code>repeated string text = 1;</code>
       */
      public int getTextCount() {
        return text_.size();
      }
      /**
       * <code>repeated string text = 1;</code>
       */
      public java.lang.String getText(int index) {
        return text_.get(index);
      }
      /**
       * <code>repeated string text = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes(int index) {
        return text_.getByteString(index);
      }
      /**
       * <code>repeated string text = 1;</code>
       */
      public Builder setText(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTextIsMutable();
        text_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string text = 1;</code>
       */
      public Builder addText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTextIsMutable();
        text_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string text = 1;</code>
       */
      public Builder addAllText(
          java.lang.Iterable<java.lang.String> values) {
        ensureTextIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, text_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string text = 1;</code>
       */
      public Builder clearText() {
        text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string text = 1;</code>
       */
      public Builder addTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTextIsMutable();
        text_.add(value);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.TextTransformResponse)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.TextTransformResponse)
    private static final nvidia.riva.nlp.RivaNlp.TextTransformResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.TextTransformResponse();
    }

    public static nvidia.riva.nlp.RivaNlp.TextTransformResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TextTransformResponse>
        PARSER = new com.google.protobuf.AbstractParser<TextTransformResponse>() {
      public TextTransformResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TextTransformResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TextTransformResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TextTransformResponse> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.TextTransformResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TextClassRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.TextClassRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    java.util.List<java.lang.String>
        getTextList();
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    int getTextCount();
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    java.lang.String getText(int index);
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes(int index);

    /**
     * <pre>
     * Return the top N classification results for each input. 0 or 1 will return top class, otherwise N.
     * Note: Current disabled.
     * </pre>
     *
     * <code>optional uint32 top_n = 2;</code>
     */
    int getTopN();

    /**
     * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
     */
    boolean hasModel();
    /**
     * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
     */
    nvidia.riva.nlp.RivaNlp.NLPModelParams getModel();
    /**
     * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
     */
    nvidia.riva.nlp.RivaNlp.NLPModelParamsOrBuilder getModelOrBuilder();
  }
  /**
   * <pre>
   * TextClassRequest is the input message to the ClassifyText service.
   * </pre>
   *
   * Protobuf type {@code nvidia.riva.nlp.TextClassRequest}
   */
  public  static final class TextClassRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.TextClassRequest)
      TextClassRequestOrBuilder {
    // Use TextClassRequest.newBuilder() to construct.
    private TextClassRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TextClassRequest() {
      text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      topN_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TextClassRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                text_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              text_.add(s);
              break;
            }
            case 16: {

              topN_ = input.readUInt32();
              break;
            }
            case 26: {
              nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder subBuilder = null;
              if (model_ != null) {
                subBuilder = model_.toBuilder();
              }
              model_ = input.readMessage(nvidia.riva.nlp.RivaNlp.NLPModelParams.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(model_);
                model_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          text_ = text_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextClassRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextClassRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.TextClassRequest.class, nvidia.riva.nlp.RivaNlp.TextClassRequest.Builder.class);
    }

    private int bitField0_;
    public static final int TEXT_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList text_;
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getTextList() {
      return text_;
    }
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    public int getTextCount() {
      return text_.size();
    }
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    public java.lang.String getText(int index) {
      return text_.get(index);
    }
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes(int index) {
      return text_.getByteString(index);
    }

    public static final int TOP_N_FIELD_NUMBER = 2;
    private int topN_;
    /**
     * <pre>
     * Return the top N classification results for each input. 0 or 1 will return top class, otherwise N.
     * Note: Current disabled.
     * </pre>
     *
     * <code>optional uint32 top_n = 2;</code>
     */
    public int getTopN() {
      return topN_;
    }

    public static final int MODEL_FIELD_NUMBER = 3;
    private nvidia.riva.nlp.RivaNlp.NLPModelParams model_;
    /**
     * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
     */
    public boolean hasModel() {
      return model_ != null;
    }
    /**
     * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
     */
    public nvidia.riva.nlp.RivaNlp.NLPModelParams getModel() {
      return model_ == null ? nvidia.riva.nlp.RivaNlp.NLPModelParams.getDefaultInstance() : model_;
    }
    /**
     * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
     */
    public nvidia.riva.nlp.RivaNlp.NLPModelParamsOrBuilder getModelOrBuilder() {
      return getModel();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < text_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, text_.getRaw(i));
      }
      if (topN_ != 0) {
        output.writeUInt32(2, topN_);
      }
      if (model_ != null) {
        output.writeMessage(3, getModel());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < text_.size(); i++) {
          dataSize += computeStringSizeNoTag(text_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTextList().size();
      }
      if (topN_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, topN_);
      }
      if (model_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getModel());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.TextClassRequest)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.TextClassRequest other = (nvidia.riva.nlp.RivaNlp.TextClassRequest) obj;

      boolean result = true;
      result = result && getTextList()
          .equals(other.getTextList());
      result = result && (getTopN()
          == other.getTopN());
      result = result && (hasModel() == other.hasModel());
      if (hasModel()) {
        result = result && getModel()
            .equals(other.getModel());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getTextCount() > 0) {
        hash = (37 * hash) + TEXT_FIELD_NUMBER;
        hash = (53 * hash) + getTextList().hashCode();
      }
      hash = (37 * hash) + TOP_N_FIELD_NUMBER;
      hash = (53 * hash) + getTopN();
      if (hasModel()) {
        hash = (37 * hash) + MODEL_FIELD_NUMBER;
        hash = (53 * hash) + getModel().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.TextClassRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.TextClassRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TextClassRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.TextClassRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TextClassRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TextClassRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TextClassRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TextClassRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TextClassRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TextClassRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.TextClassRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * TextClassRequest is the input message to the ClassifyText service.
     * </pre>
     *
     * Protobuf type {@code nvidia.riva.nlp.TextClassRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.TextClassRequest)
        nvidia.riva.nlp.RivaNlp.TextClassRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextClassRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextClassRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.TextClassRequest.class, nvidia.riva.nlp.RivaNlp.TextClassRequest.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.TextClassRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        topN_ = 0;

        if (modelBuilder_ == null) {
          model_ = null;
        } else {
          model_ = null;
          modelBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextClassRequest_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.TextClassRequest getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.TextClassRequest.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.TextClassRequest build() {
        nvidia.riva.nlp.RivaNlp.TextClassRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.TextClassRequest buildPartial() {
        nvidia.riva.nlp.RivaNlp.TextClassRequest result = new nvidia.riva.nlp.RivaNlp.TextClassRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          text_ = text_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.text_ = text_;
        result.topN_ = topN_;
        if (modelBuilder_ == null) {
          result.model_ = model_;
        } else {
          result.model_ = modelBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.TextClassRequest) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.TextClassRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.TextClassRequest other) {
        if (other == nvidia.riva.nlp.RivaNlp.TextClassRequest.getDefaultInstance()) return this;
        if (!other.text_.isEmpty()) {
          if (text_.isEmpty()) {
            text_ = other.text_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTextIsMutable();
            text_.addAll(other.text_);
          }
          onChanged();
        }
        if (other.getTopN() != 0) {
          setTopN(other.getTopN());
        }
        if (other.hasModel()) {
          mergeModel(other.getModel());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.TextClassRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.TextClassRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTextIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          text_ = new com.google.protobuf.LazyStringArrayList(text_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getTextList() {
        return text_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public int getTextCount() {
        return text_.size();
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public java.lang.String getText(int index) {
        return text_.get(index);
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes(int index) {
        return text_.getByteString(index);
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public Builder setText(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTextIsMutable();
        text_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public Builder addText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTextIsMutable();
        text_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public Builder addAllText(
          java.lang.Iterable<java.lang.String> values) {
        ensureTextIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, text_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public Builder clearText() {
        text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public Builder addTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTextIsMutable();
        text_.add(value);
        onChanged();
        return this;
      }

      private int topN_ ;
      /**
       * <pre>
       * Return the top N classification results for each input. 0 or 1 will return top class, otherwise N.
       * Note: Current disabled.
       * </pre>
       *
       * <code>optional uint32 top_n = 2;</code>
       */
      public int getTopN() {
        return topN_;
      }
      /**
       * <pre>
       * Return the top N classification results for each input. 0 or 1 will return top class, otherwise N.
       * Note: Current disabled.
       * </pre>
       *
       * <code>optional uint32 top_n = 2;</code>
       */
      public Builder setTopN(int value) {
        
        topN_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Return the top N classification results for each input. 0 or 1 will return top class, otherwise N.
       * Note: Current disabled.
       * </pre>
       *
       * <code>optional uint32 top_n = 2;</code>
       */
      public Builder clearTopN() {
        
        topN_ = 0;
        onChanged();
        return this;
      }

      private nvidia.riva.nlp.RivaNlp.NLPModelParams model_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.NLPModelParams, nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder, nvidia.riva.nlp.RivaNlp.NLPModelParamsOrBuilder> modelBuilder_;
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
       */
      public boolean hasModel() {
        return modelBuilder_ != null || model_ != null;
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
       */
      public nvidia.riva.nlp.RivaNlp.NLPModelParams getModel() {
        if (modelBuilder_ == null) {
          return model_ == null ? nvidia.riva.nlp.RivaNlp.NLPModelParams.getDefaultInstance() : model_;
        } else {
          return modelBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
       */
      public Builder setModel(nvidia.riva.nlp.RivaNlp.NLPModelParams value) {
        if (modelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          model_ = value;
          onChanged();
        } else {
          modelBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
       */
      public Builder setModel(
          nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder builderForValue) {
        if (modelBuilder_ == null) {
          model_ = builderForValue.build();
          onChanged();
        } else {
          modelBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
       */
      public Builder mergeModel(nvidia.riva.nlp.RivaNlp.NLPModelParams value) {
        if (modelBuilder_ == null) {
          if (model_ != null) {
            model_ =
              nvidia.riva.nlp.RivaNlp.NLPModelParams.newBuilder(model_).mergeFrom(value).buildPartial();
          } else {
            model_ = value;
          }
          onChanged();
        } else {
          modelBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
       */
      public Builder clearModel() {
        if (modelBuilder_ == null) {
          model_ = null;
          onChanged();
        } else {
          model_ = null;
          modelBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
       */
      public nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder getModelBuilder() {
        
        onChanged();
        return getModelFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
       */
      public nvidia.riva.nlp.RivaNlp.NLPModelParamsOrBuilder getModelOrBuilder() {
        if (modelBuilder_ != null) {
          return modelBuilder_.getMessageOrBuilder();
        } else {
          return model_ == null ?
              nvidia.riva.nlp.RivaNlp.NLPModelParams.getDefaultInstance() : model_;
        }
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.NLPModelParams, nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder, nvidia.riva.nlp.RivaNlp.NLPModelParamsOrBuilder> 
          getModelFieldBuilder() {
        if (modelBuilder_ == null) {
          modelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nvidia.riva.nlp.RivaNlp.NLPModelParams, nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder, nvidia.riva.nlp.RivaNlp.NLPModelParamsOrBuilder>(
                  getModel(),
                  getParentForChildren(),
                  isClean());
          model_ = null;
        }
        return modelBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.TextClassRequest)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.TextClassRequest)
    private static final nvidia.riva.nlp.RivaNlp.TextClassRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.TextClassRequest();
    }

    public static nvidia.riva.nlp.RivaNlp.TextClassRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TextClassRequest>
        PARSER = new com.google.protobuf.AbstractParser<TextClassRequest>() {
      public TextClassRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TextClassRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TextClassRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TextClassRequest> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.TextClassRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ClassificationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.Classification)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string class_name = 1;</code>
     */
    java.lang.String getClassName();
    /**
     * <code>optional string class_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getClassNameBytes();

    /**
     * <code>optional float score = 2;</code>
     */
    float getScore();
  }
  /**
   * <pre>
   * Classification messages return a class name and corresponding score
   * </pre>
   *
   * Protobuf type {@code nvidia.riva.nlp.Classification}
   */
  public  static final class Classification extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.Classification)
      ClassificationOrBuilder {
    // Use Classification.newBuilder() to construct.
    private Classification(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Classification() {
      className_ = "";
      score_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Classification(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              className_ = s;
              break;
            }
            case 21: {

              score_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_Classification_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_Classification_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.Classification.class, nvidia.riva.nlp.RivaNlp.Classification.Builder.class);
    }

    public static final int CLASS_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object className_;
    /**
     * <code>optional string class_name = 1;</code>
     */
    public java.lang.String getClassName() {
      java.lang.Object ref = className_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        className_ = s;
        return s;
      }
    }
    /**
     * <code>optional string class_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getClassNameBytes() {
      java.lang.Object ref = className_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        className_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCORE_FIELD_NUMBER = 2;
    private float score_;
    /**
     * <code>optional float score = 2;</code>
     */
    public float getScore() {
      return score_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getClassNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, className_);
      }
      if (score_ != 0F) {
        output.writeFloat(2, score_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getClassNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, className_);
      }
      if (score_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, score_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.Classification)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.Classification other = (nvidia.riva.nlp.RivaNlp.Classification) obj;

      boolean result = true;
      result = result && getClassName()
          .equals(other.getClassName());
      result = result && (
          java.lang.Float.floatToIntBits(getScore())
          == java.lang.Float.floatToIntBits(
              other.getScore()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + CLASS_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getClassName().hashCode();
      hash = (37 * hash) + SCORE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getScore());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.Classification parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.Classification parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.Classification parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.Classification parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.Classification parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.Classification parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.Classification parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.Classification parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.Classification parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.Classification parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.Classification prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Classification messages return a class name and corresponding score
     * </pre>
     *
     * Protobuf type {@code nvidia.riva.nlp.Classification}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.Classification)
        nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_Classification_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_Classification_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.Classification.class, nvidia.riva.nlp.RivaNlp.Classification.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.Classification.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        className_ = "";

        score_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_Classification_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.Classification getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.Classification.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.Classification build() {
        nvidia.riva.nlp.RivaNlp.Classification result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.Classification buildPartial() {
        nvidia.riva.nlp.RivaNlp.Classification result = new nvidia.riva.nlp.RivaNlp.Classification(this);
        result.className_ = className_;
        result.score_ = score_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.Classification) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.Classification)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.Classification other) {
        if (other == nvidia.riva.nlp.RivaNlp.Classification.getDefaultInstance()) return this;
        if (!other.getClassName().isEmpty()) {
          className_ = other.className_;
          onChanged();
        }
        if (other.getScore() != 0F) {
          setScore(other.getScore());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.Classification parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.Classification) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object className_ = "";
      /**
       * <code>optional string class_name = 1;</code>
       */
      public java.lang.String getClassName() {
        java.lang.Object ref = className_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          className_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string class_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getClassNameBytes() {
        java.lang.Object ref = className_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          className_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string class_name = 1;</code>
       */
      public Builder setClassName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        className_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string class_name = 1;</code>
       */
      public Builder clearClassName() {
        
        className_ = getDefaultInstance().getClassName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string class_name = 1;</code>
       */
      public Builder setClassNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        className_ = value;
        onChanged();
        return this;
      }

      private float score_ ;
      /**
       * <code>optional float score = 2;</code>
       */
      public float getScore() {
        return score_;
      }
      /**
       * <code>optional float score = 2;</code>
       */
      public Builder setScore(float value) {
        
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float score = 2;</code>
       */
      public Builder clearScore() {
        
        score_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.Classification)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.Classification)
    private static final nvidia.riva.nlp.RivaNlp.Classification DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.Classification();
    }

    public static nvidia.riva.nlp.RivaNlp.Classification getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Classification>
        PARSER = new com.google.protobuf.AbstractParser<Classification>() {
      public Classification parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Classification(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Classification> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Classification> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.Classification getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SpanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.Span)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 start = 1;</code>
     */
    int getStart();

    /**
     * <code>optional uint32 end = 2;</code>
     */
    int getEnd();
  }
  /**
   * <pre>
   * Span of a particular result
   * </pre>
   *
   * Protobuf type {@code nvidia.riva.nlp.Span}
   */
  public  static final class Span extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.Span)
      SpanOrBuilder {
    // Use Span.newBuilder() to construct.
    private Span(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Span() {
      start_ = 0;
      end_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Span(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              start_ = input.readUInt32();
              break;
            }
            case 16: {

              end_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_Span_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_Span_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.Span.class, nvidia.riva.nlp.RivaNlp.Span.Builder.class);
    }

    public static final int START_FIELD_NUMBER = 1;
    private int start_;
    /**
     * <code>optional uint32 start = 1;</code>
     */
    public int getStart() {
      return start_;
    }

    public static final int END_FIELD_NUMBER = 2;
    private int end_;
    /**
     * <code>optional uint32 end = 2;</code>
     */
    public int getEnd() {
      return end_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (start_ != 0) {
        output.writeUInt32(1, start_);
      }
      if (end_ != 0) {
        output.writeUInt32(2, end_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (start_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, start_);
      }
      if (end_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, end_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.Span)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.Span other = (nvidia.riva.nlp.RivaNlp.Span) obj;

      boolean result = true;
      result = result && (getStart()
          == other.getStart());
      result = result && (getEnd()
          == other.getEnd());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + START_FIELD_NUMBER;
      hash = (53 * hash) + getStart();
      hash = (37 * hash) + END_FIELD_NUMBER;
      hash = (53 * hash) + getEnd();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.Span parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.Span parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.Span parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.Span parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.Span parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.Span parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.Span parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.Span parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.Span parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.Span parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.Span prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Span of a particular result
     * </pre>
     *
     * Protobuf type {@code nvidia.riva.nlp.Span}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.Span)
        nvidia.riva.nlp.RivaNlp.SpanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_Span_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_Span_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.Span.class, nvidia.riva.nlp.RivaNlp.Span.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.Span.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        start_ = 0;

        end_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_Span_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.Span getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.Span.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.Span build() {
        nvidia.riva.nlp.RivaNlp.Span result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.Span buildPartial() {
        nvidia.riva.nlp.RivaNlp.Span result = new nvidia.riva.nlp.RivaNlp.Span(this);
        result.start_ = start_;
        result.end_ = end_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.Span) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.Span)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.Span other) {
        if (other == nvidia.riva.nlp.RivaNlp.Span.getDefaultInstance()) return this;
        if (other.getStart() != 0) {
          setStart(other.getStart());
        }
        if (other.getEnd() != 0) {
          setEnd(other.getEnd());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.Span parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.Span) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int start_ ;
      /**
       * <code>optional uint32 start = 1;</code>
       */
      public int getStart() {
        return start_;
      }
      /**
       * <code>optional uint32 start = 1;</code>
       */
      public Builder setStart(int value) {
        
        start_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 start = 1;</code>
       */
      public Builder clearStart() {
        
        start_ = 0;
        onChanged();
        return this;
      }

      private int end_ ;
      /**
       * <code>optional uint32 end = 2;</code>
       */
      public int getEnd() {
        return end_;
      }
      /**
       * <code>optional uint32 end = 2;</code>
       */
      public Builder setEnd(int value) {
        
        end_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 end = 2;</code>
       */
      public Builder clearEnd() {
        
        end_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.Span)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.Span)
    private static final nvidia.riva.nlp.RivaNlp.Span DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.Span();
    }

    public static nvidia.riva.nlp.RivaNlp.Span getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Span>
        PARSER = new com.google.protobuf.AbstractParser<Span>() {
      public Span parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Span(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Span> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Span> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.Span getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ClassificationResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.ClassificationResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
     */
    java.util.List<nvidia.riva.nlp.RivaNlp.Classification> 
        getLabelsList();
    /**
     * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
     */
    nvidia.riva.nlp.RivaNlp.Classification getLabels(int index);
    /**
     * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
     */
    int getLabelsCount();
    /**
     * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
     */
    java.util.List<? extends nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder> 
        getLabelsOrBuilderList();
    /**
     * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
     */
    nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder getLabelsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * ClassificationResults contain zero or more Classification messages
   * If the number of Classifications is &gt; 1, top_n &gt; 1 must have been
   * specified.
   * </pre>
   *
   * Protobuf type {@code nvidia.riva.nlp.ClassificationResult}
   */
  public  static final class ClassificationResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.ClassificationResult)
      ClassificationResultOrBuilder {
    // Use ClassificationResult.newBuilder() to construct.
    private ClassificationResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ClassificationResult() {
      labels_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ClassificationResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                labels_ = new java.util.ArrayList<nvidia.riva.nlp.RivaNlp.Classification>();
                mutable_bitField0_ |= 0x00000001;
              }
              labels_.add(
                  input.readMessage(nvidia.riva.nlp.RivaNlp.Classification.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          labels_ = java.util.Collections.unmodifiableList(labels_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_ClassificationResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_ClassificationResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.ClassificationResult.class, nvidia.riva.nlp.RivaNlp.ClassificationResult.Builder.class);
    }

    public static final int LABELS_FIELD_NUMBER = 1;
    private java.util.List<nvidia.riva.nlp.RivaNlp.Classification> labels_;
    /**
     * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
     */
    public java.util.List<nvidia.riva.nlp.RivaNlp.Classification> getLabelsList() {
      return labels_;
    }
    /**
     * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
     */
    public java.util.List<? extends nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder> 
        getLabelsOrBuilderList() {
      return labels_;
    }
    /**
     * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
     */
    public int getLabelsCount() {
      return labels_.size();
    }
    /**
     * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
     */
    public nvidia.riva.nlp.RivaNlp.Classification getLabels(int index) {
      return labels_.get(index);
    }
    /**
     * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
     */
    public nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder getLabelsOrBuilder(
        int index) {
      return labels_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < labels_.size(); i++) {
        output.writeMessage(1, labels_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < labels_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, labels_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.ClassificationResult)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.ClassificationResult other = (nvidia.riva.nlp.RivaNlp.ClassificationResult) obj;

      boolean result = true;
      result = result && getLabelsList()
          .equals(other.getLabelsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getLabelsCount() > 0) {
        hash = (37 * hash) + LABELS_FIELD_NUMBER;
        hash = (53 * hash) + getLabelsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.ClassificationResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.ClassificationResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.ClassificationResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.ClassificationResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.ClassificationResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.ClassificationResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.ClassificationResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.ClassificationResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.ClassificationResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.ClassificationResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.ClassificationResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ClassificationResults contain zero or more Classification messages
     * If the number of Classifications is &gt; 1, top_n &gt; 1 must have been
     * specified.
     * </pre>
     *
     * Protobuf type {@code nvidia.riva.nlp.ClassificationResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.ClassificationResult)
        nvidia.riva.nlp.RivaNlp.ClassificationResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_ClassificationResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_ClassificationResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.ClassificationResult.class, nvidia.riva.nlp.RivaNlp.ClassificationResult.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.ClassificationResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLabelsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (labelsBuilder_ == null) {
          labels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          labelsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_ClassificationResult_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.ClassificationResult getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.ClassificationResult.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.ClassificationResult build() {
        nvidia.riva.nlp.RivaNlp.ClassificationResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.ClassificationResult buildPartial() {
        nvidia.riva.nlp.RivaNlp.ClassificationResult result = new nvidia.riva.nlp.RivaNlp.ClassificationResult(this);
        int from_bitField0_ = bitField0_;
        if (labelsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            labels_ = java.util.Collections.unmodifiableList(labels_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.labels_ = labels_;
        } else {
          result.labels_ = labelsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.ClassificationResult) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.ClassificationResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.ClassificationResult other) {
        if (other == nvidia.riva.nlp.RivaNlp.ClassificationResult.getDefaultInstance()) return this;
        if (labelsBuilder_ == null) {
          if (!other.labels_.isEmpty()) {
            if (labels_.isEmpty()) {
              labels_ = other.labels_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLabelsIsMutable();
              labels_.addAll(other.labels_);
            }
            onChanged();
          }
        } else {
          if (!other.labels_.isEmpty()) {
            if (labelsBuilder_.isEmpty()) {
              labelsBuilder_.dispose();
              labelsBuilder_ = null;
              labels_ = other.labels_;
              bitField0_ = (bitField0_ & ~0x00000001);
              labelsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLabelsFieldBuilder() : null;
            } else {
              labelsBuilder_.addAllMessages(other.labels_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.ClassificationResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.ClassificationResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<nvidia.riva.nlp.RivaNlp.Classification> labels_ =
        java.util.Collections.emptyList();
      private void ensureLabelsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          labels_ = new java.util.ArrayList<nvidia.riva.nlp.RivaNlp.Classification>(labels_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.Classification, nvidia.riva.nlp.RivaNlp.Classification.Builder, nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder> labelsBuilder_;

      /**
       * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
       */
      public java.util.List<nvidia.riva.nlp.RivaNlp.Classification> getLabelsList() {
        if (labelsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(labels_);
        } else {
          return labelsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
       */
      public int getLabelsCount() {
        if (labelsBuilder_ == null) {
          return labels_.size();
        } else {
          return labelsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.Classification getLabels(int index) {
        if (labelsBuilder_ == null) {
          return labels_.get(index);
        } else {
          return labelsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
       */
      public Builder setLabels(
          int index, nvidia.riva.nlp.RivaNlp.Classification value) {
        if (labelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLabelsIsMutable();
          labels_.set(index, value);
          onChanged();
        } else {
          labelsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
       */
      public Builder setLabels(
          int index, nvidia.riva.nlp.RivaNlp.Classification.Builder builderForValue) {
        if (labelsBuilder_ == null) {
          ensureLabelsIsMutable();
          labels_.set(index, builderForValue.build());
          onChanged();
        } else {
          labelsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
       */
      public Builder addLabels(nvidia.riva.nlp.RivaNlp.Classification value) {
        if (labelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLabelsIsMutable();
          labels_.add(value);
          onChanged();
        } else {
          labelsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
       */
      public Builder addLabels(
          int index, nvidia.riva.nlp.RivaNlp.Classification value) {
        if (labelsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLabelsIsMutable();
          labels_.add(index, value);
          onChanged();
        } else {
          labelsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
       */
      public Builder addLabels(
          nvidia.riva.nlp.RivaNlp.Classification.Builder builderForValue) {
        if (labelsBuilder_ == null) {
          ensureLabelsIsMutable();
          labels_.add(builderForValue.build());
          onChanged();
        } else {
          labelsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
       */
      public Builder addLabels(
          int index, nvidia.riva.nlp.RivaNlp.Classification.Builder builderForValue) {
        if (labelsBuilder_ == null) {
          ensureLabelsIsMutable();
          labels_.add(index, builderForValue.build());
          onChanged();
        } else {
          labelsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
       */
      public Builder addAllLabels(
          java.lang.Iterable<? extends nvidia.riva.nlp.RivaNlp.Classification> values) {
        if (labelsBuilder_ == null) {
          ensureLabelsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, labels_);
          onChanged();
        } else {
          labelsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
       */
      public Builder clearLabels() {
        if (labelsBuilder_ == null) {
          labels_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          labelsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
       */
      public Builder removeLabels(int index) {
        if (labelsBuilder_ == null) {
          ensureLabelsIsMutable();
          labels_.remove(index);
          onChanged();
        } else {
          labelsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.Classification.Builder getLabelsBuilder(
          int index) {
        return getLabelsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder getLabelsOrBuilder(
          int index) {
        if (labelsBuilder_ == null) {
          return labels_.get(index);  } else {
          return labelsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
       */
      public java.util.List<? extends nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder> 
           getLabelsOrBuilderList() {
        if (labelsBuilder_ != null) {
          return labelsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(labels_);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.Classification.Builder addLabelsBuilder() {
        return getLabelsFieldBuilder().addBuilder(
            nvidia.riva.nlp.RivaNlp.Classification.getDefaultInstance());
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.Classification.Builder addLabelsBuilder(
          int index) {
        return getLabelsFieldBuilder().addBuilder(
            index, nvidia.riva.nlp.RivaNlp.Classification.getDefaultInstance());
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification labels = 1;</code>
       */
      public java.util.List<nvidia.riva.nlp.RivaNlp.Classification.Builder> 
           getLabelsBuilderList() {
        return getLabelsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.Classification, nvidia.riva.nlp.RivaNlp.Classification.Builder, nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder> 
          getLabelsFieldBuilder() {
        if (labelsBuilder_ == null) {
          labelsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              nvidia.riva.nlp.RivaNlp.Classification, nvidia.riva.nlp.RivaNlp.Classification.Builder, nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder>(
                  labels_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          labels_ = null;
        }
        return labelsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.ClassificationResult)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.ClassificationResult)
    private static final nvidia.riva.nlp.RivaNlp.ClassificationResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.ClassificationResult();
    }

    public static nvidia.riva.nlp.RivaNlp.ClassificationResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ClassificationResult>
        PARSER = new com.google.protobuf.AbstractParser<ClassificationResult>() {
      public ClassificationResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ClassificationResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ClassificationResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ClassificationResult> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.ClassificationResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TextClassResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.TextClassResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
     */
    java.util.List<nvidia.riva.nlp.RivaNlp.ClassificationResult> 
        getResultsList();
    /**
     * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
     */
    nvidia.riva.nlp.RivaNlp.ClassificationResult getResults(int index);
    /**
     * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
     */
    int getResultsCount();
    /**
     * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
     */
    java.util.List<? extends nvidia.riva.nlp.RivaNlp.ClassificationResultOrBuilder> 
        getResultsOrBuilderList();
    /**
     * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
     */
    nvidia.riva.nlp.RivaNlp.ClassificationResultOrBuilder getResultsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * TextClassResponse is the return message from the ClassifyText service.
   * </pre>
   *
   * Protobuf type {@code nvidia.riva.nlp.TextClassResponse}
   */
  public  static final class TextClassResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.TextClassResponse)
      TextClassResponseOrBuilder {
    // Use TextClassResponse.newBuilder() to construct.
    private TextClassResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TextClassResponse() {
      results_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TextClassResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                results_ = new java.util.ArrayList<nvidia.riva.nlp.RivaNlp.ClassificationResult>();
                mutable_bitField0_ |= 0x00000001;
              }
              results_.add(
                  input.readMessage(nvidia.riva.nlp.RivaNlp.ClassificationResult.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          results_ = java.util.Collections.unmodifiableList(results_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextClassResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextClassResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.TextClassResponse.class, nvidia.riva.nlp.RivaNlp.TextClassResponse.Builder.class);
    }

    public static final int RESULTS_FIELD_NUMBER = 1;
    private java.util.List<nvidia.riva.nlp.RivaNlp.ClassificationResult> results_;
    /**
     * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
     */
    public java.util.List<nvidia.riva.nlp.RivaNlp.ClassificationResult> getResultsList() {
      return results_;
    }
    /**
     * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
     */
    public java.util.List<? extends nvidia.riva.nlp.RivaNlp.ClassificationResultOrBuilder> 
        getResultsOrBuilderList() {
      return results_;
    }
    /**
     * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
     */
    public int getResultsCount() {
      return results_.size();
    }
    /**
     * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
     */
    public nvidia.riva.nlp.RivaNlp.ClassificationResult getResults(int index) {
      return results_.get(index);
    }
    /**
     * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
     */
    public nvidia.riva.nlp.RivaNlp.ClassificationResultOrBuilder getResultsOrBuilder(
        int index) {
      return results_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < results_.size(); i++) {
        output.writeMessage(1, results_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < results_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, results_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.TextClassResponse)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.TextClassResponse other = (nvidia.riva.nlp.RivaNlp.TextClassResponse) obj;

      boolean result = true;
      result = result && getResultsList()
          .equals(other.getResultsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getResultsCount() > 0) {
        hash = (37 * hash) + RESULTS_FIELD_NUMBER;
        hash = (53 * hash) + getResultsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.TextClassResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.TextClassResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TextClassResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.TextClassResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TextClassResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TextClassResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TextClassResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TextClassResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TextClassResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TextClassResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.TextClassResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * TextClassResponse is the return message from the ClassifyText service.
     * </pre>
     *
     * Protobuf type {@code nvidia.riva.nlp.TextClassResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.TextClassResponse)
        nvidia.riva.nlp.RivaNlp.TextClassResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextClassResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextClassResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.TextClassResponse.class, nvidia.riva.nlp.RivaNlp.TextClassResponse.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.TextClassResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getResultsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TextClassResponse_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.TextClassResponse getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.TextClassResponse.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.TextClassResponse build() {
        nvidia.riva.nlp.RivaNlp.TextClassResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.TextClassResponse buildPartial() {
        nvidia.riva.nlp.RivaNlp.TextClassResponse result = new nvidia.riva.nlp.RivaNlp.TextClassResponse(this);
        int from_bitField0_ = bitField0_;
        if (resultsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            results_ = java.util.Collections.unmodifiableList(results_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.results_ = results_;
        } else {
          result.results_ = resultsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.TextClassResponse) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.TextClassResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.TextClassResponse other) {
        if (other == nvidia.riva.nlp.RivaNlp.TextClassResponse.getDefaultInstance()) return this;
        if (resultsBuilder_ == null) {
          if (!other.results_.isEmpty()) {
            if (results_.isEmpty()) {
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureResultsIsMutable();
              results_.addAll(other.results_);
            }
            onChanged();
          }
        } else {
          if (!other.results_.isEmpty()) {
            if (resultsBuilder_.isEmpty()) {
              resultsBuilder_.dispose();
              resultsBuilder_ = null;
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
              resultsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getResultsFieldBuilder() : null;
            } else {
              resultsBuilder_.addAllMessages(other.results_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.TextClassResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.TextClassResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<nvidia.riva.nlp.RivaNlp.ClassificationResult> results_ =
        java.util.Collections.emptyList();
      private void ensureResultsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          results_ = new java.util.ArrayList<nvidia.riva.nlp.RivaNlp.ClassificationResult>(results_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.ClassificationResult, nvidia.riva.nlp.RivaNlp.ClassificationResult.Builder, nvidia.riva.nlp.RivaNlp.ClassificationResultOrBuilder> resultsBuilder_;

      /**
       * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
       */
      public java.util.List<nvidia.riva.nlp.RivaNlp.ClassificationResult> getResultsList() {
        if (resultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(results_);
        } else {
          return resultsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
       */
      public int getResultsCount() {
        if (resultsBuilder_ == null) {
          return results_.size();
        } else {
          return resultsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.ClassificationResult getResults(int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);
        } else {
          return resultsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
       */
      public Builder setResults(
          int index, nvidia.riva.nlp.RivaNlp.ClassificationResult value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.set(index, value);
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
       */
      public Builder setResults(
          int index, nvidia.riva.nlp.RivaNlp.ClassificationResult.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.set(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
       */
      public Builder addResults(nvidia.riva.nlp.RivaNlp.ClassificationResult value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
       */
      public Builder addResults(
          int index, nvidia.riva.nlp.RivaNlp.ClassificationResult value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(index, value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
       */
      public Builder addResults(
          nvidia.riva.nlp.RivaNlp.ClassificationResult.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
       */
      public Builder addResults(
          int index, nvidia.riva.nlp.RivaNlp.ClassificationResult.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
       */
      public Builder addAllResults(
          java.lang.Iterable<? extends nvidia.riva.nlp.RivaNlp.ClassificationResult> values) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, results_);
          onChanged();
        } else {
          resultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
       */
      public Builder clearResults() {
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
       */
      public Builder removeResults(int index) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.remove(index);
          onChanged();
        } else {
          resultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.ClassificationResult.Builder getResultsBuilder(
          int index) {
        return getResultsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.ClassificationResultOrBuilder getResultsOrBuilder(
          int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);  } else {
          return resultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
       */
      public java.util.List<? extends nvidia.riva.nlp.RivaNlp.ClassificationResultOrBuilder> 
           getResultsOrBuilderList() {
        if (resultsBuilder_ != null) {
          return resultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(results_);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.ClassificationResult.Builder addResultsBuilder() {
        return getResultsFieldBuilder().addBuilder(
            nvidia.riva.nlp.RivaNlp.ClassificationResult.getDefaultInstance());
      }
      /**
       * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.ClassificationResult.Builder addResultsBuilder(
          int index) {
        return getResultsFieldBuilder().addBuilder(
            index, nvidia.riva.nlp.RivaNlp.ClassificationResult.getDefaultInstance());
      }
      /**
       * <code>repeated .nvidia.riva.nlp.ClassificationResult results = 1;</code>
       */
      public java.util.List<nvidia.riva.nlp.RivaNlp.ClassificationResult.Builder> 
           getResultsBuilderList() {
        return getResultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.ClassificationResult, nvidia.riva.nlp.RivaNlp.ClassificationResult.Builder, nvidia.riva.nlp.RivaNlp.ClassificationResultOrBuilder> 
          getResultsFieldBuilder() {
        if (resultsBuilder_ == null) {
          resultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              nvidia.riva.nlp.RivaNlp.ClassificationResult, nvidia.riva.nlp.RivaNlp.ClassificationResult.Builder, nvidia.riva.nlp.RivaNlp.ClassificationResultOrBuilder>(
                  results_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          results_ = null;
        }
        return resultsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.TextClassResponse)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.TextClassResponse)
    private static final nvidia.riva.nlp.RivaNlp.TextClassResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.TextClassResponse();
    }

    public static nvidia.riva.nlp.RivaNlp.TextClassResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TextClassResponse>
        PARSER = new com.google.protobuf.AbstractParser<TextClassResponse>() {
      public TextClassResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TextClassResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TextClassResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TextClassResponse> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.TextClassResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TokenClassRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.TokenClassRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    java.util.List<java.lang.String>
        getTextList();
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    int getTextCount();
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    java.lang.String getText(int index);
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes(int index);

    /**
     * <pre>
     * Return the top N classification results for each input. 0 or 1 will return top class, otherwise N.
     * Note: Current disabled.
     * </pre>
     *
     * <code>optional uint32 top_n = 3;</code>
     */
    int getTopN();

    /**
     * <code>optional .nvidia.riva.nlp.NLPModelParams model = 4;</code>
     */
    boolean hasModel();
    /**
     * <code>optional .nvidia.riva.nlp.NLPModelParams model = 4;</code>
     */
    nvidia.riva.nlp.RivaNlp.NLPModelParams getModel();
    /**
     * <code>optional .nvidia.riva.nlp.NLPModelParams model = 4;</code>
     */
    nvidia.riva.nlp.RivaNlp.NLPModelParamsOrBuilder getModelOrBuilder();
  }
  /**
   * <pre>
   * TokenClassRequest is the input message to the ClassifyText service.
   * </pre>
   *
   * Protobuf type {@code nvidia.riva.nlp.TokenClassRequest}
   */
  public  static final class TokenClassRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.TokenClassRequest)
      TokenClassRequestOrBuilder {
    // Use TokenClassRequest.newBuilder() to construct.
    private TokenClassRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TokenClassRequest() {
      text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      topN_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TokenClassRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                text_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              text_.add(s);
              break;
            }
            case 24: {

              topN_ = input.readUInt32();
              break;
            }
            case 34: {
              nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder subBuilder = null;
              if (model_ != null) {
                subBuilder = model_.toBuilder();
              }
              model_ = input.readMessage(nvidia.riva.nlp.RivaNlp.NLPModelParams.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(model_);
                model_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          text_ = text_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.TokenClassRequest.class, nvidia.riva.nlp.RivaNlp.TokenClassRequest.Builder.class);
    }

    private int bitField0_;
    public static final int TEXT_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList text_;
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getTextList() {
      return text_;
    }
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    public int getTextCount() {
      return text_.size();
    }
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    public java.lang.String getText(int index) {
      return text_.get(index);
    }
    /**
     * <pre>
     * Each repeated text element is handled independently for handling multiple
     * input strings with a single request
     * </pre>
     *
     * <code>repeated string text = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes(int index) {
      return text_.getByteString(index);
    }

    public static final int TOP_N_FIELD_NUMBER = 3;
    private int topN_;
    /**
     * <pre>
     * Return the top N classification results for each input. 0 or 1 will return top class, otherwise N.
     * Note: Current disabled.
     * </pre>
     *
     * <code>optional uint32 top_n = 3;</code>
     */
    public int getTopN() {
      return topN_;
    }

    public static final int MODEL_FIELD_NUMBER = 4;
    private nvidia.riva.nlp.RivaNlp.NLPModelParams model_;
    /**
     * <code>optional .nvidia.riva.nlp.NLPModelParams model = 4;</code>
     */
    public boolean hasModel() {
      return model_ != null;
    }
    /**
     * <code>optional .nvidia.riva.nlp.NLPModelParams model = 4;</code>
     */
    public nvidia.riva.nlp.RivaNlp.NLPModelParams getModel() {
      return model_ == null ? nvidia.riva.nlp.RivaNlp.NLPModelParams.getDefaultInstance() : model_;
    }
    /**
     * <code>optional .nvidia.riva.nlp.NLPModelParams model = 4;</code>
     */
    public nvidia.riva.nlp.RivaNlp.NLPModelParamsOrBuilder getModelOrBuilder() {
      return getModel();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < text_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, text_.getRaw(i));
      }
      if (topN_ != 0) {
        output.writeUInt32(3, topN_);
      }
      if (model_ != null) {
        output.writeMessage(4, getModel());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < text_.size(); i++) {
          dataSize += computeStringSizeNoTag(text_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getTextList().size();
      }
      if (topN_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, topN_);
      }
      if (model_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getModel());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.TokenClassRequest)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.TokenClassRequest other = (nvidia.riva.nlp.RivaNlp.TokenClassRequest) obj;

      boolean result = true;
      result = result && getTextList()
          .equals(other.getTextList());
      result = result && (getTopN()
          == other.getTopN());
      result = result && (hasModel() == other.hasModel());
      if (hasModel()) {
        result = result && getModel()
            .equals(other.getModel());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getTextCount() > 0) {
        hash = (37 * hash) + TEXT_FIELD_NUMBER;
        hash = (53 * hash) + getTextList().hashCode();
      }
      hash = (37 * hash) + TOP_N_FIELD_NUMBER;
      hash = (53 * hash) + getTopN();
      if (hasModel()) {
        hash = (37 * hash) + MODEL_FIELD_NUMBER;
        hash = (53 * hash) + getModel().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.TokenClassRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.TokenClassRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * TokenClassRequest is the input message to the ClassifyText service.
     * </pre>
     *
     * Protobuf type {@code nvidia.riva.nlp.TokenClassRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.TokenClassRequest)
        nvidia.riva.nlp.RivaNlp.TokenClassRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.TokenClassRequest.class, nvidia.riva.nlp.RivaNlp.TokenClassRequest.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.TokenClassRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        topN_ = 0;

        if (modelBuilder_ == null) {
          model_ = null;
        } else {
          model_ = null;
          modelBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassRequest_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.TokenClassRequest getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.TokenClassRequest.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.TokenClassRequest build() {
        nvidia.riva.nlp.RivaNlp.TokenClassRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.TokenClassRequest buildPartial() {
        nvidia.riva.nlp.RivaNlp.TokenClassRequest result = new nvidia.riva.nlp.RivaNlp.TokenClassRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          text_ = text_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.text_ = text_;
        result.topN_ = topN_;
        if (modelBuilder_ == null) {
          result.model_ = model_;
        } else {
          result.model_ = modelBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.TokenClassRequest) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.TokenClassRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.TokenClassRequest other) {
        if (other == nvidia.riva.nlp.RivaNlp.TokenClassRequest.getDefaultInstance()) return this;
        if (!other.text_.isEmpty()) {
          if (text_.isEmpty()) {
            text_ = other.text_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTextIsMutable();
            text_.addAll(other.text_);
          }
          onChanged();
        }
        if (other.getTopN() != 0) {
          setTopN(other.getTopN());
        }
        if (other.hasModel()) {
          mergeModel(other.getModel());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.TokenClassRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.TokenClassRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureTextIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          text_ = new com.google.protobuf.LazyStringArrayList(text_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getTextList() {
        return text_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public int getTextCount() {
        return text_.size();
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public java.lang.String getText(int index) {
        return text_.get(index);
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes(int index) {
        return text_.getByteString(index);
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public Builder setText(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTextIsMutable();
        text_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public Builder addText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureTextIsMutable();
        text_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public Builder addAllText(
          java.lang.Iterable<java.lang.String> values) {
        ensureTextIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, text_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public Builder clearText() {
        text_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Each repeated text element is handled independently for handling multiple
       * input strings with a single request
       * </pre>
       *
       * <code>repeated string text = 1;</code>
       */
      public Builder addTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureTextIsMutable();
        text_.add(value);
        onChanged();
        return this;
      }

      private int topN_ ;
      /**
       * <pre>
       * Return the top N classification results for each input. 0 or 1 will return top class, otherwise N.
       * Note: Current disabled.
       * </pre>
       *
       * <code>optional uint32 top_n = 3;</code>
       */
      public int getTopN() {
        return topN_;
      }
      /**
       * <pre>
       * Return the top N classification results for each input. 0 or 1 will return top class, otherwise N.
       * Note: Current disabled.
       * </pre>
       *
       * <code>optional uint32 top_n = 3;</code>
       */
      public Builder setTopN(int value) {
        
        topN_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Return the top N classification results for each input. 0 or 1 will return top class, otherwise N.
       * Note: Current disabled.
       * </pre>
       *
       * <code>optional uint32 top_n = 3;</code>
       */
      public Builder clearTopN() {
        
        topN_ = 0;
        onChanged();
        return this;
      }

      private nvidia.riva.nlp.RivaNlp.NLPModelParams model_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.NLPModelParams, nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder, nvidia.riva.nlp.RivaNlp.NLPModelParamsOrBuilder> modelBuilder_;
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 4;</code>
       */
      public boolean hasModel() {
        return modelBuilder_ != null || model_ != null;
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 4;</code>
       */
      public nvidia.riva.nlp.RivaNlp.NLPModelParams getModel() {
        if (modelBuilder_ == null) {
          return model_ == null ? nvidia.riva.nlp.RivaNlp.NLPModelParams.getDefaultInstance() : model_;
        } else {
          return modelBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 4;</code>
       */
      public Builder setModel(nvidia.riva.nlp.RivaNlp.NLPModelParams value) {
        if (modelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          model_ = value;
          onChanged();
        } else {
          modelBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 4;</code>
       */
      public Builder setModel(
          nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder builderForValue) {
        if (modelBuilder_ == null) {
          model_ = builderForValue.build();
          onChanged();
        } else {
          modelBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 4;</code>
       */
      public Builder mergeModel(nvidia.riva.nlp.RivaNlp.NLPModelParams value) {
        if (modelBuilder_ == null) {
          if (model_ != null) {
            model_ =
              nvidia.riva.nlp.RivaNlp.NLPModelParams.newBuilder(model_).mergeFrom(value).buildPartial();
          } else {
            model_ = value;
          }
          onChanged();
        } else {
          modelBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 4;</code>
       */
      public Builder clearModel() {
        if (modelBuilder_ == null) {
          model_ = null;
          onChanged();
        } else {
          model_ = null;
          modelBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 4;</code>
       */
      public nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder getModelBuilder() {
        
        onChanged();
        return getModelFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 4;</code>
       */
      public nvidia.riva.nlp.RivaNlp.NLPModelParamsOrBuilder getModelOrBuilder() {
        if (modelBuilder_ != null) {
          return modelBuilder_.getMessageOrBuilder();
        } else {
          return model_ == null ?
              nvidia.riva.nlp.RivaNlp.NLPModelParams.getDefaultInstance() : model_;
        }
      }
      /**
       * <code>optional .nvidia.riva.nlp.NLPModelParams model = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.NLPModelParams, nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder, nvidia.riva.nlp.RivaNlp.NLPModelParamsOrBuilder> 
          getModelFieldBuilder() {
        if (modelBuilder_ == null) {
          modelBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nvidia.riva.nlp.RivaNlp.NLPModelParams, nvidia.riva.nlp.RivaNlp.NLPModelParams.Builder, nvidia.riva.nlp.RivaNlp.NLPModelParamsOrBuilder>(
                  getModel(),
                  getParentForChildren(),
                  isClean());
          model_ = null;
        }
        return modelBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.TokenClassRequest)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.TokenClassRequest)
    private static final nvidia.riva.nlp.RivaNlp.TokenClassRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.TokenClassRequest();
    }

    public static nvidia.riva.nlp.RivaNlp.TokenClassRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TokenClassRequest>
        PARSER = new com.google.protobuf.AbstractParser<TokenClassRequest>() {
      public TokenClassRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TokenClassRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TokenClassRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TokenClassRequest> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.TokenClassRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TokenClassValueOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.TokenClassValue)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string token = 1;</code>
     */
    java.lang.String getToken();
    /**
     * <code>optional string token = 1;</code>
     */
    com.google.protobuf.ByteString
        getTokenBytes();

    /**
     * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
     */
    java.util.List<nvidia.riva.nlp.RivaNlp.Classification> 
        getLabelList();
    /**
     * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
     */
    nvidia.riva.nlp.RivaNlp.Classification getLabel(int index);
    /**
     * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
     */
    int getLabelCount();
    /**
     * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
     */
    java.util.List<? extends nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder> 
        getLabelOrBuilderList();
    /**
     * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
     */
    nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder getLabelOrBuilder(
        int index);

    /**
     * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
     */
    java.util.List<nvidia.riva.nlp.RivaNlp.Span> 
        getSpanList();
    /**
     * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
     */
    nvidia.riva.nlp.RivaNlp.Span getSpan(int index);
    /**
     * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
     */
    int getSpanCount();
    /**
     * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
     */
    java.util.List<? extends nvidia.riva.nlp.RivaNlp.SpanOrBuilder> 
        getSpanOrBuilderList();
    /**
     * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
     */
    nvidia.riva.nlp.RivaNlp.SpanOrBuilder getSpanOrBuilder(
        int index);
  }
  /**
   * <pre>
   * TokenClassValue is used to correlate an input token with its classification results
   * </pre>
   *
   * Protobuf type {@code nvidia.riva.nlp.TokenClassValue}
   */
  public  static final class TokenClassValue extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.TokenClassValue)
      TokenClassValueOrBuilder {
    // Use TokenClassValue.newBuilder() to construct.
    private TokenClassValue(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TokenClassValue() {
      token_ = "";
      label_ = java.util.Collections.emptyList();
      span_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TokenClassValue(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              token_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                label_ = new java.util.ArrayList<nvidia.riva.nlp.RivaNlp.Classification>();
                mutable_bitField0_ |= 0x00000002;
              }
              label_.add(
                  input.readMessage(nvidia.riva.nlp.RivaNlp.Classification.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                span_ = new java.util.ArrayList<nvidia.riva.nlp.RivaNlp.Span>();
                mutable_bitField0_ |= 0x00000004;
              }
              span_.add(
                  input.readMessage(nvidia.riva.nlp.RivaNlp.Span.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          label_ = java.util.Collections.unmodifiableList(label_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          span_ = java.util.Collections.unmodifiableList(span_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassValue_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassValue_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.TokenClassValue.class, nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder.class);
    }

    private int bitField0_;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private volatile java.lang.Object token_;
    /**
     * <code>optional string token = 1;</code>
     */
    public java.lang.String getToken() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        token_ = s;
        return s;
      }
    }
    /**
     * <code>optional string token = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTokenBytes() {
      java.lang.Object ref = token_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        token_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LABEL_FIELD_NUMBER = 2;
    private java.util.List<nvidia.riva.nlp.RivaNlp.Classification> label_;
    /**
     * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
     */
    public java.util.List<nvidia.riva.nlp.RivaNlp.Classification> getLabelList() {
      return label_;
    }
    /**
     * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
     */
    public java.util.List<? extends nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder> 
        getLabelOrBuilderList() {
      return label_;
    }
    /**
     * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
     */
    public int getLabelCount() {
      return label_.size();
    }
    /**
     * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
     */
    public nvidia.riva.nlp.RivaNlp.Classification getLabel(int index) {
      return label_.get(index);
    }
    /**
     * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
     */
    public nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder getLabelOrBuilder(
        int index) {
      return label_.get(index);
    }

    public static final int SPAN_FIELD_NUMBER = 3;
    private java.util.List<nvidia.riva.nlp.RivaNlp.Span> span_;
    /**
     * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
     */
    public java.util.List<nvidia.riva.nlp.RivaNlp.Span> getSpanList() {
      return span_;
    }
    /**
     * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
     */
    public java.util.List<? extends nvidia.riva.nlp.RivaNlp.SpanOrBuilder> 
        getSpanOrBuilderList() {
      return span_;
    }
    /**
     * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
     */
    public int getSpanCount() {
      return span_.size();
    }
    /**
     * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
     */
    public nvidia.riva.nlp.RivaNlp.Span getSpan(int index) {
      return span_.get(index);
    }
    /**
     * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
     */
    public nvidia.riva.nlp.RivaNlp.SpanOrBuilder getSpanOrBuilder(
        int index) {
      return span_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTokenBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, token_);
      }
      for (int i = 0; i < label_.size(); i++) {
        output.writeMessage(2, label_.get(i));
      }
      for (int i = 0; i < span_.size(); i++) {
        output.writeMessage(3, span_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTokenBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, token_);
      }
      for (int i = 0; i < label_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, label_.get(i));
      }
      for (int i = 0; i < span_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, span_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.TokenClassValue)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.TokenClassValue other = (nvidia.riva.nlp.RivaNlp.TokenClassValue) obj;

      boolean result = true;
      result = result && getToken()
          .equals(other.getToken());
      result = result && getLabelList()
          .equals(other.getLabelList());
      result = result && getSpanList()
          .equals(other.getSpanList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + TOKEN_FIELD_NUMBER;
      hash = (53 * hash) + getToken().hashCode();
      if (getLabelCount() > 0) {
        hash = (37 * hash) + LABEL_FIELD_NUMBER;
        hash = (53 * hash) + getLabelList().hashCode();
      }
      if (getSpanCount() > 0) {
        hash = (37 * hash) + SPAN_FIELD_NUMBER;
        hash = (53 * hash) + getSpanList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.TokenClassValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.TokenClassValue prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * TokenClassValue is used to correlate an input token with its classification results
     * </pre>
     *
     * Protobuf type {@code nvidia.riva.nlp.TokenClassValue}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.TokenClassValue)
        nvidia.riva.nlp.RivaNlp.TokenClassValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassValue_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.TokenClassValue.class, nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.TokenClassValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLabelFieldBuilder();
          getSpanFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        token_ = "";

        if (labelBuilder_ == null) {
          label_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          labelBuilder_.clear();
        }
        if (spanBuilder_ == null) {
          span_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          spanBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassValue_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.TokenClassValue getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.TokenClassValue.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.TokenClassValue build() {
        nvidia.riva.nlp.RivaNlp.TokenClassValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.TokenClassValue buildPartial() {
        nvidia.riva.nlp.RivaNlp.TokenClassValue result = new nvidia.riva.nlp.RivaNlp.TokenClassValue(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.token_ = token_;
        if (labelBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            label_ = java.util.Collections.unmodifiableList(label_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.label_ = label_;
        } else {
          result.label_ = labelBuilder_.build();
        }
        if (spanBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            span_ = java.util.Collections.unmodifiableList(span_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.span_ = span_;
        } else {
          result.span_ = spanBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.TokenClassValue) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.TokenClassValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.TokenClassValue other) {
        if (other == nvidia.riva.nlp.RivaNlp.TokenClassValue.getDefaultInstance()) return this;
        if (!other.getToken().isEmpty()) {
          token_ = other.token_;
          onChanged();
        }
        if (labelBuilder_ == null) {
          if (!other.label_.isEmpty()) {
            if (label_.isEmpty()) {
              label_ = other.label_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureLabelIsMutable();
              label_.addAll(other.label_);
            }
            onChanged();
          }
        } else {
          if (!other.label_.isEmpty()) {
            if (labelBuilder_.isEmpty()) {
              labelBuilder_.dispose();
              labelBuilder_ = null;
              label_ = other.label_;
              bitField0_ = (bitField0_ & ~0x00000002);
              labelBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLabelFieldBuilder() : null;
            } else {
              labelBuilder_.addAllMessages(other.label_);
            }
          }
        }
        if (spanBuilder_ == null) {
          if (!other.span_.isEmpty()) {
            if (span_.isEmpty()) {
              span_ = other.span_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSpanIsMutable();
              span_.addAll(other.span_);
            }
            onChanged();
          }
        } else {
          if (!other.span_.isEmpty()) {
            if (spanBuilder_.isEmpty()) {
              spanBuilder_.dispose();
              spanBuilder_ = null;
              span_ = other.span_;
              bitField0_ = (bitField0_ & ~0x00000004);
              spanBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSpanFieldBuilder() : null;
            } else {
              spanBuilder_.addAllMessages(other.span_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.TokenClassValue parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.TokenClassValue) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object token_ = "";
      /**
       * <code>optional string token = 1;</code>
       */
      public java.lang.String getToken() {
        java.lang.Object ref = token_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          token_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string token = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTokenBytes() {
        java.lang.Object ref = token_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          token_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string token = 1;</code>
       */
      public Builder setToken(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        token_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string token = 1;</code>
       */
      public Builder clearToken() {
        
        token_ = getDefaultInstance().getToken();
        onChanged();
        return this;
      }
      /**
       * <code>optional string token = 1;</code>
       */
      public Builder setTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        token_ = value;
        onChanged();
        return this;
      }

      private java.util.List<nvidia.riva.nlp.RivaNlp.Classification> label_ =
        java.util.Collections.emptyList();
      private void ensureLabelIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          label_ = new java.util.ArrayList<nvidia.riva.nlp.RivaNlp.Classification>(label_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.Classification, nvidia.riva.nlp.RivaNlp.Classification.Builder, nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder> labelBuilder_;

      /**
       * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
       */
      public java.util.List<nvidia.riva.nlp.RivaNlp.Classification> getLabelList() {
        if (labelBuilder_ == null) {
          return java.util.Collections.unmodifiableList(label_);
        } else {
          return labelBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
       */
      public int getLabelCount() {
        if (labelBuilder_ == null) {
          return label_.size();
        } else {
          return labelBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
       */
      public nvidia.riva.nlp.RivaNlp.Classification getLabel(int index) {
        if (labelBuilder_ == null) {
          return label_.get(index);
        } else {
          return labelBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
       */
      public Builder setLabel(
          int index, nvidia.riva.nlp.RivaNlp.Classification value) {
        if (labelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLabelIsMutable();
          label_.set(index, value);
          onChanged();
        } else {
          labelBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
       */
      public Builder setLabel(
          int index, nvidia.riva.nlp.RivaNlp.Classification.Builder builderForValue) {
        if (labelBuilder_ == null) {
          ensureLabelIsMutable();
          label_.set(index, builderForValue.build());
          onChanged();
        } else {
          labelBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
       */
      public Builder addLabel(nvidia.riva.nlp.RivaNlp.Classification value) {
        if (labelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLabelIsMutable();
          label_.add(value);
          onChanged();
        } else {
          labelBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
       */
      public Builder addLabel(
          int index, nvidia.riva.nlp.RivaNlp.Classification value) {
        if (labelBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLabelIsMutable();
          label_.add(index, value);
          onChanged();
        } else {
          labelBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
       */
      public Builder addLabel(
          nvidia.riva.nlp.RivaNlp.Classification.Builder builderForValue) {
        if (labelBuilder_ == null) {
          ensureLabelIsMutable();
          label_.add(builderForValue.build());
          onChanged();
        } else {
          labelBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
       */
      public Builder addLabel(
          int index, nvidia.riva.nlp.RivaNlp.Classification.Builder builderForValue) {
        if (labelBuilder_ == null) {
          ensureLabelIsMutable();
          label_.add(index, builderForValue.build());
          onChanged();
        } else {
          labelBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
       */
      public Builder addAllLabel(
          java.lang.Iterable<? extends nvidia.riva.nlp.RivaNlp.Classification> values) {
        if (labelBuilder_ == null) {
          ensureLabelIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, label_);
          onChanged();
        } else {
          labelBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
       */
      public Builder clearLabel() {
        if (labelBuilder_ == null) {
          label_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          labelBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
       */
      public Builder removeLabel(int index) {
        if (labelBuilder_ == null) {
          ensureLabelIsMutable();
          label_.remove(index);
          onChanged();
        } else {
          labelBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
       */
      public nvidia.riva.nlp.RivaNlp.Classification.Builder getLabelBuilder(
          int index) {
        return getLabelFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
       */
      public nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder getLabelOrBuilder(
          int index) {
        if (labelBuilder_ == null) {
          return label_.get(index);  } else {
          return labelBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
       */
      public java.util.List<? extends nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder> 
           getLabelOrBuilderList() {
        if (labelBuilder_ != null) {
          return labelBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(label_);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
       */
      public nvidia.riva.nlp.RivaNlp.Classification.Builder addLabelBuilder() {
        return getLabelFieldBuilder().addBuilder(
            nvidia.riva.nlp.RivaNlp.Classification.getDefaultInstance());
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
       */
      public nvidia.riva.nlp.RivaNlp.Classification.Builder addLabelBuilder(
          int index) {
        return getLabelFieldBuilder().addBuilder(
            index, nvidia.riva.nlp.RivaNlp.Classification.getDefaultInstance());
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Classification label = 2;</code>
       */
      public java.util.List<nvidia.riva.nlp.RivaNlp.Classification.Builder> 
           getLabelBuilderList() {
        return getLabelFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.Classification, nvidia.riva.nlp.RivaNlp.Classification.Builder, nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder> 
          getLabelFieldBuilder() {
        if (labelBuilder_ == null) {
          labelBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              nvidia.riva.nlp.RivaNlp.Classification, nvidia.riva.nlp.RivaNlp.Classification.Builder, nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder>(
                  label_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          label_ = null;
        }
        return labelBuilder_;
      }

      private java.util.List<nvidia.riva.nlp.RivaNlp.Span> span_ =
        java.util.Collections.emptyList();
      private void ensureSpanIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          span_ = new java.util.ArrayList<nvidia.riva.nlp.RivaNlp.Span>(span_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.Span, nvidia.riva.nlp.RivaNlp.Span.Builder, nvidia.riva.nlp.RivaNlp.SpanOrBuilder> spanBuilder_;

      /**
       * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
       */
      public java.util.List<nvidia.riva.nlp.RivaNlp.Span> getSpanList() {
        if (spanBuilder_ == null) {
          return java.util.Collections.unmodifiableList(span_);
        } else {
          return spanBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
       */
      public int getSpanCount() {
        if (spanBuilder_ == null) {
          return span_.size();
        } else {
          return spanBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
       */
      public nvidia.riva.nlp.RivaNlp.Span getSpan(int index) {
        if (spanBuilder_ == null) {
          return span_.get(index);
        } else {
          return spanBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
       */
      public Builder setSpan(
          int index, nvidia.riva.nlp.RivaNlp.Span value) {
        if (spanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpanIsMutable();
          span_.set(index, value);
          onChanged();
        } else {
          spanBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
       */
      public Builder setSpan(
          int index, nvidia.riva.nlp.RivaNlp.Span.Builder builderForValue) {
        if (spanBuilder_ == null) {
          ensureSpanIsMutable();
          span_.set(index, builderForValue.build());
          onChanged();
        } else {
          spanBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
       */
      public Builder addSpan(nvidia.riva.nlp.RivaNlp.Span value) {
        if (spanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpanIsMutable();
          span_.add(value);
          onChanged();
        } else {
          spanBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
       */
      public Builder addSpan(
          int index, nvidia.riva.nlp.RivaNlp.Span value) {
        if (spanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpanIsMutable();
          span_.add(index, value);
          onChanged();
        } else {
          spanBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
       */
      public Builder addSpan(
          nvidia.riva.nlp.RivaNlp.Span.Builder builderForValue) {
        if (spanBuilder_ == null) {
          ensureSpanIsMutable();
          span_.add(builderForValue.build());
          onChanged();
        } else {
          spanBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
       */
      public Builder addSpan(
          int index, nvidia.riva.nlp.RivaNlp.Span.Builder builderForValue) {
        if (spanBuilder_ == null) {
          ensureSpanIsMutable();
          span_.add(index, builderForValue.build());
          onChanged();
        } else {
          spanBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
       */
      public Builder addAllSpan(
          java.lang.Iterable<? extends nvidia.riva.nlp.RivaNlp.Span> values) {
        if (spanBuilder_ == null) {
          ensureSpanIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, span_);
          onChanged();
        } else {
          spanBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
       */
      public Builder clearSpan() {
        if (spanBuilder_ == null) {
          span_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          spanBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
       */
      public Builder removeSpan(int index) {
        if (spanBuilder_ == null) {
          ensureSpanIsMutable();
          span_.remove(index);
          onChanged();
        } else {
          spanBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
       */
      public nvidia.riva.nlp.RivaNlp.Span.Builder getSpanBuilder(
          int index) {
        return getSpanFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
       */
      public nvidia.riva.nlp.RivaNlp.SpanOrBuilder getSpanOrBuilder(
          int index) {
        if (spanBuilder_ == null) {
          return span_.get(index);  } else {
          return spanBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
       */
      public java.util.List<? extends nvidia.riva.nlp.RivaNlp.SpanOrBuilder> 
           getSpanOrBuilderList() {
        if (spanBuilder_ != null) {
          return spanBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(span_);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
       */
      public nvidia.riva.nlp.RivaNlp.Span.Builder addSpanBuilder() {
        return getSpanFieldBuilder().addBuilder(
            nvidia.riva.nlp.RivaNlp.Span.getDefaultInstance());
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
       */
      public nvidia.riva.nlp.RivaNlp.Span.Builder addSpanBuilder(
          int index) {
        return getSpanFieldBuilder().addBuilder(
            index, nvidia.riva.nlp.RivaNlp.Span.getDefaultInstance());
      }
      /**
       * <code>repeated .nvidia.riva.nlp.Span span = 3;</code>
       */
      public java.util.List<nvidia.riva.nlp.RivaNlp.Span.Builder> 
           getSpanBuilderList() {
        return getSpanFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.Span, nvidia.riva.nlp.RivaNlp.Span.Builder, nvidia.riva.nlp.RivaNlp.SpanOrBuilder> 
          getSpanFieldBuilder() {
        if (spanBuilder_ == null) {
          spanBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              nvidia.riva.nlp.RivaNlp.Span, nvidia.riva.nlp.RivaNlp.Span.Builder, nvidia.riva.nlp.RivaNlp.SpanOrBuilder>(
                  span_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          span_ = null;
        }
        return spanBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.TokenClassValue)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.TokenClassValue)
    private static final nvidia.riva.nlp.RivaNlp.TokenClassValue DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.TokenClassValue();
    }

    public static nvidia.riva.nlp.RivaNlp.TokenClassValue getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TokenClassValue>
        PARSER = new com.google.protobuf.AbstractParser<TokenClassValue>() {
      public TokenClassValue parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TokenClassValue(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TokenClassValue> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TokenClassValue> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.TokenClassValue getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TokenClassSequenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.TokenClassSequence)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
     */
    java.util.List<nvidia.riva.nlp.RivaNlp.TokenClassValue> 
        getResultsList();
    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
     */
    nvidia.riva.nlp.RivaNlp.TokenClassValue getResults(int index);
    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
     */
    int getResultsCount();
    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
     */
    java.util.List<? extends nvidia.riva.nlp.RivaNlp.TokenClassValueOrBuilder> 
        getResultsOrBuilderList();
    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
     */
    nvidia.riva.nlp.RivaNlp.TokenClassValueOrBuilder getResultsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * TokenClassSequence is used for returning a sequence of TokenClassValue objects
   * in the original order of input tokens
   * </pre>
   *
   * Protobuf type {@code nvidia.riva.nlp.TokenClassSequence}
   */
  public  static final class TokenClassSequence extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.TokenClassSequence)
      TokenClassSequenceOrBuilder {
    // Use TokenClassSequence.newBuilder() to construct.
    private TokenClassSequence(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TokenClassSequence() {
      results_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TokenClassSequence(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                results_ = new java.util.ArrayList<nvidia.riva.nlp.RivaNlp.TokenClassValue>();
                mutable_bitField0_ |= 0x00000001;
              }
              results_.add(
                  input.readMessage(nvidia.riva.nlp.RivaNlp.TokenClassValue.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          results_ = java.util.Collections.unmodifiableList(results_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassSequence_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassSequence_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.TokenClassSequence.class, nvidia.riva.nlp.RivaNlp.TokenClassSequence.Builder.class);
    }

    public static final int RESULTS_FIELD_NUMBER = 1;
    private java.util.List<nvidia.riva.nlp.RivaNlp.TokenClassValue> results_;
    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
     */
    public java.util.List<nvidia.riva.nlp.RivaNlp.TokenClassValue> getResultsList() {
      return results_;
    }
    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
     */
    public java.util.List<? extends nvidia.riva.nlp.RivaNlp.TokenClassValueOrBuilder> 
        getResultsOrBuilderList() {
      return results_;
    }
    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
     */
    public int getResultsCount() {
      return results_.size();
    }
    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
     */
    public nvidia.riva.nlp.RivaNlp.TokenClassValue getResults(int index) {
      return results_.get(index);
    }
    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
     */
    public nvidia.riva.nlp.RivaNlp.TokenClassValueOrBuilder getResultsOrBuilder(
        int index) {
      return results_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < results_.size(); i++) {
        output.writeMessage(1, results_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < results_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, results_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.TokenClassSequence)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.TokenClassSequence other = (nvidia.riva.nlp.RivaNlp.TokenClassSequence) obj;

      boolean result = true;
      result = result && getResultsList()
          .equals(other.getResultsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getResultsCount() > 0) {
        hash = (37 * hash) + RESULTS_FIELD_NUMBER;
        hash = (53 * hash) + getResultsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.TokenClassSequence parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassSequence parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassSequence parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassSequence parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassSequence parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassSequence parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassSequence parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassSequence parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassSequence parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassSequence parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.TokenClassSequence prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * TokenClassSequence is used for returning a sequence of TokenClassValue objects
     * in the original order of input tokens
     * </pre>
     *
     * Protobuf type {@code nvidia.riva.nlp.TokenClassSequence}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.TokenClassSequence)
        nvidia.riva.nlp.RivaNlp.TokenClassSequenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassSequence_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassSequence_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.TokenClassSequence.class, nvidia.riva.nlp.RivaNlp.TokenClassSequence.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.TokenClassSequence.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getResultsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassSequence_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.TokenClassSequence getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.TokenClassSequence.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.TokenClassSequence build() {
        nvidia.riva.nlp.RivaNlp.TokenClassSequence result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.TokenClassSequence buildPartial() {
        nvidia.riva.nlp.RivaNlp.TokenClassSequence result = new nvidia.riva.nlp.RivaNlp.TokenClassSequence(this);
        int from_bitField0_ = bitField0_;
        if (resultsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            results_ = java.util.Collections.unmodifiableList(results_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.results_ = results_;
        } else {
          result.results_ = resultsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.TokenClassSequence) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.TokenClassSequence)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.TokenClassSequence other) {
        if (other == nvidia.riva.nlp.RivaNlp.TokenClassSequence.getDefaultInstance()) return this;
        if (resultsBuilder_ == null) {
          if (!other.results_.isEmpty()) {
            if (results_.isEmpty()) {
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureResultsIsMutable();
              results_.addAll(other.results_);
            }
            onChanged();
          }
        } else {
          if (!other.results_.isEmpty()) {
            if (resultsBuilder_.isEmpty()) {
              resultsBuilder_.dispose();
              resultsBuilder_ = null;
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
              resultsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getResultsFieldBuilder() : null;
            } else {
              resultsBuilder_.addAllMessages(other.results_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.TokenClassSequence parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.TokenClassSequence) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<nvidia.riva.nlp.RivaNlp.TokenClassValue> results_ =
        java.util.Collections.emptyList();
      private void ensureResultsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          results_ = new java.util.ArrayList<nvidia.riva.nlp.RivaNlp.TokenClassValue>(results_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.TokenClassValue, nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder, nvidia.riva.nlp.RivaNlp.TokenClassValueOrBuilder> resultsBuilder_;

      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
       */
      public java.util.List<nvidia.riva.nlp.RivaNlp.TokenClassValue> getResultsList() {
        if (resultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(results_);
        } else {
          return resultsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
       */
      public int getResultsCount() {
        if (resultsBuilder_ == null) {
          return results_.size();
        } else {
          return resultsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.TokenClassValue getResults(int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);
        } else {
          return resultsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
       */
      public Builder setResults(
          int index, nvidia.riva.nlp.RivaNlp.TokenClassValue value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.set(index, value);
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
       */
      public Builder setResults(
          int index, nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.set(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
       */
      public Builder addResults(nvidia.riva.nlp.RivaNlp.TokenClassValue value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
       */
      public Builder addResults(
          int index, nvidia.riva.nlp.RivaNlp.TokenClassValue value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(index, value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
       */
      public Builder addResults(
          nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
       */
      public Builder addResults(
          int index, nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
       */
      public Builder addAllResults(
          java.lang.Iterable<? extends nvidia.riva.nlp.RivaNlp.TokenClassValue> values) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, results_);
          onChanged();
        } else {
          resultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
       */
      public Builder clearResults() {
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
       */
      public Builder removeResults(int index) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.remove(index);
          onChanged();
        } else {
          resultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder getResultsBuilder(
          int index) {
        return getResultsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.TokenClassValueOrBuilder getResultsOrBuilder(
          int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);  } else {
          return resultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
       */
      public java.util.List<? extends nvidia.riva.nlp.RivaNlp.TokenClassValueOrBuilder> 
           getResultsOrBuilderList() {
        if (resultsBuilder_ != null) {
          return resultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(results_);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder addResultsBuilder() {
        return getResultsFieldBuilder().addBuilder(
            nvidia.riva.nlp.RivaNlp.TokenClassValue.getDefaultInstance());
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder addResultsBuilder(
          int index) {
        return getResultsFieldBuilder().addBuilder(
            index, nvidia.riva.nlp.RivaNlp.TokenClassValue.getDefaultInstance());
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassValue results = 1;</code>
       */
      public java.util.List<nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder> 
           getResultsBuilderList() {
        return getResultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.TokenClassValue, nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder, nvidia.riva.nlp.RivaNlp.TokenClassValueOrBuilder> 
          getResultsFieldBuilder() {
        if (resultsBuilder_ == null) {
          resultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              nvidia.riva.nlp.RivaNlp.TokenClassValue, nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder, nvidia.riva.nlp.RivaNlp.TokenClassValueOrBuilder>(
                  results_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          results_ = null;
        }
        return resultsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.TokenClassSequence)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.TokenClassSequence)
    private static final nvidia.riva.nlp.RivaNlp.TokenClassSequence DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.TokenClassSequence();
    }

    public static nvidia.riva.nlp.RivaNlp.TokenClassSequence getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TokenClassSequence>
        PARSER = new com.google.protobuf.AbstractParser<TokenClassSequence>() {
      public TokenClassSequence parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TokenClassSequence(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TokenClassSequence> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TokenClassSequence> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.TokenClassSequence getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TokenClassResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.TokenClassResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
     */
    java.util.List<nvidia.riva.nlp.RivaNlp.TokenClassSequence> 
        getResultsList();
    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
     */
    nvidia.riva.nlp.RivaNlp.TokenClassSequence getResults(int index);
    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
     */
    int getResultsCount();
    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
     */
    java.util.List<? extends nvidia.riva.nlp.RivaNlp.TokenClassSequenceOrBuilder> 
        getResultsOrBuilderList();
    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
     */
    nvidia.riva.nlp.RivaNlp.TokenClassSequenceOrBuilder getResultsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * TokenClassResponse returns a single TokenClassSequence per input request
   * </pre>
   *
   * Protobuf type {@code nvidia.riva.nlp.TokenClassResponse}
   */
  public  static final class TokenClassResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.TokenClassResponse)
      TokenClassResponseOrBuilder {
    // Use TokenClassResponse.newBuilder() to construct.
    private TokenClassResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TokenClassResponse() {
      results_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TokenClassResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                results_ = new java.util.ArrayList<nvidia.riva.nlp.RivaNlp.TokenClassSequence>();
                mutable_bitField0_ |= 0x00000001;
              }
              results_.add(
                  input.readMessage(nvidia.riva.nlp.RivaNlp.TokenClassSequence.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          results_ = java.util.Collections.unmodifiableList(results_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.TokenClassResponse.class, nvidia.riva.nlp.RivaNlp.TokenClassResponse.Builder.class);
    }

    public static final int RESULTS_FIELD_NUMBER = 1;
    private java.util.List<nvidia.riva.nlp.RivaNlp.TokenClassSequence> results_;
    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
     */
    public java.util.List<nvidia.riva.nlp.RivaNlp.TokenClassSequence> getResultsList() {
      return results_;
    }
    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
     */
    public java.util.List<? extends nvidia.riva.nlp.RivaNlp.TokenClassSequenceOrBuilder> 
        getResultsOrBuilderList() {
      return results_;
    }
    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
     */
    public int getResultsCount() {
      return results_.size();
    }
    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
     */
    public nvidia.riva.nlp.RivaNlp.TokenClassSequence getResults(int index) {
      return results_.get(index);
    }
    /**
     * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
     */
    public nvidia.riva.nlp.RivaNlp.TokenClassSequenceOrBuilder getResultsOrBuilder(
        int index) {
      return results_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < results_.size(); i++) {
        output.writeMessage(1, results_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < results_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, results_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.TokenClassResponse)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.TokenClassResponse other = (nvidia.riva.nlp.RivaNlp.TokenClassResponse) obj;

      boolean result = true;
      result = result && getResultsList()
          .equals(other.getResultsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getResultsCount() > 0) {
        hash = (37 * hash) + RESULTS_FIELD_NUMBER;
        hash = (53 * hash) + getResultsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.TokenClassResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.TokenClassResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.TokenClassResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * TokenClassResponse returns a single TokenClassSequence per input request
     * </pre>
     *
     * Protobuf type {@code nvidia.riva.nlp.TokenClassResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.TokenClassResponse)
        nvidia.riva.nlp.RivaNlp.TokenClassResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.TokenClassResponse.class, nvidia.riva.nlp.RivaNlp.TokenClassResponse.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.TokenClassResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getResultsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_TokenClassResponse_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.TokenClassResponse getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.TokenClassResponse.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.TokenClassResponse build() {
        nvidia.riva.nlp.RivaNlp.TokenClassResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.TokenClassResponse buildPartial() {
        nvidia.riva.nlp.RivaNlp.TokenClassResponse result = new nvidia.riva.nlp.RivaNlp.TokenClassResponse(this);
        int from_bitField0_ = bitField0_;
        if (resultsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            results_ = java.util.Collections.unmodifiableList(results_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.results_ = results_;
        } else {
          result.results_ = resultsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.TokenClassResponse) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.TokenClassResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.TokenClassResponse other) {
        if (other == nvidia.riva.nlp.RivaNlp.TokenClassResponse.getDefaultInstance()) return this;
        if (resultsBuilder_ == null) {
          if (!other.results_.isEmpty()) {
            if (results_.isEmpty()) {
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureResultsIsMutable();
              results_.addAll(other.results_);
            }
            onChanged();
          }
        } else {
          if (!other.results_.isEmpty()) {
            if (resultsBuilder_.isEmpty()) {
              resultsBuilder_.dispose();
              resultsBuilder_ = null;
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
              resultsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getResultsFieldBuilder() : null;
            } else {
              resultsBuilder_.addAllMessages(other.results_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.TokenClassResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.TokenClassResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<nvidia.riva.nlp.RivaNlp.TokenClassSequence> results_ =
        java.util.Collections.emptyList();
      private void ensureResultsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          results_ = new java.util.ArrayList<nvidia.riva.nlp.RivaNlp.TokenClassSequence>(results_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.TokenClassSequence, nvidia.riva.nlp.RivaNlp.TokenClassSequence.Builder, nvidia.riva.nlp.RivaNlp.TokenClassSequenceOrBuilder> resultsBuilder_;

      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
       */
      public java.util.List<nvidia.riva.nlp.RivaNlp.TokenClassSequence> getResultsList() {
        if (resultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(results_);
        } else {
          return resultsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
       */
      public int getResultsCount() {
        if (resultsBuilder_ == null) {
          return results_.size();
        } else {
          return resultsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.TokenClassSequence getResults(int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);
        } else {
          return resultsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
       */
      public Builder setResults(
          int index, nvidia.riva.nlp.RivaNlp.TokenClassSequence value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.set(index, value);
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
       */
      public Builder setResults(
          int index, nvidia.riva.nlp.RivaNlp.TokenClassSequence.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.set(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
       */
      public Builder addResults(nvidia.riva.nlp.RivaNlp.TokenClassSequence value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
       */
      public Builder addResults(
          int index, nvidia.riva.nlp.RivaNlp.TokenClassSequence value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(index, value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
       */
      public Builder addResults(
          nvidia.riva.nlp.RivaNlp.TokenClassSequence.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
       */
      public Builder addResults(
          int index, nvidia.riva.nlp.RivaNlp.TokenClassSequence.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
       */
      public Builder addAllResults(
          java.lang.Iterable<? extends nvidia.riva.nlp.RivaNlp.TokenClassSequence> values) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, results_);
          onChanged();
        } else {
          resultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
       */
      public Builder clearResults() {
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
       */
      public Builder removeResults(int index) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.remove(index);
          onChanged();
        } else {
          resultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.TokenClassSequence.Builder getResultsBuilder(
          int index) {
        return getResultsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.TokenClassSequenceOrBuilder getResultsOrBuilder(
          int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);  } else {
          return resultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
       */
      public java.util.List<? extends nvidia.riva.nlp.RivaNlp.TokenClassSequenceOrBuilder> 
           getResultsOrBuilderList() {
        if (resultsBuilder_ != null) {
          return resultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(results_);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.TokenClassSequence.Builder addResultsBuilder() {
        return getResultsFieldBuilder().addBuilder(
            nvidia.riva.nlp.RivaNlp.TokenClassSequence.getDefaultInstance());
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.TokenClassSequence.Builder addResultsBuilder(
          int index) {
        return getResultsFieldBuilder().addBuilder(
            index, nvidia.riva.nlp.RivaNlp.TokenClassSequence.getDefaultInstance());
      }
      /**
       * <code>repeated .nvidia.riva.nlp.TokenClassSequence results = 1;</code>
       */
      public java.util.List<nvidia.riva.nlp.RivaNlp.TokenClassSequence.Builder> 
           getResultsBuilderList() {
        return getResultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.TokenClassSequence, nvidia.riva.nlp.RivaNlp.TokenClassSequence.Builder, nvidia.riva.nlp.RivaNlp.TokenClassSequenceOrBuilder> 
          getResultsFieldBuilder() {
        if (resultsBuilder_ == null) {
          resultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              nvidia.riva.nlp.RivaNlp.TokenClassSequence, nvidia.riva.nlp.RivaNlp.TokenClassSequence.Builder, nvidia.riva.nlp.RivaNlp.TokenClassSequenceOrBuilder>(
                  results_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          results_ = null;
        }
        return resultsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.TokenClassResponse)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.TokenClassResponse)
    private static final nvidia.riva.nlp.RivaNlp.TokenClassResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.TokenClassResponse();
    }

    public static nvidia.riva.nlp.RivaNlp.TokenClassResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TokenClassResponse>
        PARSER = new com.google.protobuf.AbstractParser<TokenClassResponse>() {
      public TokenClassResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TokenClassResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TokenClassResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TokenClassResponse> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.TokenClassResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AnalyzeIntentContextOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.AnalyzeIntentContext)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * AnalyzeIntentContext is reserved for future use when we may send context back in a
   * a variety of different formats (including raw neural network hidden states)
   * </pre>
   *
   * Protobuf type {@code nvidia.riva.nlp.AnalyzeIntentContext}
   */
  public  static final class AnalyzeIntentContext extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.AnalyzeIntentContext)
      AnalyzeIntentContextOrBuilder {
    // Use AnalyzeIntentContext.newBuilder() to construct.
    private AnalyzeIntentContext(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AnalyzeIntentContext() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AnalyzeIntentContext(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentContext_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentContext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.class, nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.Builder.class);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext other = (nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext) obj;

      boolean result = true;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * AnalyzeIntentContext is reserved for future use when we may send context back in a
     * a variety of different formats (including raw neural network hidden states)
     * </pre>
     *
     * Protobuf type {@code nvidia.riva.nlp.AnalyzeIntentContext}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.AnalyzeIntentContext)
        nvidia.riva.nlp.RivaNlp.AnalyzeIntentContextOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentContext_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentContext_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.class, nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentContext_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext build() {
        nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext buildPartial() {
        nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext result = new nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext(this);
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext other) {
        if (other == nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.getDefaultInstance()) return this;
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.AnalyzeIntentContext)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.AnalyzeIntentContext)
    private static final nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext();
    }

    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AnalyzeIntentContext>
        PARSER = new com.google.protobuf.AbstractParser<AnalyzeIntentContext>() {
      public AnalyzeIntentContext parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AnalyzeIntentContext(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AnalyzeIntentContext> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AnalyzeIntentContext> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AnalyzeIntentOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.AnalyzeIntentOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string previous_intent = 1;</code>
     */
    java.lang.String getPreviousIntent();
    /**
     * <code>optional string previous_intent = 1;</code>
     */
    com.google.protobuf.ByteString
        getPreviousIntentBytes();

    /**
     * <code>optional .nvidia.riva.nlp.AnalyzeIntentContext vectors = 2;</code>
     */
    nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext getVectors();
    /**
     * <code>optional .nvidia.riva.nlp.AnalyzeIntentContext vectors = 2;</code>
     */
    nvidia.riva.nlp.RivaNlp.AnalyzeIntentContextOrBuilder getVectorsOrBuilder();

    /**
     * <pre>
     * Optional domain field. Domain must be supported otherwise an error will be returned.
     * If left blank, a domain detector will be run first and then the query routed to the
     * appropriate intent classifier (if it exists)
     * </pre>
     *
     * <code>optional string domain = 3;</code>
     */
    java.lang.String getDomain();
    /**
     * <pre>
     * Optional domain field. Domain must be supported otherwise an error will be returned.
     * If left blank, a domain detector will be run first and then the query routed to the
     * appropriate intent classifier (if it exists)
     * </pre>
     *
     * <code>optional string domain = 3;</code>
     */
    com.google.protobuf.ByteString
        getDomainBytes();

    /**
     * <pre>
     * Optional language field. Assumed to be "en-US" if not specified.
     * </pre>
     *
     * <code>optional string lang = 4;</code>
     */
    java.lang.String getLang();
    /**
     * <pre>
     * Optional language field. Assumed to be "en-US" if not specified.
     * </pre>
     *
     * <code>optional string lang = 4;</code>
     */
    com.google.protobuf.ByteString
        getLangBytes();

    public nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions.ContextCase getContextCase();
  }
  /**
   * <pre>
   * AnalyzeIntentOptions is an optional configuration message to be sent as part of
   * an AnalyzeIntentRequest with query metadata
   * </pre>
   *
   * Protobuf type {@code nvidia.riva.nlp.AnalyzeIntentOptions}
   */
  public  static final class AnalyzeIntentOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.AnalyzeIntentOptions)
      AnalyzeIntentOptionsOrBuilder {
    // Use AnalyzeIntentOptions.newBuilder() to construct.
    private AnalyzeIntentOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AnalyzeIntentOptions() {
      domain_ = "";
      lang_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AnalyzeIntentOptions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();
              contextCase_ = 1;
              context_ = s;
              break;
            }
            case 18: {
              nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.Builder subBuilder = null;
              if (contextCase_ == 2) {
                subBuilder = ((nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext) context_).toBuilder();
              }
              context_ =
                  input.readMessage(nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext) context_);
                context_ = subBuilder.buildPartial();
              }
              contextCase_ = 2;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              domain_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              lang_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentOptions_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions.class, nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions.Builder.class);
    }

    private int contextCase_ = 0;
    private java.lang.Object context_;
    public enum ContextCase
        implements com.google.protobuf.Internal.EnumLite {
      PREVIOUS_INTENT(1),
      VECTORS(2),
      CONTEXT_NOT_SET(0);
      private final int value;
      private ContextCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ContextCase valueOf(int value) {
        return forNumber(value);
      }

      public static ContextCase forNumber(int value) {
        switch (value) {
          case 1: return PREVIOUS_INTENT;
          case 2: return VECTORS;
          case 0: return CONTEXT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ContextCase
    getContextCase() {
      return ContextCase.forNumber(
          contextCase_);
    }

    public static final int PREVIOUS_INTENT_FIELD_NUMBER = 1;
    /**
     * <code>optional string previous_intent = 1;</code>
     */
    public java.lang.String getPreviousIntent() {
      java.lang.Object ref = "";
      if (contextCase_ == 1) {
        ref = context_;
      }
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (contextCase_ == 1) {
          context_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string previous_intent = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPreviousIntentBytes() {
      java.lang.Object ref = "";
      if (contextCase_ == 1) {
        ref = context_;
      }
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        if (contextCase_ == 1) {
          context_ = b;
        }
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VECTORS_FIELD_NUMBER = 2;
    /**
     * <code>optional .nvidia.riva.nlp.AnalyzeIntentContext vectors = 2;</code>
     */
    public nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext getVectors() {
      if (contextCase_ == 2) {
         return (nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext) context_;
      }
      return nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.getDefaultInstance();
    }
    /**
     * <code>optional .nvidia.riva.nlp.AnalyzeIntentContext vectors = 2;</code>
     */
    public nvidia.riva.nlp.RivaNlp.AnalyzeIntentContextOrBuilder getVectorsOrBuilder() {
      if (contextCase_ == 2) {
         return (nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext) context_;
      }
      return nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.getDefaultInstance();
    }

    public static final int DOMAIN_FIELD_NUMBER = 3;
    private volatile java.lang.Object domain_;
    /**
     * <pre>
     * Optional domain field. Domain must be supported otherwise an error will be returned.
     * If left blank, a domain detector will be run first and then the query routed to the
     * appropriate intent classifier (if it exists)
     * </pre>
     *
     * <code>optional string domain = 3;</code>
     */
    public java.lang.String getDomain() {
      java.lang.Object ref = domain_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        domain_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Optional domain field. Domain must be supported otherwise an error will be returned.
     * If left blank, a domain detector will be run first and then the query routed to the
     * appropriate intent classifier (if it exists)
     * </pre>
     *
     * <code>optional string domain = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDomainBytes() {
      java.lang.Object ref = domain_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        domain_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LANG_FIELD_NUMBER = 4;
    private volatile java.lang.Object lang_;
    /**
     * <pre>
     * Optional language field. Assumed to be "en-US" if not specified.
     * </pre>
     *
     * <code>optional string lang = 4;</code>
     */
    public java.lang.String getLang() {
      java.lang.Object ref = lang_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lang_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Optional language field. Assumed to be "en-US" if not specified.
     * </pre>
     *
     * <code>optional string lang = 4;</code>
     */
    public com.google.protobuf.ByteString
        getLangBytes() {
      java.lang.Object ref = lang_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lang_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (contextCase_ == 1) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, context_);
      }
      if (contextCase_ == 2) {
        output.writeMessage(2, (nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext) context_);
      }
      if (!getDomainBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, domain_);
      }
      if (!getLangBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, lang_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (contextCase_ == 1) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, context_);
      }
      if (contextCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext) context_);
      }
      if (!getDomainBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, domain_);
      }
      if (!getLangBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, lang_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions other = (nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions) obj;

      boolean result = true;
      result = result && getDomain()
          .equals(other.getDomain());
      result = result && getLang()
          .equals(other.getLang());
      result = result && getContextCase().equals(
          other.getContextCase());
      if (!result) return false;
      switch (contextCase_) {
        case 1:
          result = result && getPreviousIntent()
              .equals(other.getPreviousIntent());
          break;
        case 2:
          result = result && getVectors()
              .equals(other.getVectors());
          break;
        case 0:
        default:
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + DOMAIN_FIELD_NUMBER;
      hash = (53 * hash) + getDomain().hashCode();
      hash = (37 * hash) + LANG_FIELD_NUMBER;
      hash = (53 * hash) + getLang().hashCode();
      switch (contextCase_) {
        case 1:
          hash = (37 * hash) + PREVIOUS_INTENT_FIELD_NUMBER;
          hash = (53 * hash) + getPreviousIntent().hashCode();
          break;
        case 2:
          hash = (37 * hash) + VECTORS_FIELD_NUMBER;
          hash = (53 * hash) + getVectors().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * AnalyzeIntentOptions is an optional configuration message to be sent as part of
     * an AnalyzeIntentRequest with query metadata
     * </pre>
     *
     * Protobuf type {@code nvidia.riva.nlp.AnalyzeIntentOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.AnalyzeIntentOptions)
        nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentOptions_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions.class, nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        domain_ = "";

        lang_ = "";

        contextCase_ = 0;
        context_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentOptions_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions build() {
        nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions buildPartial() {
        nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions result = new nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions(this);
        if (contextCase_ == 1) {
          result.context_ = context_;
        }
        if (contextCase_ == 2) {
          if (vectorsBuilder_ == null) {
            result.context_ = context_;
          } else {
            result.context_ = vectorsBuilder_.build();
          }
        }
        result.domain_ = domain_;
        result.lang_ = lang_;
        result.contextCase_ = contextCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions other) {
        if (other == nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions.getDefaultInstance()) return this;
        if (!other.getDomain().isEmpty()) {
          domain_ = other.domain_;
          onChanged();
        }
        if (!other.getLang().isEmpty()) {
          lang_ = other.lang_;
          onChanged();
        }
        switch (other.getContextCase()) {
          case PREVIOUS_INTENT: {
            contextCase_ = 1;
            context_ = other.context_;
            onChanged();
            break;
          }
          case VECTORS: {
            mergeVectors(other.getVectors());
            break;
          }
          case CONTEXT_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int contextCase_ = 0;
      private java.lang.Object context_;
      public ContextCase
          getContextCase() {
        return ContextCase.forNumber(
            contextCase_);
      }

      public Builder clearContext() {
        contextCase_ = 0;
        context_ = null;
        onChanged();
        return this;
      }


      /**
       * <code>optional string previous_intent = 1;</code>
       */
      public java.lang.String getPreviousIntent() {
        java.lang.Object ref = "";
        if (contextCase_ == 1) {
          ref = context_;
        }
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (contextCase_ == 1) {
            context_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string previous_intent = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPreviousIntentBytes() {
        java.lang.Object ref = "";
        if (contextCase_ == 1) {
          ref = context_;
        }
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          if (contextCase_ == 1) {
            context_ = b;
          }
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string previous_intent = 1;</code>
       */
      public Builder setPreviousIntent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  contextCase_ = 1;
        context_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string previous_intent = 1;</code>
       */
      public Builder clearPreviousIntent() {
        if (contextCase_ == 1) {
          contextCase_ = 0;
          context_ = null;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional string previous_intent = 1;</code>
       */
      public Builder setPreviousIntentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        contextCase_ = 1;
        context_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext, nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.Builder, nvidia.riva.nlp.RivaNlp.AnalyzeIntentContextOrBuilder> vectorsBuilder_;
      /**
       * <code>optional .nvidia.riva.nlp.AnalyzeIntentContext vectors = 2;</code>
       */
      public nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext getVectors() {
        if (vectorsBuilder_ == null) {
          if (contextCase_ == 2) {
            return (nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext) context_;
          }
          return nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.getDefaultInstance();
        } else {
          if (contextCase_ == 2) {
            return vectorsBuilder_.getMessage();
          }
          return nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.getDefaultInstance();
        }
      }
      /**
       * <code>optional .nvidia.riva.nlp.AnalyzeIntentContext vectors = 2;</code>
       */
      public Builder setVectors(nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext value) {
        if (vectorsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          context_ = value;
          onChanged();
        } else {
          vectorsBuilder_.setMessage(value);
        }
        contextCase_ = 2;
        return this;
      }
      /**
       * <code>optional .nvidia.riva.nlp.AnalyzeIntentContext vectors = 2;</code>
       */
      public Builder setVectors(
          nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.Builder builderForValue) {
        if (vectorsBuilder_ == null) {
          context_ = builderForValue.build();
          onChanged();
        } else {
          vectorsBuilder_.setMessage(builderForValue.build());
        }
        contextCase_ = 2;
        return this;
      }
      /**
       * <code>optional .nvidia.riva.nlp.AnalyzeIntentContext vectors = 2;</code>
       */
      public Builder mergeVectors(nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext value) {
        if (vectorsBuilder_ == null) {
          if (contextCase_ == 2 &&
              context_ != nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.getDefaultInstance()) {
            context_ = nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.newBuilder((nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext) context_)
                .mergeFrom(value).buildPartial();
          } else {
            context_ = value;
          }
          onChanged();
        } else {
          if (contextCase_ == 2) {
            vectorsBuilder_.mergeFrom(value);
          }
          vectorsBuilder_.setMessage(value);
        }
        contextCase_ = 2;
        return this;
      }
      /**
       * <code>optional .nvidia.riva.nlp.AnalyzeIntentContext vectors = 2;</code>
       */
      public Builder clearVectors() {
        if (vectorsBuilder_ == null) {
          if (contextCase_ == 2) {
            contextCase_ = 0;
            context_ = null;
            onChanged();
          }
        } else {
          if (contextCase_ == 2) {
            contextCase_ = 0;
            context_ = null;
          }
          vectorsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>optional .nvidia.riva.nlp.AnalyzeIntentContext vectors = 2;</code>
       */
      public nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.Builder getVectorsBuilder() {
        return getVectorsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .nvidia.riva.nlp.AnalyzeIntentContext vectors = 2;</code>
       */
      public nvidia.riva.nlp.RivaNlp.AnalyzeIntentContextOrBuilder getVectorsOrBuilder() {
        if ((contextCase_ == 2) && (vectorsBuilder_ != null)) {
          return vectorsBuilder_.getMessageOrBuilder();
        } else {
          if (contextCase_ == 2) {
            return (nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext) context_;
          }
          return nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.getDefaultInstance();
        }
      }
      /**
       * <code>optional .nvidia.riva.nlp.AnalyzeIntentContext vectors = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext, nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.Builder, nvidia.riva.nlp.RivaNlp.AnalyzeIntentContextOrBuilder> 
          getVectorsFieldBuilder() {
        if (vectorsBuilder_ == null) {
          if (!(contextCase_ == 2)) {
            context_ = nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.getDefaultInstance();
          }
          vectorsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext, nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext.Builder, nvidia.riva.nlp.RivaNlp.AnalyzeIntentContextOrBuilder>(
                  (nvidia.riva.nlp.RivaNlp.AnalyzeIntentContext) context_,
                  getParentForChildren(),
                  isClean());
          context_ = null;
        }
        contextCase_ = 2;
        onChanged();;
        return vectorsBuilder_;
      }

      private java.lang.Object domain_ = "";
      /**
       * <pre>
       * Optional domain field. Domain must be supported otherwise an error will be returned.
       * If left blank, a domain detector will be run first and then the query routed to the
       * appropriate intent classifier (if it exists)
       * </pre>
       *
       * <code>optional string domain = 3;</code>
       */
      public java.lang.String getDomain() {
        java.lang.Object ref = domain_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          domain_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Optional domain field. Domain must be supported otherwise an error will be returned.
       * If left blank, a domain detector will be run first and then the query routed to the
       * appropriate intent classifier (if it exists)
       * </pre>
       *
       * <code>optional string domain = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDomainBytes() {
        java.lang.Object ref = domain_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          domain_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Optional domain field. Domain must be supported otherwise an error will be returned.
       * If left blank, a domain detector will be run first and then the query routed to the
       * appropriate intent classifier (if it exists)
       * </pre>
       *
       * <code>optional string domain = 3;</code>
       */
      public Builder setDomain(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        domain_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional domain field. Domain must be supported otherwise an error will be returned.
       * If left blank, a domain detector will be run first and then the query routed to the
       * appropriate intent classifier (if it exists)
       * </pre>
       *
       * <code>optional string domain = 3;</code>
       */
      public Builder clearDomain() {
        
        domain_ = getDefaultInstance().getDomain();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional domain field. Domain must be supported otherwise an error will be returned.
       * If left blank, a domain detector will be run first and then the query routed to the
       * appropriate intent classifier (if it exists)
       * </pre>
       *
       * <code>optional string domain = 3;</code>
       */
      public Builder setDomainBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        domain_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lang_ = "";
      /**
       * <pre>
       * Optional language field. Assumed to be "en-US" if not specified.
       * </pre>
       *
       * <code>optional string lang = 4;</code>
       */
      public java.lang.String getLang() {
        java.lang.Object ref = lang_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lang_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Optional language field. Assumed to be "en-US" if not specified.
       * </pre>
       *
       * <code>optional string lang = 4;</code>
       */
      public com.google.protobuf.ByteString
          getLangBytes() {
        java.lang.Object ref = lang_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lang_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Optional language field. Assumed to be "en-US" if not specified.
       * </pre>
       *
       * <code>optional string lang = 4;</code>
       */
      public Builder setLang(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lang_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional language field. Assumed to be "en-US" if not specified.
       * </pre>
       *
       * <code>optional string lang = 4;</code>
       */
      public Builder clearLang() {
        
        lang_ = getDefaultInstance().getLang();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional language field. Assumed to be "en-US" if not specified.
       * </pre>
       *
       * <code>optional string lang = 4;</code>
       */
      public Builder setLangBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lang_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.AnalyzeIntentOptions)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.AnalyzeIntentOptions)
    private static final nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions();
    }

    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AnalyzeIntentOptions>
        PARSER = new com.google.protobuf.AbstractParser<AnalyzeIntentOptions>() {
      public AnalyzeIntentOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AnalyzeIntentOptions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AnalyzeIntentOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AnalyzeIntentOptions> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AnalyzeIntentRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.AnalyzeIntentRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The string to analyze for intent and slots
     * </pre>
     *
     * <code>optional string query = 1;</code>
     */
    java.lang.String getQuery();
    /**
     * <pre>
     * The string to analyze for intent and slots
     * </pre>
     *
     * <code>optional string query = 1;</code>
     */
    com.google.protobuf.ByteString
        getQueryBytes();

    /**
     * <pre>
     * Optional configuration for the request, including providing context from previous turns
     * and hardcoding a domain/language
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.AnalyzeIntentOptions options = 2;</code>
     */
    boolean hasOptions();
    /**
     * <pre>
     * Optional configuration for the request, including providing context from previous turns
     * and hardcoding a domain/language
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.AnalyzeIntentOptions options = 2;</code>
     */
    nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions getOptions();
    /**
     * <pre>
     * Optional configuration for the request, including providing context from previous turns
     * and hardcoding a domain/language
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.AnalyzeIntentOptions options = 2;</code>
     */
    nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptionsOrBuilder getOptionsOrBuilder();
  }
  /**
   * <pre>
   * AnalyzeIntentRequest is the input message for the AnalyzeIntent service
   * </pre>
   *
   * Protobuf type {@code nvidia.riva.nlp.AnalyzeIntentRequest}
   */
  public  static final class AnalyzeIntentRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.AnalyzeIntentRequest)
      AnalyzeIntentRequestOrBuilder {
    // Use AnalyzeIntentRequest.newBuilder() to construct.
    private AnalyzeIntentRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AnalyzeIntentRequest() {
      query_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AnalyzeIntentRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              query_ = s;
              break;
            }
            case 18: {
              nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions.Builder subBuilder = null;
              if (options_ != null) {
                subBuilder = options_.toBuilder();
              }
              options_ = input.readMessage(nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(options_);
                options_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest.class, nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest.Builder.class);
    }

    public static final int QUERY_FIELD_NUMBER = 1;
    private volatile java.lang.Object query_;
    /**
     * <pre>
     * The string to analyze for intent and slots
     * </pre>
     *
     * <code>optional string query = 1;</code>
     */
    public java.lang.String getQuery() {
      java.lang.Object ref = query_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        query_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The string to analyze for intent and slots
     * </pre>
     *
     * <code>optional string query = 1;</code>
     */
    public com.google.protobuf.ByteString
        getQueryBytes() {
      java.lang.Object ref = query_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        query_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OPTIONS_FIELD_NUMBER = 2;
    private nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions options_;
    /**
     * <pre>
     * Optional configuration for the request, including providing context from previous turns
     * and hardcoding a domain/language
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.AnalyzeIntentOptions options = 2;</code>
     */
    public boolean hasOptions() {
      return options_ != null;
    }
    /**
     * <pre>
     * Optional configuration for the request, including providing context from previous turns
     * and hardcoding a domain/language
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.AnalyzeIntentOptions options = 2;</code>
     */
    public nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions getOptions() {
      return options_ == null ? nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions.getDefaultInstance() : options_;
    }
    /**
     * <pre>
     * Optional configuration for the request, including providing context from previous turns
     * and hardcoding a domain/language
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.AnalyzeIntentOptions options = 2;</code>
     */
    public nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptionsOrBuilder getOptionsOrBuilder() {
      return getOptions();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getQueryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, query_);
      }
      if (options_ != null) {
        output.writeMessage(2, getOptions());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getQueryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, query_);
      }
      if (options_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOptions());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest other = (nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest) obj;

      boolean result = true;
      result = result && getQuery()
          .equals(other.getQuery());
      result = result && (hasOptions() == other.hasOptions());
      if (hasOptions()) {
        result = result && getOptions()
            .equals(other.getOptions());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + QUERY_FIELD_NUMBER;
      hash = (53 * hash) + getQuery().hashCode();
      if (hasOptions()) {
        hash = (37 * hash) + OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getOptions().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * AnalyzeIntentRequest is the input message for the AnalyzeIntent service
     * </pre>
     *
     * Protobuf type {@code nvidia.riva.nlp.AnalyzeIntentRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.AnalyzeIntentRequest)
        nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest.class, nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        query_ = "";

        if (optionsBuilder_ == null) {
          options_ = null;
        } else {
          options_ = null;
          optionsBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentRequest_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest build() {
        nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest buildPartial() {
        nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest result = new nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest(this);
        result.query_ = query_;
        if (optionsBuilder_ == null) {
          result.options_ = options_;
        } else {
          result.options_ = optionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest other) {
        if (other == nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest.getDefaultInstance()) return this;
        if (!other.getQuery().isEmpty()) {
          query_ = other.query_;
          onChanged();
        }
        if (other.hasOptions()) {
          mergeOptions(other.getOptions());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object query_ = "";
      /**
       * <pre>
       * The string to analyze for intent and slots
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public java.lang.String getQuery() {
        java.lang.Object ref = query_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          query_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The string to analyze for intent and slots
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public com.google.protobuf.ByteString
          getQueryBytes() {
        java.lang.Object ref = query_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          query_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The string to analyze for intent and slots
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public Builder setQuery(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        query_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The string to analyze for intent and slots
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public Builder clearQuery() {
        
        query_ = getDefaultInstance().getQuery();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The string to analyze for intent and slots
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public Builder setQueryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        query_ = value;
        onChanged();
        return this;
      }

      private nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions options_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions, nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions.Builder, nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptionsOrBuilder> optionsBuilder_;
      /**
       * <pre>
       * Optional configuration for the request, including providing context from previous turns
       * and hardcoding a domain/language
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.AnalyzeIntentOptions options = 2;</code>
       */
      public boolean hasOptions() {
        return optionsBuilder_ != null || options_ != null;
      }
      /**
       * <pre>
       * Optional configuration for the request, including providing context from previous turns
       * and hardcoding a domain/language
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.AnalyzeIntentOptions options = 2;</code>
       */
      public nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions getOptions() {
        if (optionsBuilder_ == null) {
          return options_ == null ? nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions.getDefaultInstance() : options_;
        } else {
          return optionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Optional configuration for the request, including providing context from previous turns
       * and hardcoding a domain/language
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.AnalyzeIntentOptions options = 2;</code>
       */
      public Builder setOptions(nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions value) {
        if (optionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          options_ = value;
          onChanged();
        } else {
          optionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Optional configuration for the request, including providing context from previous turns
       * and hardcoding a domain/language
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.AnalyzeIntentOptions options = 2;</code>
       */
      public Builder setOptions(
          nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions.Builder builderForValue) {
        if (optionsBuilder_ == null) {
          options_ = builderForValue.build();
          onChanged();
        } else {
          optionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Optional configuration for the request, including providing context from previous turns
       * and hardcoding a domain/language
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.AnalyzeIntentOptions options = 2;</code>
       */
      public Builder mergeOptions(nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions value) {
        if (optionsBuilder_ == null) {
          if (options_ != null) {
            options_ =
              nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions.newBuilder(options_).mergeFrom(value).buildPartial();
          } else {
            options_ = value;
          }
          onChanged();
        } else {
          optionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Optional configuration for the request, including providing context from previous turns
       * and hardcoding a domain/language
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.AnalyzeIntentOptions options = 2;</code>
       */
      public Builder clearOptions() {
        if (optionsBuilder_ == null) {
          options_ = null;
          onChanged();
        } else {
          options_ = null;
          optionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Optional configuration for the request, including providing context from previous turns
       * and hardcoding a domain/language
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.AnalyzeIntentOptions options = 2;</code>
       */
      public nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions.Builder getOptionsBuilder() {
        
        onChanged();
        return getOptionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Optional configuration for the request, including providing context from previous turns
       * and hardcoding a domain/language
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.AnalyzeIntentOptions options = 2;</code>
       */
      public nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptionsOrBuilder getOptionsOrBuilder() {
        if (optionsBuilder_ != null) {
          return optionsBuilder_.getMessageOrBuilder();
        } else {
          return options_ == null ?
              nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions.getDefaultInstance() : options_;
        }
      }
      /**
       * <pre>
       * Optional configuration for the request, including providing context from previous turns
       * and hardcoding a domain/language
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.AnalyzeIntentOptions options = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions, nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions.Builder, nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptionsOrBuilder> 
          getOptionsFieldBuilder() {
        if (optionsBuilder_ == null) {
          optionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions, nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptions.Builder, nvidia.riva.nlp.RivaNlp.AnalyzeIntentOptionsOrBuilder>(
                  getOptions(),
                  getParentForChildren(),
                  isClean());
          options_ = null;
        }
        return optionsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.AnalyzeIntentRequest)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.AnalyzeIntentRequest)
    private static final nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest();
    }

    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AnalyzeIntentRequest>
        PARSER = new com.google.protobuf.AbstractParser<AnalyzeIntentRequest>() {
      public AnalyzeIntentRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AnalyzeIntentRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AnalyzeIntentRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AnalyzeIntentRequest> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.AnalyzeIntentRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AnalyzeIntentResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.AnalyzeIntentResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Intent classification result, including the label and score
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.Classification intent = 1;</code>
     */
    boolean hasIntent();
    /**
     * <pre>
     * Intent classification result, including the label and score
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.Classification intent = 1;</code>
     */
    nvidia.riva.nlp.RivaNlp.Classification getIntent();
    /**
     * <pre>
     * Intent classification result, including the label and score
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.Classification intent = 1;</code>
     */
    nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder getIntentOrBuilder();

    /**
     * <pre>
     * List of tokens explicitly marked as filling a slot relevant to the intent, where the
     * tokens may not exactly match the input (based on the recombined values after tokenization)
     * </pre>
     *
     * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
     */
    java.util.List<nvidia.riva.nlp.RivaNlp.TokenClassValue> 
        getSlotsList();
    /**
     * <pre>
     * List of tokens explicitly marked as filling a slot relevant to the intent, where the
     * tokens may not exactly match the input (based on the recombined values after tokenization)
     * </pre>
     *
     * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
     */
    nvidia.riva.nlp.RivaNlp.TokenClassValue getSlots(int index);
    /**
     * <pre>
     * List of tokens explicitly marked as filling a slot relevant to the intent, where the
     * tokens may not exactly match the input (based on the recombined values after tokenization)
     * </pre>
     *
     * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
     */
    int getSlotsCount();
    /**
     * <pre>
     * List of tokens explicitly marked as filling a slot relevant to the intent, where the
     * tokens may not exactly match the input (based on the recombined values after tokenization)
     * </pre>
     *
     * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
     */
    java.util.List<? extends nvidia.riva.nlp.RivaNlp.TokenClassValueOrBuilder> 
        getSlotsOrBuilderList();
    /**
     * <pre>
     * List of tokens explicitly marked as filling a slot relevant to the intent, where the
     * tokens may not exactly match the input (based on the recombined values after tokenization)
     * </pre>
     *
     * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
     */
    nvidia.riva.nlp.RivaNlp.TokenClassValueOrBuilder getSlotsOrBuilder(
        int index);

    /**
     * <pre>
     * Returns the inferred domain for the query if not hardcoded in the request. In the case where
     * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
     * request. In the case where no domain matches the query, intent and slots will be unset.
     * DEPRECATED, use Classification domain field.
     * </pre>
     *
     * <code>optional string domain_str = 3;</code>
     */
    java.lang.String getDomainStr();
    /**
     * <pre>
     * Returns the inferred domain for the query if not hardcoded in the request. In the case where
     * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
     * request. In the case where no domain matches the query, intent and slots will be unset.
     * DEPRECATED, use Classification domain field.
     * </pre>
     *
     * <code>optional string domain_str = 3;</code>
     */
    com.google.protobuf.ByteString
        getDomainStrBytes();

    /**
     * <pre>
     * Returns the inferred domain for the query if not hardcoded in the request. In the case where
     * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
     * request. In the case where no domain matches the query, intent and slots will be unset.
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.Classification domain = 4;</code>
     */
    boolean hasDomain();
    /**
     * <pre>
     * Returns the inferred domain for the query if not hardcoded in the request. In the case where
     * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
     * request. In the case where no domain matches the query, intent and slots will be unset.
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.Classification domain = 4;</code>
     */
    nvidia.riva.nlp.RivaNlp.Classification getDomain();
    /**
     * <pre>
     * Returns the inferred domain for the query if not hardcoded in the request. In the case where
     * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
     * request. In the case where no domain matches the query, intent and slots will be unset.
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.Classification domain = 4;</code>
     */
    nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder getDomainOrBuilder();
  }
  /**
   * <pre>
   * AnalyzeIntentResponse is returned by the AnalyzeIntent service, and includes information
   * related to the query's intent, (optionally) slot data, and its domain.
   * </pre>
   *
   * Protobuf type {@code nvidia.riva.nlp.AnalyzeIntentResponse}
   */
  public  static final class AnalyzeIntentResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.AnalyzeIntentResponse)
      AnalyzeIntentResponseOrBuilder {
    // Use AnalyzeIntentResponse.newBuilder() to construct.
    private AnalyzeIntentResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AnalyzeIntentResponse() {
      slots_ = java.util.Collections.emptyList();
      domainStr_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AnalyzeIntentResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              nvidia.riva.nlp.RivaNlp.Classification.Builder subBuilder = null;
              if (intent_ != null) {
                subBuilder = intent_.toBuilder();
              }
              intent_ = input.readMessage(nvidia.riva.nlp.RivaNlp.Classification.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(intent_);
                intent_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                slots_ = new java.util.ArrayList<nvidia.riva.nlp.RivaNlp.TokenClassValue>();
                mutable_bitField0_ |= 0x00000002;
              }
              slots_.add(
                  input.readMessage(nvidia.riva.nlp.RivaNlp.TokenClassValue.parser(), extensionRegistry));
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              domainStr_ = s;
              break;
            }
            case 34: {
              nvidia.riva.nlp.RivaNlp.Classification.Builder subBuilder = null;
              if (domain_ != null) {
                subBuilder = domain_.toBuilder();
              }
              domain_ = input.readMessage(nvidia.riva.nlp.RivaNlp.Classification.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(domain_);
                domain_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          slots_ = java.util.Collections.unmodifiableList(slots_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse.class, nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse.Builder.class);
    }

    private int bitField0_;
    public static final int INTENT_FIELD_NUMBER = 1;
    private nvidia.riva.nlp.RivaNlp.Classification intent_;
    /**
     * <pre>
     * Intent classification result, including the label and score
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.Classification intent = 1;</code>
     */
    public boolean hasIntent() {
      return intent_ != null;
    }
    /**
     * <pre>
     * Intent classification result, including the label and score
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.Classification intent = 1;</code>
     */
    public nvidia.riva.nlp.RivaNlp.Classification getIntent() {
      return intent_ == null ? nvidia.riva.nlp.RivaNlp.Classification.getDefaultInstance() : intent_;
    }
    /**
     * <pre>
     * Intent classification result, including the label and score
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.Classification intent = 1;</code>
     */
    public nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder getIntentOrBuilder() {
      return getIntent();
    }

    public static final int SLOTS_FIELD_NUMBER = 2;
    private java.util.List<nvidia.riva.nlp.RivaNlp.TokenClassValue> slots_;
    /**
     * <pre>
     * List of tokens explicitly marked as filling a slot relevant to the intent, where the
     * tokens may not exactly match the input (based on the recombined values after tokenization)
     * </pre>
     *
     * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
     */
    public java.util.List<nvidia.riva.nlp.RivaNlp.TokenClassValue> getSlotsList() {
      return slots_;
    }
    /**
     * <pre>
     * List of tokens explicitly marked as filling a slot relevant to the intent, where the
     * tokens may not exactly match the input (based on the recombined values after tokenization)
     * </pre>
     *
     * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
     */
    public java.util.List<? extends nvidia.riva.nlp.RivaNlp.TokenClassValueOrBuilder> 
        getSlotsOrBuilderList() {
      return slots_;
    }
    /**
     * <pre>
     * List of tokens explicitly marked as filling a slot relevant to the intent, where the
     * tokens may not exactly match the input (based on the recombined values after tokenization)
     * </pre>
     *
     * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
     */
    public int getSlotsCount() {
      return slots_.size();
    }
    /**
     * <pre>
     * List of tokens explicitly marked as filling a slot relevant to the intent, where the
     * tokens may not exactly match the input (based on the recombined values after tokenization)
     * </pre>
     *
     * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
     */
    public nvidia.riva.nlp.RivaNlp.TokenClassValue getSlots(int index) {
      return slots_.get(index);
    }
    /**
     * <pre>
     * List of tokens explicitly marked as filling a slot relevant to the intent, where the
     * tokens may not exactly match the input (based on the recombined values after tokenization)
     * </pre>
     *
     * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
     */
    public nvidia.riva.nlp.RivaNlp.TokenClassValueOrBuilder getSlotsOrBuilder(
        int index) {
      return slots_.get(index);
    }

    public static final int DOMAIN_STR_FIELD_NUMBER = 3;
    private volatile java.lang.Object domainStr_;
    /**
     * <pre>
     * Returns the inferred domain for the query if not hardcoded in the request. In the case where
     * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
     * request. In the case where no domain matches the query, intent and slots will be unset.
     * DEPRECATED, use Classification domain field.
     * </pre>
     *
     * <code>optional string domain_str = 3;</code>
     */
    public java.lang.String getDomainStr() {
      java.lang.Object ref = domainStr_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        domainStr_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Returns the inferred domain for the query if not hardcoded in the request. In the case where
     * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
     * request. In the case where no domain matches the query, intent and slots will be unset.
     * DEPRECATED, use Classification domain field.
     * </pre>
     *
     * <code>optional string domain_str = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDomainStrBytes() {
      java.lang.Object ref = domainStr_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        domainStr_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DOMAIN_FIELD_NUMBER = 4;
    private nvidia.riva.nlp.RivaNlp.Classification domain_;
    /**
     * <pre>
     * Returns the inferred domain for the query if not hardcoded in the request. In the case where
     * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
     * request. In the case where no domain matches the query, intent and slots will be unset.
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.Classification domain = 4;</code>
     */
    public boolean hasDomain() {
      return domain_ != null;
    }
    /**
     * <pre>
     * Returns the inferred domain for the query if not hardcoded in the request. In the case where
     * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
     * request. In the case where no domain matches the query, intent and slots will be unset.
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.Classification domain = 4;</code>
     */
    public nvidia.riva.nlp.RivaNlp.Classification getDomain() {
      return domain_ == null ? nvidia.riva.nlp.RivaNlp.Classification.getDefaultInstance() : domain_;
    }
    /**
     * <pre>
     * Returns the inferred domain for the query if not hardcoded in the request. In the case where
     * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
     * request. In the case where no domain matches the query, intent and slots will be unset.
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.Classification domain = 4;</code>
     */
    public nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder getDomainOrBuilder() {
      return getDomain();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (intent_ != null) {
        output.writeMessage(1, getIntent());
      }
      for (int i = 0; i < slots_.size(); i++) {
        output.writeMessage(2, slots_.get(i));
      }
      if (!getDomainStrBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, domainStr_);
      }
      if (domain_ != null) {
        output.writeMessage(4, getDomain());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (intent_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getIntent());
      }
      for (int i = 0; i < slots_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, slots_.get(i));
      }
      if (!getDomainStrBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, domainStr_);
      }
      if (domain_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getDomain());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse other = (nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse) obj;

      boolean result = true;
      result = result && (hasIntent() == other.hasIntent());
      if (hasIntent()) {
        result = result && getIntent()
            .equals(other.getIntent());
      }
      result = result && getSlotsList()
          .equals(other.getSlotsList());
      result = result && getDomainStr()
          .equals(other.getDomainStr());
      result = result && (hasDomain() == other.hasDomain());
      if (hasDomain()) {
        result = result && getDomain()
            .equals(other.getDomain());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (hasIntent()) {
        hash = (37 * hash) + INTENT_FIELD_NUMBER;
        hash = (53 * hash) + getIntent().hashCode();
      }
      if (getSlotsCount() > 0) {
        hash = (37 * hash) + SLOTS_FIELD_NUMBER;
        hash = (53 * hash) + getSlotsList().hashCode();
      }
      hash = (37 * hash) + DOMAIN_STR_FIELD_NUMBER;
      hash = (53 * hash) + getDomainStr().hashCode();
      if (hasDomain()) {
        hash = (37 * hash) + DOMAIN_FIELD_NUMBER;
        hash = (53 * hash) + getDomain().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * AnalyzeIntentResponse is returned by the AnalyzeIntent service, and includes information
     * related to the query's intent, (optionally) slot data, and its domain.
     * </pre>
     *
     * Protobuf type {@code nvidia.riva.nlp.AnalyzeIntentResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.AnalyzeIntentResponse)
        nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse.class, nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSlotsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (intentBuilder_ == null) {
          intent_ = null;
        } else {
          intent_ = null;
          intentBuilder_ = null;
        }
        if (slotsBuilder_ == null) {
          slots_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          slotsBuilder_.clear();
        }
        domainStr_ = "";

        if (domainBuilder_ == null) {
          domain_ = null;
        } else {
          domain_ = null;
          domainBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeIntentResponse_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse build() {
        nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse buildPartial() {
        nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse result = new nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (intentBuilder_ == null) {
          result.intent_ = intent_;
        } else {
          result.intent_ = intentBuilder_.build();
        }
        if (slotsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            slots_ = java.util.Collections.unmodifiableList(slots_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.slots_ = slots_;
        } else {
          result.slots_ = slotsBuilder_.build();
        }
        result.domainStr_ = domainStr_;
        if (domainBuilder_ == null) {
          result.domain_ = domain_;
        } else {
          result.domain_ = domainBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse other) {
        if (other == nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse.getDefaultInstance()) return this;
        if (other.hasIntent()) {
          mergeIntent(other.getIntent());
        }
        if (slotsBuilder_ == null) {
          if (!other.slots_.isEmpty()) {
            if (slots_.isEmpty()) {
              slots_ = other.slots_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSlotsIsMutable();
              slots_.addAll(other.slots_);
            }
            onChanged();
          }
        } else {
          if (!other.slots_.isEmpty()) {
            if (slotsBuilder_.isEmpty()) {
              slotsBuilder_.dispose();
              slotsBuilder_ = null;
              slots_ = other.slots_;
              bitField0_ = (bitField0_ & ~0x00000002);
              slotsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSlotsFieldBuilder() : null;
            } else {
              slotsBuilder_.addAllMessages(other.slots_);
            }
          }
        }
        if (!other.getDomainStr().isEmpty()) {
          domainStr_ = other.domainStr_;
          onChanged();
        }
        if (other.hasDomain()) {
          mergeDomain(other.getDomain());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private nvidia.riva.nlp.RivaNlp.Classification intent_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.Classification, nvidia.riva.nlp.RivaNlp.Classification.Builder, nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder> intentBuilder_;
      /**
       * <pre>
       * Intent classification result, including the label and score
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.Classification intent = 1;</code>
       */
      public boolean hasIntent() {
        return intentBuilder_ != null || intent_ != null;
      }
      /**
       * <pre>
       * Intent classification result, including the label and score
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.Classification intent = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.Classification getIntent() {
        if (intentBuilder_ == null) {
          return intent_ == null ? nvidia.riva.nlp.RivaNlp.Classification.getDefaultInstance() : intent_;
        } else {
          return intentBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Intent classification result, including the label and score
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.Classification intent = 1;</code>
       */
      public Builder setIntent(nvidia.riva.nlp.RivaNlp.Classification value) {
        if (intentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          intent_ = value;
          onChanged();
        } else {
          intentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Intent classification result, including the label and score
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.Classification intent = 1;</code>
       */
      public Builder setIntent(
          nvidia.riva.nlp.RivaNlp.Classification.Builder builderForValue) {
        if (intentBuilder_ == null) {
          intent_ = builderForValue.build();
          onChanged();
        } else {
          intentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Intent classification result, including the label and score
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.Classification intent = 1;</code>
       */
      public Builder mergeIntent(nvidia.riva.nlp.RivaNlp.Classification value) {
        if (intentBuilder_ == null) {
          if (intent_ != null) {
            intent_ =
              nvidia.riva.nlp.RivaNlp.Classification.newBuilder(intent_).mergeFrom(value).buildPartial();
          } else {
            intent_ = value;
          }
          onChanged();
        } else {
          intentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Intent classification result, including the label and score
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.Classification intent = 1;</code>
       */
      public Builder clearIntent() {
        if (intentBuilder_ == null) {
          intent_ = null;
          onChanged();
        } else {
          intent_ = null;
          intentBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Intent classification result, including the label and score
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.Classification intent = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.Classification.Builder getIntentBuilder() {
        
        onChanged();
        return getIntentFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Intent classification result, including the label and score
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.Classification intent = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder getIntentOrBuilder() {
        if (intentBuilder_ != null) {
          return intentBuilder_.getMessageOrBuilder();
        } else {
          return intent_ == null ?
              nvidia.riva.nlp.RivaNlp.Classification.getDefaultInstance() : intent_;
        }
      }
      /**
       * <pre>
       * Intent classification result, including the label and score
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.Classification intent = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.Classification, nvidia.riva.nlp.RivaNlp.Classification.Builder, nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder> 
          getIntentFieldBuilder() {
        if (intentBuilder_ == null) {
          intentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nvidia.riva.nlp.RivaNlp.Classification, nvidia.riva.nlp.RivaNlp.Classification.Builder, nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder>(
                  getIntent(),
                  getParentForChildren(),
                  isClean());
          intent_ = null;
        }
        return intentBuilder_;
      }

      private java.util.List<nvidia.riva.nlp.RivaNlp.TokenClassValue> slots_ =
        java.util.Collections.emptyList();
      private void ensureSlotsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          slots_ = new java.util.ArrayList<nvidia.riva.nlp.RivaNlp.TokenClassValue>(slots_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.TokenClassValue, nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder, nvidia.riva.nlp.RivaNlp.TokenClassValueOrBuilder> slotsBuilder_;

      /**
       * <pre>
       * List of tokens explicitly marked as filling a slot relevant to the intent, where the
       * tokens may not exactly match the input (based on the recombined values after tokenization)
       * </pre>
       *
       * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
       */
      public java.util.List<nvidia.riva.nlp.RivaNlp.TokenClassValue> getSlotsList() {
        if (slotsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(slots_);
        } else {
          return slotsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of tokens explicitly marked as filling a slot relevant to the intent, where the
       * tokens may not exactly match the input (based on the recombined values after tokenization)
       * </pre>
       *
       * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
       */
      public int getSlotsCount() {
        if (slotsBuilder_ == null) {
          return slots_.size();
        } else {
          return slotsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of tokens explicitly marked as filling a slot relevant to the intent, where the
       * tokens may not exactly match the input (based on the recombined values after tokenization)
       * </pre>
       *
       * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
       */
      public nvidia.riva.nlp.RivaNlp.TokenClassValue getSlots(int index) {
        if (slotsBuilder_ == null) {
          return slots_.get(index);
        } else {
          return slotsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of tokens explicitly marked as filling a slot relevant to the intent, where the
       * tokens may not exactly match the input (based on the recombined values after tokenization)
       * </pre>
       *
       * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
       */
      public Builder setSlots(
          int index, nvidia.riva.nlp.RivaNlp.TokenClassValue value) {
        if (slotsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSlotsIsMutable();
          slots_.set(index, value);
          onChanged();
        } else {
          slotsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of tokens explicitly marked as filling a slot relevant to the intent, where the
       * tokens may not exactly match the input (based on the recombined values after tokenization)
       * </pre>
       *
       * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
       */
      public Builder setSlots(
          int index, nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder builderForValue) {
        if (slotsBuilder_ == null) {
          ensureSlotsIsMutable();
          slots_.set(index, builderForValue.build());
          onChanged();
        } else {
          slotsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of tokens explicitly marked as filling a slot relevant to the intent, where the
       * tokens may not exactly match the input (based on the recombined values after tokenization)
       * </pre>
       *
       * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
       */
      public Builder addSlots(nvidia.riva.nlp.RivaNlp.TokenClassValue value) {
        if (slotsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSlotsIsMutable();
          slots_.add(value);
          onChanged();
        } else {
          slotsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of tokens explicitly marked as filling a slot relevant to the intent, where the
       * tokens may not exactly match the input (based on the recombined values after tokenization)
       * </pre>
       *
       * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
       */
      public Builder addSlots(
          int index, nvidia.riva.nlp.RivaNlp.TokenClassValue value) {
        if (slotsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSlotsIsMutable();
          slots_.add(index, value);
          onChanged();
        } else {
          slotsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of tokens explicitly marked as filling a slot relevant to the intent, where the
       * tokens may not exactly match the input (based on the recombined values after tokenization)
       * </pre>
       *
       * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
       */
      public Builder addSlots(
          nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder builderForValue) {
        if (slotsBuilder_ == null) {
          ensureSlotsIsMutable();
          slots_.add(builderForValue.build());
          onChanged();
        } else {
          slotsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of tokens explicitly marked as filling a slot relevant to the intent, where the
       * tokens may not exactly match the input (based on the recombined values after tokenization)
       * </pre>
       *
       * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
       */
      public Builder addSlots(
          int index, nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder builderForValue) {
        if (slotsBuilder_ == null) {
          ensureSlotsIsMutable();
          slots_.add(index, builderForValue.build());
          onChanged();
        } else {
          slotsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of tokens explicitly marked as filling a slot relevant to the intent, where the
       * tokens may not exactly match the input (based on the recombined values after tokenization)
       * </pre>
       *
       * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
       */
      public Builder addAllSlots(
          java.lang.Iterable<? extends nvidia.riva.nlp.RivaNlp.TokenClassValue> values) {
        if (slotsBuilder_ == null) {
          ensureSlotsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, slots_);
          onChanged();
        } else {
          slotsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of tokens explicitly marked as filling a slot relevant to the intent, where the
       * tokens may not exactly match the input (based on the recombined values after tokenization)
       * </pre>
       *
       * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
       */
      public Builder clearSlots() {
        if (slotsBuilder_ == null) {
          slots_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          slotsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of tokens explicitly marked as filling a slot relevant to the intent, where the
       * tokens may not exactly match the input (based on the recombined values after tokenization)
       * </pre>
       *
       * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
       */
      public Builder removeSlots(int index) {
        if (slotsBuilder_ == null) {
          ensureSlotsIsMutable();
          slots_.remove(index);
          onChanged();
        } else {
          slotsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of tokens explicitly marked as filling a slot relevant to the intent, where the
       * tokens may not exactly match the input (based on the recombined values after tokenization)
       * </pre>
       *
       * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
       */
      public nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder getSlotsBuilder(
          int index) {
        return getSlotsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of tokens explicitly marked as filling a slot relevant to the intent, where the
       * tokens may not exactly match the input (based on the recombined values after tokenization)
       * </pre>
       *
       * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
       */
      public nvidia.riva.nlp.RivaNlp.TokenClassValueOrBuilder getSlotsOrBuilder(
          int index) {
        if (slotsBuilder_ == null) {
          return slots_.get(index);  } else {
          return slotsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of tokens explicitly marked as filling a slot relevant to the intent, where the
       * tokens may not exactly match the input (based on the recombined values after tokenization)
       * </pre>
       *
       * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
       */
      public java.util.List<? extends nvidia.riva.nlp.RivaNlp.TokenClassValueOrBuilder> 
           getSlotsOrBuilderList() {
        if (slotsBuilder_ != null) {
          return slotsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(slots_);
        }
      }
      /**
       * <pre>
       * List of tokens explicitly marked as filling a slot relevant to the intent, where the
       * tokens may not exactly match the input (based on the recombined values after tokenization)
       * </pre>
       *
       * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
       */
      public nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder addSlotsBuilder() {
        return getSlotsFieldBuilder().addBuilder(
            nvidia.riva.nlp.RivaNlp.TokenClassValue.getDefaultInstance());
      }
      /**
       * <pre>
       * List of tokens explicitly marked as filling a slot relevant to the intent, where the
       * tokens may not exactly match the input (based on the recombined values after tokenization)
       * </pre>
       *
       * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
       */
      public nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder addSlotsBuilder(
          int index) {
        return getSlotsFieldBuilder().addBuilder(
            index, nvidia.riva.nlp.RivaNlp.TokenClassValue.getDefaultInstance());
      }
      /**
       * <pre>
       * List of tokens explicitly marked as filling a slot relevant to the intent, where the
       * tokens may not exactly match the input (based on the recombined values after tokenization)
       * </pre>
       *
       * <code>repeated .nvidia.riva.nlp.TokenClassValue slots = 2;</code>
       */
      public java.util.List<nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder> 
           getSlotsBuilderList() {
        return getSlotsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.TokenClassValue, nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder, nvidia.riva.nlp.RivaNlp.TokenClassValueOrBuilder> 
          getSlotsFieldBuilder() {
        if (slotsBuilder_ == null) {
          slotsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              nvidia.riva.nlp.RivaNlp.TokenClassValue, nvidia.riva.nlp.RivaNlp.TokenClassValue.Builder, nvidia.riva.nlp.RivaNlp.TokenClassValueOrBuilder>(
                  slots_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          slots_ = null;
        }
        return slotsBuilder_;
      }

      private java.lang.Object domainStr_ = "";
      /**
       * <pre>
       * Returns the inferred domain for the query if not hardcoded in the request. In the case where
       * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
       * request. In the case where no domain matches the query, intent and slots will be unset.
       * DEPRECATED, use Classification domain field.
       * </pre>
       *
       * <code>optional string domain_str = 3;</code>
       */
      public java.lang.String getDomainStr() {
        java.lang.Object ref = domainStr_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          domainStr_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Returns the inferred domain for the query if not hardcoded in the request. In the case where
       * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
       * request. In the case where no domain matches the query, intent and slots will be unset.
       * DEPRECATED, use Classification domain field.
       * </pre>
       *
       * <code>optional string domain_str = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDomainStrBytes() {
        java.lang.Object ref = domainStr_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          domainStr_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Returns the inferred domain for the query if not hardcoded in the request. In the case where
       * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
       * request. In the case where no domain matches the query, intent and slots will be unset.
       * DEPRECATED, use Classification domain field.
       * </pre>
       *
       * <code>optional string domain_str = 3;</code>
       */
      public Builder setDomainStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        domainStr_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Returns the inferred domain for the query if not hardcoded in the request. In the case where
       * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
       * request. In the case where no domain matches the query, intent and slots will be unset.
       * DEPRECATED, use Classification domain field.
       * </pre>
       *
       * <code>optional string domain_str = 3;</code>
       */
      public Builder clearDomainStr() {
        
        domainStr_ = getDefaultInstance().getDomainStr();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Returns the inferred domain for the query if not hardcoded in the request. In the case where
       * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
       * request. In the case where no domain matches the query, intent and slots will be unset.
       * DEPRECATED, use Classification domain field.
       * </pre>
       *
       * <code>optional string domain_str = 3;</code>
       */
      public Builder setDomainStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        domainStr_ = value;
        onChanged();
        return this;
      }

      private nvidia.riva.nlp.RivaNlp.Classification domain_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.Classification, nvidia.riva.nlp.RivaNlp.Classification.Builder, nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder> domainBuilder_;
      /**
       * <pre>
       * Returns the inferred domain for the query if not hardcoded in the request. In the case where
       * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
       * request. In the case where no domain matches the query, intent and slots will be unset.
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.Classification domain = 4;</code>
       */
      public boolean hasDomain() {
        return domainBuilder_ != null || domain_ != null;
      }
      /**
       * <pre>
       * Returns the inferred domain for the query if not hardcoded in the request. In the case where
       * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
       * request. In the case where no domain matches the query, intent and slots will be unset.
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.Classification domain = 4;</code>
       */
      public nvidia.riva.nlp.RivaNlp.Classification getDomain() {
        if (domainBuilder_ == null) {
          return domain_ == null ? nvidia.riva.nlp.RivaNlp.Classification.getDefaultInstance() : domain_;
        } else {
          return domainBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Returns the inferred domain for the query if not hardcoded in the request. In the case where
       * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
       * request. In the case where no domain matches the query, intent and slots will be unset.
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.Classification domain = 4;</code>
       */
      public Builder setDomain(nvidia.riva.nlp.RivaNlp.Classification value) {
        if (domainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          domain_ = value;
          onChanged();
        } else {
          domainBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Returns the inferred domain for the query if not hardcoded in the request. In the case where
       * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
       * request. In the case where no domain matches the query, intent and slots will be unset.
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.Classification domain = 4;</code>
       */
      public Builder setDomain(
          nvidia.riva.nlp.RivaNlp.Classification.Builder builderForValue) {
        if (domainBuilder_ == null) {
          domain_ = builderForValue.build();
          onChanged();
        } else {
          domainBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Returns the inferred domain for the query if not hardcoded in the request. In the case where
       * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
       * request. In the case where no domain matches the query, intent and slots will be unset.
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.Classification domain = 4;</code>
       */
      public Builder mergeDomain(nvidia.riva.nlp.RivaNlp.Classification value) {
        if (domainBuilder_ == null) {
          if (domain_ != null) {
            domain_ =
              nvidia.riva.nlp.RivaNlp.Classification.newBuilder(domain_).mergeFrom(value).buildPartial();
          } else {
            domain_ = value;
          }
          onChanged();
        } else {
          domainBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Returns the inferred domain for the query if not hardcoded in the request. In the case where
       * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
       * request. In the case where no domain matches the query, intent and slots will be unset.
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.Classification domain = 4;</code>
       */
      public Builder clearDomain() {
        if (domainBuilder_ == null) {
          domain_ = null;
          onChanged();
        } else {
          domain_ = null;
          domainBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Returns the inferred domain for the query if not hardcoded in the request. In the case where
       * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
       * request. In the case where no domain matches the query, intent and slots will be unset.
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.Classification domain = 4;</code>
       */
      public nvidia.riva.nlp.RivaNlp.Classification.Builder getDomainBuilder() {
        
        onChanged();
        return getDomainFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Returns the inferred domain for the query if not hardcoded in the request. In the case where
       * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
       * request. In the case where no domain matches the query, intent and slots will be unset.
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.Classification domain = 4;</code>
       */
      public nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder getDomainOrBuilder() {
        if (domainBuilder_ != null) {
          return domainBuilder_.getMessageOrBuilder();
        } else {
          return domain_ == null ?
              nvidia.riva.nlp.RivaNlp.Classification.getDefaultInstance() : domain_;
        }
      }
      /**
       * <pre>
       * Returns the inferred domain for the query if not hardcoded in the request. In the case where
       * the domain was hardcoded in AnalyzeIntentRequest, the returned domain is an exact match to the
       * request. In the case where no domain matches the query, intent and slots will be unset.
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.Classification domain = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.Classification, nvidia.riva.nlp.RivaNlp.Classification.Builder, nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder> 
          getDomainFieldBuilder() {
        if (domainBuilder_ == null) {
          domainBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nvidia.riva.nlp.RivaNlp.Classification, nvidia.riva.nlp.RivaNlp.Classification.Builder, nvidia.riva.nlp.RivaNlp.ClassificationOrBuilder>(
                  getDomain(),
                  getParentForChildren(),
                  isClean());
          domain_ = null;
        }
        return domainBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.AnalyzeIntentResponse)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.AnalyzeIntentResponse)
    private static final nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse();
    }

    public static nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AnalyzeIntentResponse>
        PARSER = new com.google.protobuf.AbstractParser<AnalyzeIntentResponse>() {
      public AnalyzeIntentResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AnalyzeIntentResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AnalyzeIntentResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AnalyzeIntentResponse> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.AnalyzeIntentResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AnalyzeEntitiesOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.AnalyzeEntitiesOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Optional language field. Assumed to be "en-US" if not specified.
     * </pre>
     *
     * <code>optional string lang = 4;</code>
     */
    java.lang.String getLang();
    /**
     * <pre>
     * Optional language field. Assumed to be "en-US" if not specified.
     * </pre>
     *
     * <code>optional string lang = 4;</code>
     */
    com.google.protobuf.ByteString
        getLangBytes();
  }
  /**
   * <pre>
   * AnalyzeEntitiesOptions is an optional configuration message to be sent as part of
   * an AnalyzeEntitiesRequest with query metadata
   * </pre>
   *
   * Protobuf type {@code nvidia.riva.nlp.AnalyzeEntitiesOptions}
   */
  public  static final class AnalyzeEntitiesOptions extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.AnalyzeEntitiesOptions)
      AnalyzeEntitiesOptionsOrBuilder {
    // Use AnalyzeEntitiesOptions.newBuilder() to construct.
    private AnalyzeEntitiesOptions(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AnalyzeEntitiesOptions() {
      lang_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AnalyzeEntitiesOptions(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              lang_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeEntitiesOptions_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeEntitiesOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions.class, nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions.Builder.class);
    }

    public static final int LANG_FIELD_NUMBER = 4;
    private volatile java.lang.Object lang_;
    /**
     * <pre>
     * Optional language field. Assumed to be "en-US" if not specified.
     * </pre>
     *
     * <code>optional string lang = 4;</code>
     */
    public java.lang.String getLang() {
      java.lang.Object ref = lang_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        lang_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Optional language field. Assumed to be "en-US" if not specified.
     * </pre>
     *
     * <code>optional string lang = 4;</code>
     */
    public com.google.protobuf.ByteString
        getLangBytes() {
      java.lang.Object ref = lang_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lang_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getLangBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, lang_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getLangBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, lang_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions other = (nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions) obj;

      boolean result = true;
      result = result && getLang()
          .equals(other.getLang());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + LANG_FIELD_NUMBER;
      hash = (53 * hash) + getLang().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * AnalyzeEntitiesOptions is an optional configuration message to be sent as part of
     * an AnalyzeEntitiesRequest with query metadata
     * </pre>
     *
     * Protobuf type {@code nvidia.riva.nlp.AnalyzeEntitiesOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.AnalyzeEntitiesOptions)
        nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeEntitiesOptions_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeEntitiesOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions.class, nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        lang_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeEntitiesOptions_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions build() {
        nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions buildPartial() {
        nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions result = new nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions(this);
        result.lang_ = lang_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions other) {
        if (other == nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions.getDefaultInstance()) return this;
        if (!other.getLang().isEmpty()) {
          lang_ = other.lang_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object lang_ = "";
      /**
       * <pre>
       * Optional language field. Assumed to be "en-US" if not specified.
       * </pre>
       *
       * <code>optional string lang = 4;</code>
       */
      public java.lang.String getLang() {
        java.lang.Object ref = lang_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          lang_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Optional language field. Assumed to be "en-US" if not specified.
       * </pre>
       *
       * <code>optional string lang = 4;</code>
       */
      public com.google.protobuf.ByteString
          getLangBytes() {
        java.lang.Object ref = lang_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lang_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Optional language field. Assumed to be "en-US" if not specified.
       * </pre>
       *
       * <code>optional string lang = 4;</code>
       */
      public Builder setLang(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        lang_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional language field. Assumed to be "en-US" if not specified.
       * </pre>
       *
       * <code>optional string lang = 4;</code>
       */
      public Builder clearLang() {
        
        lang_ = getDefaultInstance().getLang();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional language field. Assumed to be "en-US" if not specified.
       * </pre>
       *
       * <code>optional string lang = 4;</code>
       */
      public Builder setLangBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        lang_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.AnalyzeEntitiesOptions)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.AnalyzeEntitiesOptions)
    private static final nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions();
    }

    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AnalyzeEntitiesOptions>
        PARSER = new com.google.protobuf.AbstractParser<AnalyzeEntitiesOptions>() {
      public AnalyzeEntitiesOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AnalyzeEntitiesOptions(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AnalyzeEntitiesOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AnalyzeEntitiesOptions> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface AnalyzeEntitiesRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.AnalyzeEntitiesRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The string to analyze for intent and slots
     * </pre>
     *
     * <code>optional string query = 1;</code>
     */
    java.lang.String getQuery();
    /**
     * <pre>
     * The string to analyze for intent and slots
     * </pre>
     *
     * <code>optional string query = 1;</code>
     */
    com.google.protobuf.ByteString
        getQueryBytes();

    /**
     * <pre>
     * Optional configuration for the request, including providing context from previous turns
     * and hardcoding a domain/language
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.AnalyzeEntitiesOptions options = 2;</code>
     */
    boolean hasOptions();
    /**
     * <pre>
     * Optional configuration for the request, including providing context from previous turns
     * and hardcoding a domain/language
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.AnalyzeEntitiesOptions options = 2;</code>
     */
    nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions getOptions();
    /**
     * <pre>
     * Optional configuration for the request, including providing context from previous turns
     * and hardcoding a domain/language
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.AnalyzeEntitiesOptions options = 2;</code>
     */
    nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptionsOrBuilder getOptionsOrBuilder();
  }
  /**
   * <pre>
   * AnalyzeEntitiesRequest is the input message for the AnalyzeEntities service
   * </pre>
   *
   * Protobuf type {@code nvidia.riva.nlp.AnalyzeEntitiesRequest}
   */
  public  static final class AnalyzeEntitiesRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.AnalyzeEntitiesRequest)
      AnalyzeEntitiesRequestOrBuilder {
    // Use AnalyzeEntitiesRequest.newBuilder() to construct.
    private AnalyzeEntitiesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AnalyzeEntitiesRequest() {
      query_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private AnalyzeEntitiesRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              query_ = s;
              break;
            }
            case 18: {
              nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions.Builder subBuilder = null;
              if (options_ != null) {
                subBuilder = options_.toBuilder();
              }
              options_ = input.readMessage(nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(options_);
                options_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeEntitiesRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeEntitiesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest.class, nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest.Builder.class);
    }

    public static final int QUERY_FIELD_NUMBER = 1;
    private volatile java.lang.Object query_;
    /**
     * <pre>
     * The string to analyze for intent and slots
     * </pre>
     *
     * <code>optional string query = 1;</code>
     */
    public java.lang.String getQuery() {
      java.lang.Object ref = query_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        query_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The string to analyze for intent and slots
     * </pre>
     *
     * <code>optional string query = 1;</code>
     */
    public com.google.protobuf.ByteString
        getQueryBytes() {
      java.lang.Object ref = query_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        query_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OPTIONS_FIELD_NUMBER = 2;
    private nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions options_;
    /**
     * <pre>
     * Optional configuration for the request, including providing context from previous turns
     * and hardcoding a domain/language
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.AnalyzeEntitiesOptions options = 2;</code>
     */
    public boolean hasOptions() {
      return options_ != null;
    }
    /**
     * <pre>
     * Optional configuration for the request, including providing context from previous turns
     * and hardcoding a domain/language
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.AnalyzeEntitiesOptions options = 2;</code>
     */
    public nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions getOptions() {
      return options_ == null ? nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions.getDefaultInstance() : options_;
    }
    /**
     * <pre>
     * Optional configuration for the request, including providing context from previous turns
     * and hardcoding a domain/language
     * </pre>
     *
     * <code>optional .nvidia.riva.nlp.AnalyzeEntitiesOptions options = 2;</code>
     */
    public nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptionsOrBuilder getOptionsOrBuilder() {
      return getOptions();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getQueryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, query_);
      }
      if (options_ != null) {
        output.writeMessage(2, getOptions());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getQueryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, query_);
      }
      if (options_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOptions());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest other = (nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest) obj;

      boolean result = true;
      result = result && getQuery()
          .equals(other.getQuery());
      result = result && (hasOptions() == other.hasOptions());
      if (hasOptions()) {
        result = result && getOptions()
            .equals(other.getOptions());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + QUERY_FIELD_NUMBER;
      hash = (53 * hash) + getQuery().hashCode();
      if (hasOptions()) {
        hash = (37 * hash) + OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getOptions().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * AnalyzeEntitiesRequest is the input message for the AnalyzeEntities service
     * </pre>
     *
     * Protobuf type {@code nvidia.riva.nlp.AnalyzeEntitiesRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.AnalyzeEntitiesRequest)
        nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeEntitiesRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeEntitiesRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest.class, nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        query_ = "";

        if (optionsBuilder_ == null) {
          options_ = null;
        } else {
          options_ = null;
          optionsBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_AnalyzeEntitiesRequest_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest build() {
        nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest buildPartial() {
        nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest result = new nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest(this);
        result.query_ = query_;
        if (optionsBuilder_ == null) {
          result.options_ = options_;
        } else {
          result.options_ = optionsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest other) {
        if (other == nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest.getDefaultInstance()) return this;
        if (!other.getQuery().isEmpty()) {
          query_ = other.query_;
          onChanged();
        }
        if (other.hasOptions()) {
          mergeOptions(other.getOptions());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object query_ = "";
      /**
       * <pre>
       * The string to analyze for intent and slots
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public java.lang.String getQuery() {
        java.lang.Object ref = query_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          query_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The string to analyze for intent and slots
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public com.google.protobuf.ByteString
          getQueryBytes() {
        java.lang.Object ref = query_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          query_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The string to analyze for intent and slots
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public Builder setQuery(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        query_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The string to analyze for intent and slots
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public Builder clearQuery() {
        
        query_ = getDefaultInstance().getQuery();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The string to analyze for intent and slots
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public Builder setQueryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        query_ = value;
        onChanged();
        return this;
      }

      private nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions options_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions, nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions.Builder, nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptionsOrBuilder> optionsBuilder_;
      /**
       * <pre>
       * Optional configuration for the request, including providing context from previous turns
       * and hardcoding a domain/language
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.AnalyzeEntitiesOptions options = 2;</code>
       */
      public boolean hasOptions() {
        return optionsBuilder_ != null || options_ != null;
      }
      /**
       * <pre>
       * Optional configuration for the request, including providing context from previous turns
       * and hardcoding a domain/language
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.AnalyzeEntitiesOptions options = 2;</code>
       */
      public nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions getOptions() {
        if (optionsBuilder_ == null) {
          return options_ == null ? nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions.getDefaultInstance() : options_;
        } else {
          return optionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Optional configuration for the request, including providing context from previous turns
       * and hardcoding a domain/language
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.AnalyzeEntitiesOptions options = 2;</code>
       */
      public Builder setOptions(nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions value) {
        if (optionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          options_ = value;
          onChanged();
        } else {
          optionsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Optional configuration for the request, including providing context from previous turns
       * and hardcoding a domain/language
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.AnalyzeEntitiesOptions options = 2;</code>
       */
      public Builder setOptions(
          nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions.Builder builderForValue) {
        if (optionsBuilder_ == null) {
          options_ = builderForValue.build();
          onChanged();
        } else {
          optionsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Optional configuration for the request, including providing context from previous turns
       * and hardcoding a domain/language
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.AnalyzeEntitiesOptions options = 2;</code>
       */
      public Builder mergeOptions(nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions value) {
        if (optionsBuilder_ == null) {
          if (options_ != null) {
            options_ =
              nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions.newBuilder(options_).mergeFrom(value).buildPartial();
          } else {
            options_ = value;
          }
          onChanged();
        } else {
          optionsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Optional configuration for the request, including providing context from previous turns
       * and hardcoding a domain/language
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.AnalyzeEntitiesOptions options = 2;</code>
       */
      public Builder clearOptions() {
        if (optionsBuilder_ == null) {
          options_ = null;
          onChanged();
        } else {
          options_ = null;
          optionsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Optional configuration for the request, including providing context from previous turns
       * and hardcoding a domain/language
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.AnalyzeEntitiesOptions options = 2;</code>
       */
      public nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions.Builder getOptionsBuilder() {
        
        onChanged();
        return getOptionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Optional configuration for the request, including providing context from previous turns
       * and hardcoding a domain/language
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.AnalyzeEntitiesOptions options = 2;</code>
       */
      public nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptionsOrBuilder getOptionsOrBuilder() {
        if (optionsBuilder_ != null) {
          return optionsBuilder_.getMessageOrBuilder();
        } else {
          return options_ == null ?
              nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions.getDefaultInstance() : options_;
        }
      }
      /**
       * <pre>
       * Optional configuration for the request, including providing context from previous turns
       * and hardcoding a domain/language
       * </pre>
       *
       * <code>optional .nvidia.riva.nlp.AnalyzeEntitiesOptions options = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions, nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions.Builder, nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptionsOrBuilder> 
          getOptionsFieldBuilder() {
        if (optionsBuilder_ == null) {
          optionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions, nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptions.Builder, nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesOptionsOrBuilder>(
                  getOptions(),
                  getParentForChildren(),
                  isClean());
          options_ = null;
        }
        return optionsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.AnalyzeEntitiesRequest)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.AnalyzeEntitiesRequest)
    private static final nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest();
    }

    public static nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<AnalyzeEntitiesRequest>
        PARSER = new com.google.protobuf.AbstractParser<AnalyzeEntitiesRequest>() {
      public AnalyzeEntitiesRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new AnalyzeEntitiesRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<AnalyzeEntitiesRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AnalyzeEntitiesRequest> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.AnalyzeEntitiesRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NaturalQueryRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.NaturalQueryRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The natural language query
     * </pre>
     *
     * <code>optional string query = 1;</code>
     */
    java.lang.String getQuery();
    /**
     * <pre>
     * The natural language query
     * </pre>
     *
     * <code>optional string query = 1;</code>
     */
    com.google.protobuf.ByteString
        getQueryBytes();

    /**
     * <pre>
     * Maximum number of answers to return for the query. Defaults to 1 if not set.
     * </pre>
     *
     * <code>optional uint32 top_n = 2;</code>
     */
    int getTopN();

    /**
     * <pre>
     * Context to search with the above query
     * </pre>
     *
     * <code>optional string context = 3;</code>
     */
    java.lang.String getContext();
    /**
     * <pre>
     * Context to search with the above query
     * </pre>
     *
     * <code>optional string context = 3;</code>
     */
    com.google.protobuf.ByteString
        getContextBytes();
  }
  /**
   * Protobuf type {@code nvidia.riva.nlp.NaturalQueryRequest}
   */
  public  static final class NaturalQueryRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.NaturalQueryRequest)
      NaturalQueryRequestOrBuilder {
    // Use NaturalQueryRequest.newBuilder() to construct.
    private NaturalQueryRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NaturalQueryRequest() {
      query_ = "";
      topN_ = 0;
      context_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private NaturalQueryRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              query_ = s;
              break;
            }
            case 16: {

              topN_ = input.readUInt32();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              context_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NaturalQueryRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NaturalQueryRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.NaturalQueryRequest.class, nvidia.riva.nlp.RivaNlp.NaturalQueryRequest.Builder.class);
    }

    public static final int QUERY_FIELD_NUMBER = 1;
    private volatile java.lang.Object query_;
    /**
     * <pre>
     * The natural language query
     * </pre>
     *
     * <code>optional string query = 1;</code>
     */
    public java.lang.String getQuery() {
      java.lang.Object ref = query_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        query_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The natural language query
     * </pre>
     *
     * <code>optional string query = 1;</code>
     */
    public com.google.protobuf.ByteString
        getQueryBytes() {
      java.lang.Object ref = query_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        query_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOP_N_FIELD_NUMBER = 2;
    private int topN_;
    /**
     * <pre>
     * Maximum number of answers to return for the query. Defaults to 1 if not set.
     * </pre>
     *
     * <code>optional uint32 top_n = 2;</code>
     */
    public int getTopN() {
      return topN_;
    }

    public static final int CONTEXT_FIELD_NUMBER = 3;
    private volatile java.lang.Object context_;
    /**
     * <pre>
     * Context to search with the above query
     * </pre>
     *
     * <code>optional string context = 3;</code>
     */
    public java.lang.String getContext() {
      java.lang.Object ref = context_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        context_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Context to search with the above query
     * </pre>
     *
     * <code>optional string context = 3;</code>
     */
    public com.google.protobuf.ByteString
        getContextBytes() {
      java.lang.Object ref = context_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        context_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getQueryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, query_);
      }
      if (topN_ != 0) {
        output.writeUInt32(2, topN_);
      }
      if (!getContextBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, context_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getQueryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, query_);
      }
      if (topN_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, topN_);
      }
      if (!getContextBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, context_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.NaturalQueryRequest)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.NaturalQueryRequest other = (nvidia.riva.nlp.RivaNlp.NaturalQueryRequest) obj;

      boolean result = true;
      result = result && getQuery()
          .equals(other.getQuery());
      result = result && (getTopN()
          == other.getTopN());
      result = result && getContext()
          .equals(other.getContext());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + QUERY_FIELD_NUMBER;
      hash = (53 * hash) + getQuery().hashCode();
      hash = (37 * hash) + TOP_N_FIELD_NUMBER;
      hash = (53 * hash) + getTopN();
      hash = (37 * hash) + CONTEXT_FIELD_NUMBER;
      hash = (53 * hash) + getContext().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.NaturalQueryRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.NaturalQueryRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nvidia.riva.nlp.NaturalQueryRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.NaturalQueryRequest)
        nvidia.riva.nlp.RivaNlp.NaturalQueryRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NaturalQueryRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NaturalQueryRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.NaturalQueryRequest.class, nvidia.riva.nlp.RivaNlp.NaturalQueryRequest.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.NaturalQueryRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        query_ = "";

        topN_ = 0;

        context_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NaturalQueryRequest_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.NaturalQueryRequest getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.NaturalQueryRequest.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.NaturalQueryRequest build() {
        nvidia.riva.nlp.RivaNlp.NaturalQueryRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.NaturalQueryRequest buildPartial() {
        nvidia.riva.nlp.RivaNlp.NaturalQueryRequest result = new nvidia.riva.nlp.RivaNlp.NaturalQueryRequest(this);
        result.query_ = query_;
        result.topN_ = topN_;
        result.context_ = context_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.NaturalQueryRequest) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.NaturalQueryRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.NaturalQueryRequest other) {
        if (other == nvidia.riva.nlp.RivaNlp.NaturalQueryRequest.getDefaultInstance()) return this;
        if (!other.getQuery().isEmpty()) {
          query_ = other.query_;
          onChanged();
        }
        if (other.getTopN() != 0) {
          setTopN(other.getTopN());
        }
        if (!other.getContext().isEmpty()) {
          context_ = other.context_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.NaturalQueryRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.NaturalQueryRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object query_ = "";
      /**
       * <pre>
       * The natural language query
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public java.lang.String getQuery() {
        java.lang.Object ref = query_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          query_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The natural language query
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public com.google.protobuf.ByteString
          getQueryBytes() {
        java.lang.Object ref = query_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          query_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The natural language query
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public Builder setQuery(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        query_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The natural language query
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public Builder clearQuery() {
        
        query_ = getDefaultInstance().getQuery();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The natural language query
       * </pre>
       *
       * <code>optional string query = 1;</code>
       */
      public Builder setQueryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        query_ = value;
        onChanged();
        return this;
      }

      private int topN_ ;
      /**
       * <pre>
       * Maximum number of answers to return for the query. Defaults to 1 if not set.
       * </pre>
       *
       * <code>optional uint32 top_n = 2;</code>
       */
      public int getTopN() {
        return topN_;
      }
      /**
       * <pre>
       * Maximum number of answers to return for the query. Defaults to 1 if not set.
       * </pre>
       *
       * <code>optional uint32 top_n = 2;</code>
       */
      public Builder setTopN(int value) {
        
        topN_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Maximum number of answers to return for the query. Defaults to 1 if not set.
       * </pre>
       *
       * <code>optional uint32 top_n = 2;</code>
       */
      public Builder clearTopN() {
        
        topN_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object context_ = "";
      /**
       * <pre>
       * Context to search with the above query
       * </pre>
       *
       * <code>optional string context = 3;</code>
       */
      public java.lang.String getContext() {
        java.lang.Object ref = context_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          context_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Context to search with the above query
       * </pre>
       *
       * <code>optional string context = 3;</code>
       */
      public com.google.protobuf.ByteString
          getContextBytes() {
        java.lang.Object ref = context_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          context_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Context to search with the above query
       * </pre>
       *
       * <code>optional string context = 3;</code>
       */
      public Builder setContext(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        context_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Context to search with the above query
       * </pre>
       *
       * <code>optional string context = 3;</code>
       */
      public Builder clearContext() {
        
        context_ = getDefaultInstance().getContext();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Context to search with the above query
       * </pre>
       *
       * <code>optional string context = 3;</code>
       */
      public Builder setContextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        context_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.NaturalQueryRequest)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.NaturalQueryRequest)
    private static final nvidia.riva.nlp.RivaNlp.NaturalQueryRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.NaturalQueryRequest();
    }

    public static nvidia.riva.nlp.RivaNlp.NaturalQueryRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NaturalQueryRequest>
        PARSER = new com.google.protobuf.AbstractParser<NaturalQueryRequest>() {
      public NaturalQueryRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NaturalQueryRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NaturalQueryRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NaturalQueryRequest> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.NaturalQueryRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NaturalQueryResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.NaturalQueryResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * text which answers the query
     * </pre>
     *
     * <code>optional string answer = 1;</code>
     */
    java.lang.String getAnswer();
    /**
     * <pre>
     * text which answers the query
     * </pre>
     *
     * <code>optional string answer = 1;</code>
     */
    com.google.protobuf.ByteString
        getAnswerBytes();

    /**
     * <pre>
     * Score representing confidence in result
     * </pre>
     *
     * <code>optional float score = 2;</code>
     */
    float getScore();
  }
  /**
   * Protobuf type {@code nvidia.riva.nlp.NaturalQueryResult}
   */
  public  static final class NaturalQueryResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.NaturalQueryResult)
      NaturalQueryResultOrBuilder {
    // Use NaturalQueryResult.newBuilder() to construct.
    private NaturalQueryResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NaturalQueryResult() {
      answer_ = "";
      score_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private NaturalQueryResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              answer_ = s;
              break;
            }
            case 21: {

              score_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NaturalQueryResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NaturalQueryResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.NaturalQueryResult.class, nvidia.riva.nlp.RivaNlp.NaturalQueryResult.Builder.class);
    }

    public static final int ANSWER_FIELD_NUMBER = 1;
    private volatile java.lang.Object answer_;
    /**
     * <pre>
     * text which answers the query
     * </pre>
     *
     * <code>optional string answer = 1;</code>
     */
    public java.lang.String getAnswer() {
      java.lang.Object ref = answer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        answer_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * text which answers the query
     * </pre>
     *
     * <code>optional string answer = 1;</code>
     */
    public com.google.protobuf.ByteString
        getAnswerBytes() {
      java.lang.Object ref = answer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        answer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SCORE_FIELD_NUMBER = 2;
    private float score_;
    /**
     * <pre>
     * Score representing confidence in result
     * </pre>
     *
     * <code>optional float score = 2;</code>
     */
    public float getScore() {
      return score_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getAnswerBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, answer_);
      }
      if (score_ != 0F) {
        output.writeFloat(2, score_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getAnswerBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, answer_);
      }
      if (score_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, score_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.NaturalQueryResult)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.NaturalQueryResult other = (nvidia.riva.nlp.RivaNlp.NaturalQueryResult) obj;

      boolean result = true;
      result = result && getAnswer()
          .equals(other.getAnswer());
      result = result && (
          java.lang.Float.floatToIntBits(getScore())
          == java.lang.Float.floatToIntBits(
              other.getScore()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      hash = (37 * hash) + ANSWER_FIELD_NUMBER;
      hash = (53 * hash) + getAnswer().hashCode();
      hash = (37 * hash) + SCORE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getScore());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.NaturalQueryResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nvidia.riva.nlp.NaturalQueryResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.NaturalQueryResult)
        nvidia.riva.nlp.RivaNlp.NaturalQueryResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NaturalQueryResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NaturalQueryResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.NaturalQueryResult.class, nvidia.riva.nlp.RivaNlp.NaturalQueryResult.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.NaturalQueryResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        answer_ = "";

        score_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NaturalQueryResult_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.NaturalQueryResult getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.NaturalQueryResult.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.NaturalQueryResult build() {
        nvidia.riva.nlp.RivaNlp.NaturalQueryResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.NaturalQueryResult buildPartial() {
        nvidia.riva.nlp.RivaNlp.NaturalQueryResult result = new nvidia.riva.nlp.RivaNlp.NaturalQueryResult(this);
        result.answer_ = answer_;
        result.score_ = score_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.NaturalQueryResult) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.NaturalQueryResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.NaturalQueryResult other) {
        if (other == nvidia.riva.nlp.RivaNlp.NaturalQueryResult.getDefaultInstance()) return this;
        if (!other.getAnswer().isEmpty()) {
          answer_ = other.answer_;
          onChanged();
        }
        if (other.getScore() != 0F) {
          setScore(other.getScore());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.NaturalQueryResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.NaturalQueryResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object answer_ = "";
      /**
       * <pre>
       * text which answers the query
       * </pre>
       *
       * <code>optional string answer = 1;</code>
       */
      public java.lang.String getAnswer() {
        java.lang.Object ref = answer_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          answer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * text which answers the query
       * </pre>
       *
       * <code>optional string answer = 1;</code>
       */
      public com.google.protobuf.ByteString
          getAnswerBytes() {
        java.lang.Object ref = answer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          answer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * text which answers the query
       * </pre>
       *
       * <code>optional string answer = 1;</code>
       */
      public Builder setAnswer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        answer_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * text which answers the query
       * </pre>
       *
       * <code>optional string answer = 1;</code>
       */
      public Builder clearAnswer() {
        
        answer_ = getDefaultInstance().getAnswer();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * text which answers the query
       * </pre>
       *
       * <code>optional string answer = 1;</code>
       */
      public Builder setAnswerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        answer_ = value;
        onChanged();
        return this;
      }

      private float score_ ;
      /**
       * <pre>
       * Score representing confidence in result
       * </pre>
       *
       * <code>optional float score = 2;</code>
       */
      public float getScore() {
        return score_;
      }
      /**
       * <pre>
       * Score representing confidence in result
       * </pre>
       *
       * <code>optional float score = 2;</code>
       */
      public Builder setScore(float value) {
        
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Score representing confidence in result
       * </pre>
       *
       * <code>optional float score = 2;</code>
       */
      public Builder clearScore() {
        
        score_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.NaturalQueryResult)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.NaturalQueryResult)
    private static final nvidia.riva.nlp.RivaNlp.NaturalQueryResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.NaturalQueryResult();
    }

    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NaturalQueryResult>
        PARSER = new com.google.protobuf.AbstractParser<NaturalQueryResult>() {
      public NaturalQueryResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NaturalQueryResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NaturalQueryResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NaturalQueryResult> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.NaturalQueryResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NaturalQueryResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:nvidia.riva.nlp.NaturalQueryResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
     */
    java.util.List<nvidia.riva.nlp.RivaNlp.NaturalQueryResult> 
        getResultsList();
    /**
     * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
     */
    nvidia.riva.nlp.RivaNlp.NaturalQueryResult getResults(int index);
    /**
     * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
     */
    int getResultsCount();
    /**
     * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
     */
    java.util.List<? extends nvidia.riva.nlp.RivaNlp.NaturalQueryResultOrBuilder> 
        getResultsOrBuilderList();
    /**
     * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
     */
    nvidia.riva.nlp.RivaNlp.NaturalQueryResultOrBuilder getResultsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code nvidia.riva.nlp.NaturalQueryResponse}
   */
  public  static final class NaturalQueryResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:nvidia.riva.nlp.NaturalQueryResponse)
      NaturalQueryResponseOrBuilder {
    // Use NaturalQueryResponse.newBuilder() to construct.
    private NaturalQueryResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NaturalQueryResponse() {
      results_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private NaturalQueryResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                results_ = new java.util.ArrayList<nvidia.riva.nlp.RivaNlp.NaturalQueryResult>();
                mutable_bitField0_ |= 0x00000001;
              }
              results_.add(
                  input.readMessage(nvidia.riva.nlp.RivaNlp.NaturalQueryResult.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          results_ = java.util.Collections.unmodifiableList(results_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NaturalQueryResponse_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NaturalQueryResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              nvidia.riva.nlp.RivaNlp.NaturalQueryResponse.class, nvidia.riva.nlp.RivaNlp.NaturalQueryResponse.Builder.class);
    }

    public static final int RESULTS_FIELD_NUMBER = 1;
    private java.util.List<nvidia.riva.nlp.RivaNlp.NaturalQueryResult> results_;
    /**
     * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
     */
    public java.util.List<nvidia.riva.nlp.RivaNlp.NaturalQueryResult> getResultsList() {
      return results_;
    }
    /**
     * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
     */
    public java.util.List<? extends nvidia.riva.nlp.RivaNlp.NaturalQueryResultOrBuilder> 
        getResultsOrBuilderList() {
      return results_;
    }
    /**
     * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
     */
    public int getResultsCount() {
      return results_.size();
    }
    /**
     * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
     */
    public nvidia.riva.nlp.RivaNlp.NaturalQueryResult getResults(int index) {
      return results_.get(index);
    }
    /**
     * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
     */
    public nvidia.riva.nlp.RivaNlp.NaturalQueryResultOrBuilder getResultsOrBuilder(
        int index) {
      return results_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < results_.size(); i++) {
        output.writeMessage(1, results_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < results_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, results_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof nvidia.riva.nlp.RivaNlp.NaturalQueryResponse)) {
        return super.equals(obj);
      }
      nvidia.riva.nlp.RivaNlp.NaturalQueryResponse other = (nvidia.riva.nlp.RivaNlp.NaturalQueryResponse) obj;

      boolean result = true;
      result = result && getResultsList()
          .equals(other.getResultsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getResultsCount() > 0) {
        hash = (37 * hash) + RESULTS_FIELD_NUMBER;
        hash = (53 * hash) + getResultsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(nvidia.riva.nlp.RivaNlp.NaturalQueryResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code nvidia.riva.nlp.NaturalQueryResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:nvidia.riva.nlp.NaturalQueryResponse)
        nvidia.riva.nlp.RivaNlp.NaturalQueryResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NaturalQueryResponse_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NaturalQueryResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                nvidia.riva.nlp.RivaNlp.NaturalQueryResponse.class, nvidia.riva.nlp.RivaNlp.NaturalQueryResponse.Builder.class);
      }

      // Construct using nvidia.riva.nlp.RivaNlp.NaturalQueryResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getResultsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return nvidia.riva.nlp.RivaNlp.internal_static_nvidia_riva_nlp_NaturalQueryResponse_descriptor;
      }

      public nvidia.riva.nlp.RivaNlp.NaturalQueryResponse getDefaultInstanceForType() {
        return nvidia.riva.nlp.RivaNlp.NaturalQueryResponse.getDefaultInstance();
      }

      public nvidia.riva.nlp.RivaNlp.NaturalQueryResponse build() {
        nvidia.riva.nlp.RivaNlp.NaturalQueryResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public nvidia.riva.nlp.RivaNlp.NaturalQueryResponse buildPartial() {
        nvidia.riva.nlp.RivaNlp.NaturalQueryResponse result = new nvidia.riva.nlp.RivaNlp.NaturalQueryResponse(this);
        int from_bitField0_ = bitField0_;
        if (resultsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            results_ = java.util.Collections.unmodifiableList(results_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.results_ = results_;
        } else {
          result.results_ = resultsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof nvidia.riva.nlp.RivaNlp.NaturalQueryResponse) {
          return mergeFrom((nvidia.riva.nlp.RivaNlp.NaturalQueryResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(nvidia.riva.nlp.RivaNlp.NaturalQueryResponse other) {
        if (other == nvidia.riva.nlp.RivaNlp.NaturalQueryResponse.getDefaultInstance()) return this;
        if (resultsBuilder_ == null) {
          if (!other.results_.isEmpty()) {
            if (results_.isEmpty()) {
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureResultsIsMutable();
              results_.addAll(other.results_);
            }
            onChanged();
          }
        } else {
          if (!other.results_.isEmpty()) {
            if (resultsBuilder_.isEmpty()) {
              resultsBuilder_.dispose();
              resultsBuilder_ = null;
              results_ = other.results_;
              bitField0_ = (bitField0_ & ~0x00000001);
              resultsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getResultsFieldBuilder() : null;
            } else {
              resultsBuilder_.addAllMessages(other.results_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        nvidia.riva.nlp.RivaNlp.NaturalQueryResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (nvidia.riva.nlp.RivaNlp.NaturalQueryResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<nvidia.riva.nlp.RivaNlp.NaturalQueryResult> results_ =
        java.util.Collections.emptyList();
      private void ensureResultsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          results_ = new java.util.ArrayList<nvidia.riva.nlp.RivaNlp.NaturalQueryResult>(results_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.NaturalQueryResult, nvidia.riva.nlp.RivaNlp.NaturalQueryResult.Builder, nvidia.riva.nlp.RivaNlp.NaturalQueryResultOrBuilder> resultsBuilder_;

      /**
       * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
       */
      public java.util.List<nvidia.riva.nlp.RivaNlp.NaturalQueryResult> getResultsList() {
        if (resultsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(results_);
        } else {
          return resultsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
       */
      public int getResultsCount() {
        if (resultsBuilder_ == null) {
          return results_.size();
        } else {
          return resultsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.NaturalQueryResult getResults(int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);
        } else {
          return resultsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
       */
      public Builder setResults(
          int index, nvidia.riva.nlp.RivaNlp.NaturalQueryResult value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.set(index, value);
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
       */
      public Builder setResults(
          int index, nvidia.riva.nlp.RivaNlp.NaturalQueryResult.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.set(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
       */
      public Builder addResults(nvidia.riva.nlp.RivaNlp.NaturalQueryResult value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
       */
      public Builder addResults(
          int index, nvidia.riva.nlp.RivaNlp.NaturalQueryResult value) {
        if (resultsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureResultsIsMutable();
          results_.add(index, value);
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
       */
      public Builder addResults(
          nvidia.riva.nlp.RivaNlp.NaturalQueryResult.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
       */
      public Builder addResults(
          int index, nvidia.riva.nlp.RivaNlp.NaturalQueryResult.Builder builderForValue) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.add(index, builderForValue.build());
          onChanged();
        } else {
          resultsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
       */
      public Builder addAllResults(
          java.lang.Iterable<? extends nvidia.riva.nlp.RivaNlp.NaturalQueryResult> values) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, results_);
          onChanged();
        } else {
          resultsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
       */
      public Builder clearResults() {
        if (resultsBuilder_ == null) {
          results_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          resultsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
       */
      public Builder removeResults(int index) {
        if (resultsBuilder_ == null) {
          ensureResultsIsMutable();
          results_.remove(index);
          onChanged();
        } else {
          resultsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.NaturalQueryResult.Builder getResultsBuilder(
          int index) {
        return getResultsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.NaturalQueryResultOrBuilder getResultsOrBuilder(
          int index) {
        if (resultsBuilder_ == null) {
          return results_.get(index);  } else {
          return resultsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
       */
      public java.util.List<? extends nvidia.riva.nlp.RivaNlp.NaturalQueryResultOrBuilder> 
           getResultsOrBuilderList() {
        if (resultsBuilder_ != null) {
          return resultsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(results_);
        }
      }
      /**
       * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.NaturalQueryResult.Builder addResultsBuilder() {
        return getResultsFieldBuilder().addBuilder(
            nvidia.riva.nlp.RivaNlp.NaturalQueryResult.getDefaultInstance());
      }
      /**
       * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
       */
      public nvidia.riva.nlp.RivaNlp.NaturalQueryResult.Builder addResultsBuilder(
          int index) {
        return getResultsFieldBuilder().addBuilder(
            index, nvidia.riva.nlp.RivaNlp.NaturalQueryResult.getDefaultInstance());
      }
      /**
       * <code>repeated .nvidia.riva.nlp.NaturalQueryResult results = 1;</code>
       */
      public java.util.List<nvidia.riva.nlp.RivaNlp.NaturalQueryResult.Builder> 
           getResultsBuilderList() {
        return getResultsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          nvidia.riva.nlp.RivaNlp.NaturalQueryResult, nvidia.riva.nlp.RivaNlp.NaturalQueryResult.Builder, nvidia.riva.nlp.RivaNlp.NaturalQueryResultOrBuilder> 
          getResultsFieldBuilder() {
        if (resultsBuilder_ == null) {
          resultsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              nvidia.riva.nlp.RivaNlp.NaturalQueryResult, nvidia.riva.nlp.RivaNlp.NaturalQueryResult.Builder, nvidia.riva.nlp.RivaNlp.NaturalQueryResultOrBuilder>(
                  results_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          results_ = null;
        }
        return resultsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:nvidia.riva.nlp.NaturalQueryResponse)
    }

    // @@protoc_insertion_point(class_scope:nvidia.riva.nlp.NaturalQueryResponse)
    private static final nvidia.riva.nlp.RivaNlp.NaturalQueryResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new nvidia.riva.nlp.RivaNlp.NaturalQueryResponse();
    }

    public static nvidia.riva.nlp.RivaNlp.NaturalQueryResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NaturalQueryResponse>
        PARSER = new com.google.protobuf.AbstractParser<NaturalQueryResponse>() {
      public NaturalQueryResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NaturalQueryResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NaturalQueryResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NaturalQueryResponse> getParserForType() {
      return PARSER;
    }

    public nvidia.riva.nlp.RivaNlp.NaturalQueryResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_NLPModelParams_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_NLPModelParams_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_TextTransformRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_TextTransformRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_TextTransformResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_TextTransformResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_TextClassRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_TextClassRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_Classification_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_Classification_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_Span_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_Span_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_ClassificationResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_ClassificationResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_TextClassResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_TextClassResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_TokenClassRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_TokenClassRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_TokenClassValue_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_TokenClassValue_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_TokenClassSequence_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_TokenClassSequence_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_TokenClassResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_TokenClassResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_AnalyzeIntentContext_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_AnalyzeIntentContext_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_AnalyzeIntentOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_AnalyzeIntentOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_AnalyzeIntentRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_AnalyzeIntentRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_AnalyzeIntentResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_AnalyzeIntentResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_AnalyzeEntitiesOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_AnalyzeEntitiesOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_AnalyzeEntitiesRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_AnalyzeEntitiesRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_NaturalQueryRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_NaturalQueryRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_NaturalQueryResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_NaturalQueryResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_nvidia_riva_nlp_NaturalQueryResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_nvidia_riva_nlp_NaturalQueryResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016riva_nlp.proto\022\017nvidia.riva.nlp\"$\n\016NLP" +
      "ModelParams\022\022\n\nmodel_name\030\001 \001(\t\"c\n\024TextT" +
      "ransformRequest\022\014\n\004text\030\001 \003(\t\022\r\n\005top_n\030\002" +
      " \001(\r\022.\n\005model\030\003 \001(\0132\037.nvidia.riva.nlp.NL" +
      "PModelParams\"%\n\025TextTransformResponse\022\014\n" +
      "\004text\030\001 \003(\t\"_\n\020TextClassRequest\022\014\n\004text\030" +
      "\001 \003(\t\022\r\n\005top_n\030\002 \001(\r\022.\n\005model\030\003 \001(\0132\037.nv" +
      "idia.riva.nlp.NLPModelParams\"3\n\016Classifi" +
      "cation\022\022\n\nclass_name\030\001 \001(\t\022\r\n\005score\030\002 \001(" +
      "\002\"\"\n\004Span\022\r\n\005start\030\001 \001(\r\022\013\n\003end\030\002 \001(\r\"G\n",
      "\024ClassificationResult\022/\n\006labels\030\001 \003(\0132\037." +
      "nvidia.riva.nlp.Classification\"K\n\021TextCl" +
      "assResponse\0226\n\007results\030\001 \003(\0132%.nvidia.ri" +
      "va.nlp.ClassificationResult\"`\n\021TokenClas" +
      "sRequest\022\014\n\004text\030\001 \003(\t\022\r\n\005top_n\030\003 \001(\r\022.\n" +
      "\005model\030\004 \001(\0132\037.nvidia.riva.nlp.NLPModelP" +
      "arams\"u\n\017TokenClassValue\022\r\n\005token\030\001 \001(\t\022" +
      ".\n\005label\030\002 \003(\0132\037.nvidia.riva.nlp.Classif" +
      "ication\022#\n\004span\030\003 \003(\0132\025.nvidia.riva.nlp." +
      "Span\"G\n\022TokenClassSequence\0221\n\007results\030\001 ",
      "\003(\0132 .nvidia.riva.nlp.TokenClassValue\"J\n" +
      "\022TokenClassResponse\0224\n\007results\030\001 \003(\0132#.n" +
      "vidia.riva.nlp.TokenClassSequence\"\026\n\024Ana" +
      "lyzeIntentContext\"\224\001\n\024AnalyzeIntentOptio" +
      "ns\022\031\n\017previous_intent\030\001 \001(\tH\000\0228\n\007vectors" +
      "\030\002 \001(\0132%.nvidia.riva.nlp.AnalyzeIntentCo" +
      "ntextH\000\022\016\n\006domain\030\003 \001(\t\022\014\n\004lang\030\004 \001(\tB\t\n" +
      "\007context\"]\n\024AnalyzeIntentRequest\022\r\n\005quer" +
      "y\030\001 \001(\t\0226\n\007options\030\002 \001(\0132%.nvidia.riva.n" +
      "lp.AnalyzeIntentOptions\"\276\001\n\025AnalyzeInten",
      "tResponse\022/\n\006intent\030\001 \001(\0132\037.nvidia.riva." +
      "nlp.Classification\022/\n\005slots\030\002 \003(\0132 .nvid" +
      "ia.riva.nlp.TokenClassValue\022\022\n\ndomain_st" +
      "r\030\003 \001(\t\022/\n\006domain\030\004 \001(\0132\037.nvidia.riva.nl" +
      "p.Classification\"&\n\026AnalyzeEntitiesOptio" +
      "ns\022\014\n\004lang\030\004 \001(\t\"a\n\026AnalyzeEntitiesReque" +
      "st\022\r\n\005query\030\001 \001(\t\0228\n\007options\030\002 \001(\0132\'.nvi" +
      "dia.riva.nlp.AnalyzeEntitiesOptions\"D\n\023N" +
      "aturalQueryRequest\022\r\n\005query\030\001 \001(\t\022\r\n\005top" +
      "_n\030\002 \001(\r\022\017\n\007context\030\003 \001(\t\"3\n\022NaturalQuer",
      "yResult\022\016\n\006answer\030\001 \001(\t\022\r\n\005score\030\002 \001(\002\"L" +
      "\n\024NaturalQueryResponse\0224\n\007results\030\001 \003(\0132" +
      "#.nvidia.riva.nlp.NaturalQueryResult2\271\005\n" +
      "\031RivaLanguageUnderstanding\022W\n\014ClassifyTe" +
      "xt\022!.nvidia.riva.nlp.TextClassRequest\032\"." +
      "nvidia.riva.nlp.TextClassResponse\"\000\022[\n\016C" +
      "lassifyTokens\022\".nvidia.riva.nlp.TokenCla" +
      "ssRequest\032#.nvidia.riva.nlp.TokenClassRe" +
      "sponse\"\000\022`\n\rTransformText\022%.nvidia.riva." +
      "nlp.TextTransformRequest\032&.nvidia.riva.n",
      "lp.TextTransformResponse\"\000\022a\n\017AnalyzeEnt" +
      "ities\022\'.nvidia.riva.nlp.AnalyzeEntitiesR" +
      "equest\032#.nvidia.riva.nlp.TokenClassRespo" +
      "nse\"\000\022`\n\rAnalyzeIntent\022%.nvidia.riva.nlp" +
      ".AnalyzeIntentRequest\032&.nvidia.riva.nlp." +
      "AnalyzeIntentResponse\"\000\022`\n\rPunctuateText" +
      "\022%.nvidia.riva.nlp.TextTransformRequest\032" +
      "&.nvidia.riva.nlp.TextTransformResponse\"" +
      "\000\022]\n\014NaturalQuery\022$.nvidia.riva.nlp.Natu" +
      "ralQueryRequest\032%.nvidia.riva.nlp.Natura",
      "lQueryResponse\"\000B\033Z\026nvidia.com/riva_spee" +
      "ch\370\001\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_nvidia_riva_nlp_NLPModelParams_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_nvidia_riva_nlp_NLPModelParams_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_NLPModelParams_descriptor,
        new java.lang.String[] { "ModelName", });
    internal_static_nvidia_riva_nlp_TextTransformRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_nvidia_riva_nlp_TextTransformRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_TextTransformRequest_descriptor,
        new java.lang.String[] { "Text", "TopN", "Model", });
    internal_static_nvidia_riva_nlp_TextTransformResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_nvidia_riva_nlp_TextTransformResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_TextTransformResponse_descriptor,
        new java.lang.String[] { "Text", });
    internal_static_nvidia_riva_nlp_TextClassRequest_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_nvidia_riva_nlp_TextClassRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_TextClassRequest_descriptor,
        new java.lang.String[] { "Text", "TopN", "Model", });
    internal_static_nvidia_riva_nlp_Classification_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_nvidia_riva_nlp_Classification_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_Classification_descriptor,
        new java.lang.String[] { "ClassName", "Score", });
    internal_static_nvidia_riva_nlp_Span_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_nvidia_riva_nlp_Span_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_Span_descriptor,
        new java.lang.String[] { "Start", "End", });
    internal_static_nvidia_riva_nlp_ClassificationResult_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_nvidia_riva_nlp_ClassificationResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_ClassificationResult_descriptor,
        new java.lang.String[] { "Labels", });
    internal_static_nvidia_riva_nlp_TextClassResponse_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_nvidia_riva_nlp_TextClassResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_TextClassResponse_descriptor,
        new java.lang.String[] { "Results", });
    internal_static_nvidia_riva_nlp_TokenClassRequest_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_nvidia_riva_nlp_TokenClassRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_TokenClassRequest_descriptor,
        new java.lang.String[] { "Text", "TopN", "Model", });
    internal_static_nvidia_riva_nlp_TokenClassValue_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_nvidia_riva_nlp_TokenClassValue_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_TokenClassValue_descriptor,
        new java.lang.String[] { "Token", "Label", "Span", });
    internal_static_nvidia_riva_nlp_TokenClassSequence_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_nvidia_riva_nlp_TokenClassSequence_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_TokenClassSequence_descriptor,
        new java.lang.String[] { "Results", });
    internal_static_nvidia_riva_nlp_TokenClassResponse_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_nvidia_riva_nlp_TokenClassResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_TokenClassResponse_descriptor,
        new java.lang.String[] { "Results", });
    internal_static_nvidia_riva_nlp_AnalyzeIntentContext_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_nvidia_riva_nlp_AnalyzeIntentContext_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_AnalyzeIntentContext_descriptor,
        new java.lang.String[] { });
    internal_static_nvidia_riva_nlp_AnalyzeIntentOptions_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_nvidia_riva_nlp_AnalyzeIntentOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_AnalyzeIntentOptions_descriptor,
        new java.lang.String[] { "PreviousIntent", "Vectors", "Domain", "Lang", "Context", });
    internal_static_nvidia_riva_nlp_AnalyzeIntentRequest_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_nvidia_riva_nlp_AnalyzeIntentRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_AnalyzeIntentRequest_descriptor,
        new java.lang.String[] { "Query", "Options", });
    internal_static_nvidia_riva_nlp_AnalyzeIntentResponse_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_nvidia_riva_nlp_AnalyzeIntentResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_AnalyzeIntentResponse_descriptor,
        new java.lang.String[] { "Intent", "Slots", "DomainStr", "Domain", });
    internal_static_nvidia_riva_nlp_AnalyzeEntitiesOptions_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_nvidia_riva_nlp_AnalyzeEntitiesOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_AnalyzeEntitiesOptions_descriptor,
        new java.lang.String[] { "Lang", });
    internal_static_nvidia_riva_nlp_AnalyzeEntitiesRequest_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_nvidia_riva_nlp_AnalyzeEntitiesRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_AnalyzeEntitiesRequest_descriptor,
        new java.lang.String[] { "Query", "Options", });
    internal_static_nvidia_riva_nlp_NaturalQueryRequest_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_nvidia_riva_nlp_NaturalQueryRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_NaturalQueryRequest_descriptor,
        new java.lang.String[] { "Query", "TopN", "Context", });
    internal_static_nvidia_riva_nlp_NaturalQueryResult_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_nvidia_riva_nlp_NaturalQueryResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_NaturalQueryResult_descriptor,
        new java.lang.String[] { "Answer", "Score", });
    internal_static_nvidia_riva_nlp_NaturalQueryResponse_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_nvidia_riva_nlp_NaturalQueryResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_nvidia_riva_nlp_NaturalQueryResponse_descriptor,
        new java.lang.String[] { "Results", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
